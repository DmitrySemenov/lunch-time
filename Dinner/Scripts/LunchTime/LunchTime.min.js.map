{"version":3,"file":"LunchTime.min.js","sources":["require.config.js","application.config.js","application.routes.js","application.providers.js","application.events.js","application.start.js","../framework//extensions/string.extensions.js","../framework//extensions/boolean.extensions.js","../framework//extensions/extensions.js","../framework//assert.js","../framework//utils.js","../framework//class.js","core/controllers/confirmController.js","core/controllers/controllers.js","core/services/services.js","core/filters/formatTimeSpanFilter.js","core/filters/filters.js","core/directives/isLoading.js","core/directives/toggle.js","core/directives/fileUpload.js","core/directives/fileUploadPreviewImage.js","core/directives/popoverHtml.js","core/directives/popoverHtmlPopup.js","core/directives/srcBig.js","core/directives/directives.js","core/providers/qDecorator.js","core/providers/providers.js","core/templates/popoverHtml.tmpl.html!text","core/templates/templates.js","core/core.js","common/controllers/controllers.js","common/models/category.js","common/models/categories.js","common/services/categoryService.js","common/models/categoryMenu.js","common/services/menuService.js","common/models/course.js","common/services/commonApiMappingService.js","common/services/services.js","common/filters/weight.js","common/filters/filters.js","common/templates/menuCategoryTitle.tmpl.html!text","common/templates/categoryIcon.tmpl.html!text","common/templates/templates.js","common/directives/menuCategoryTitle.js","common/directives/categoryIcon.js","common/directives/directives.js","common/providers/providers.js","common/common.js","user/user.config.js","user/user.routes.js","user/menu/controllers/userManageOrdersController.js","user/menu/controllers/anonymousUserMenuController.js","user/menu/controllers/menu/userMenuController.js","user/menu/controllers/menu/userMenuCourseController.js","user/menu/controllers/menu/userMenuViewController.js","user/menu/controllers/orders/userOrdersController.js","user/menu/controllers/orders/userOrderController.js","user/menu/controllers/controllers.js","user/menu/models/orderOption.js","user/menu/services/userMenuService.js","user/menu/models/box.js","user/menu/models/orderedBoxes.js","user/menu/services/orderService.js","common/models/order.js","user/menu/services/userMenuApiService.js","core/models/timeSpan.js","user/menu/models/menuData.js","user/menu/services/userMenuApiMappingService.js","user/menu/models/boxCapacityValidationResult.js","user/menu/services/boxCapacityService.js","user/menu/services/services.js","user/menu/filters/boxTitleFilter.js","user/menu/filters/filters.js","user/menu/directives/menu/userMenu.js","user/menu/directives/menu/userMenuCourse.js","user/menu/directives/menu/userMenuView.js","user/menu/directives/orders/userOrders.js","user/menu/directives/orders/userOrder.js","user/menu/directives/directives.js","user/menu/providers/providers.js","user/menu/templates/templates.js","user/menu/menu.js","user/user.js","admin/admin.config.js","admin/admin.routes.js","admin/admin.events.js","admin/menu/controllers/adminManageMenuController.js","admin/menu/controllers/adminAddCourseToMenuController.js","admin/menu/controllers/menu/adminMenuController.js","admin/menu/controllers/menu/adminMenuCourseController.js","admin/menu/controllers/menu/adminMenuCourseChangeMaxOrdersController.js","admin/menu/controllers/courses/adminCoursesController.js","admin/menu/controllers/courses/adminCoursesCategoryController.js","admin/menu/controllers/courses/adminCourseController.js","admin/menu/controllers/courses/adminCourseEditController.js","admin/menu/controllers/controllers.js","admin/menu/services/adminMenuApiService.js","admin/menu/models/menuData.js","admin/menu/services/adminMenuApiMappingService.js","admin/menu/services/services.js","admin/menu/filters/filters.js","admin/menu/directives/menu/adminMenu.js","admin/menu/directives/menu/adminMenuCourse.js","admin/menu/directives/courses/adminCourses.js","admin/menu/directives/courses/adminCoursesCategory.js","admin/menu/directives/courses/adminCourse.js","admin/menu/directives/directives.js","admin/menu/providers/providers.js","admin/menu/templates/templates.js","admin/menu/menu.js","admin/sales/controllers/adminSalesController.js","admin/sales/controllers/adminSalesCoursesStatsController.js","admin/sales/models/activeUserOrder.js","admin/sales/controllers/adminSalesUsersOrdersController.js","admin/sales/controllers/adminSalesUserOrderController.js","admin/sales/controllers/controllers.js","admin/sales/models/orderedCourseStats.js","admin/sales/models/salesStats.js","admin/sales/services/adminSalesService.js","admin/sales/services/adminSalesApiService.js","common/models/user.js","admin/sales/models/userOrder.js","admin/sales/models/salesData.js","admin/sales/services/adminSalesApiMappingService.js","admin/sales/services/adminSalesCardReaderService.js","admin/sales/services/adminSalesQueueApiService.js","admin/sales/services/adminSalesDateWatcherService.js","admin/sales/services/services.js","admin/sales/filters/filters.js","admin/sales/directives/adminSalesCoursesStats.js","admin/sales/directives/adminSalesUsersOrders.js","admin/sales/directives/adminSalesUserOrder.js","admin/sales/directives/directives.js","admin/sales/providers/providers.js","admin/sales/templates/templates.js","admin/sales/sales.start.js","admin/sales/sales.js","admin/admin.js","application.js"],"names":[],"mappings":"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","sourcesContent":["\ndefine('require.config',[], function() {\r\n    'use strict';\r\n\r\n    return {\r\n        getConfig: function (applicationUrl, libs, framework) {\r\n            var date = new Date();\r\n            var cacheKey = 'cache=' + date.getFullYear() + '-' + date.getMonth() + '-' + date.getDate();\r\n\r\n            return {\r\n                baseUrl: applicationUrl,\r\n                urlArgs: cacheKey,\r\n                waitSeconds: 600, // Increasing timeout for IE.\r\n                shim: {\r\n                    jquery: {\r\n                        exports: 'jQuery'\r\n                    },\r\n                    underscore: {\r\n                        exports: '_'\r\n                    },\r\n                    bootstrap: {\r\n                        deps: ['jquery']\r\n                    },\r\n                    angular: {\r\n                        exports: 'angular',\r\n                        deps: ['jquery']\r\n                    },\r\n                    'angular-resource': {\r\n                        deps: ['angular']\r\n                    },\r\n                    'angular-route': {\r\n                        deps: ['angular']\r\n                    },\r\n                    'angular-bootstrap': {\r\n                        deps: ['angular']\r\n                    },\r\n                    'angular-sanitize': {\r\n                        deps: ['angular']\r\n                    },\r\n                    'angular-locale': {\r\n                        deps: ['angular']\r\n                    },   \r\n                    'angular-touch': {\r\n                        deps: ['angular']\r\n                    },\r\n                    ladda: {\r\n                        deps: ['jquery', 'spin']\r\n                    },\r\n                    spin: {\r\n                        deps: ['jquery']\r\n                    },  \r\n                    glisse: {\r\n                        deps: ['jquery']\r\n                    },\r\n                    plupload: {\r\n                        exports: 'plupload'\r\n                    }\r\n                },\r\n                paths: {\r\n                    angular: libs + '/angular/angular',\r\n                    'angular-resource': libs + '/angular/angular-resource',\r\n                    'angular-route': libs + '/angular/angular-route',\r\n                    'angular-sanitize': libs + '/angular/angular-sanitize',\r\n                    'angular-locale': libs + '/angular/i18n/angular-locale_ru-ru',           \r\n                    'angular-touch': libs + '/angular/angular-touch',\r\n                    bootstrap: libs + '/bootstrap/bootstrap',\r\n                    'angular-bootstrap': libs + '/bootstrap/ui-bootstrap-tpls',\r\n                    jquery: libs + '/jquery/jquery',\r\n                    'jquery-form': libs + '/jquery/jquery.form',\r\n                    underscore: libs + '/underscore/underscore',\r\n                    text: libs + '/require/text',\r\n                    ladda: libs + '/ladda/ladda',\r\n                    spin: libs + '/spin/spin',\r\n                    moment: libs + '/moment/moment',\r\n                    toastr: libs + '/toastr/toastr',\r\n                    plupload: libs + '/plupload/plupload.full.min',\r\n                    glisse: libs + '/glisse/glisse',\r\n                    framework: framework\r\n                }\r\n            };\r\n        }\r\n    };\r\n});","\n/**\r\n * Lunch Time Application Configuration.\r\n * @file application.config.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('application.config',[], function () {\r\n    'use strict';\r\n\r\n    var applicationUrl = '/';\r\n    var imagesUrl = '/Images';\r\n    var apiUrl = applicationUrl + 'Api';\r\n\r\n    var defaultCompanyId = '1';\r\n\r\n    return {\r\n        defaultCompanyId: defaultCompanyId,\r\n        urls: {\r\n            application: applicationUrl,\r\n            api: {\r\n                baseUrl: apiUrl,\r\n                courseThumbnail: apiUrl + '/coursepicture/thumbnail?companyid=' + defaultCompanyId + '&courseid={0}',\r\n                coursePicture: apiUrl + '/coursepicture/image?companyid=' + defaultCompanyId + '&courseid={0}'\r\n            },\r\n            views: {\r\n            \r\n            },\r\n            images: {\r\n                images: imagesUrl,\r\n                categoriesIcons: imagesUrl + '/CourseType/'\r\n            }\r\n        },\r\n        dialogOptions: {\r\n            backdrop: true,\r\n            keyboard: true,\r\n            backdropClick: true,\r\n            dialogFade: false\r\n            /*dialogClass: 'modal'*/\r\n        },\r\n        plugins: {\r\n            plupload: {\r\n                runtimes: 'html5,flash,silverlight,html4',\r\n                flash_swf_url: '/scripts/Libs/plupload/Moxie.swf',\r\n                silverlight_xap_url: '/scripts/Libs/plupload/Moxie.xap',\r\n                mimeTypes: {\r\n                    image: {\r\n                        title: 'Image files',\r\n                        extensions: 'jpg,gif,png'\r\n                    }\r\n                }\r\n            },\r\n            glisse: {\r\n                speed: 500,\r\n                effect: 'bounce'\r\n            }\r\n        }\r\n    };\r\n});","\n/**\r\n * Lunch Time Application Routes.\r\n * @file application.routes.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('application.routes',[], function () {\r\n    'use strict';\r\n    \r\n    var applicationRoutes = ['$routeProvider', '$locationProvider', 'config',\r\n        function ($routeProvider, $locationProvider, config) {\r\n           \r\n            var applicationUrl = config.urls.application;\r\n\r\n            $routeProvider.otherwise({ redirectTo: applicationUrl });\r\n\r\n            $locationProvider.html5Mode(true);\r\n        }];\r\n\r\n    return applicationRoutes;\r\n});","\n/**\r\n * Application Providers.\r\n * @file application.providers.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('application.providers',[], function() {\r\n    'use strict';\r\n\r\n    var applicationProviders = ['$httpProvider', function ($httpProvider) {        \r\n        // 'X-Requested-With':'XMLHttpRequest' header is required by asp.net mvc to determine if it is a ajax request.\r\n        $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\n    }];\r\n\r\n    return applicationProviders;\r\n});","\n/**\r\n * application.events.\r\n * @file application.events.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('application.events',[], function() {\r\n    'use strict';\r\n\r\n    /** \r\n    * Application events.\r\n    * @enum {string}\r\n    */\r\n    var events = {};\r\n\r\n    return events;\r\n});","\n/**\r\n * Application Start handlers.\r\n * @file application.start.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('application.start',['underscore', 'application.events'], function (_, events) {\r\n    'use strict';\r\n\r\n    var applicationStart = {   \r\n      \r\n    };\r\n\r\n    return applicationStart;\r\n});","\ndefine('framework/extensions/string.extensions',[], function() {\r\n    'use strict';\r\n\r\n    if (!String.prototype.format)\r\n        String.prototype.format = function() {\r\n            var string = this,\r\n                index = arguments.length;\r\n\r\n            while (index--) {\r\n                string = string.replace(new RegExp('\\\\{' + index + '\\\\}', 'gm'), arguments[index]);\r\n            }\r\n            return string;\r\n        };\r\n\r\n    if (!String.isNullOrEmpty)\r\n        String.isNullOrEmpty = function(string) {\r\n            if (!string || string.length === 0)\r\n                return true;\r\n\r\n            return false;\r\n        };\r\n});","\ndefine('framework/extensions/boolean.extensions',[], function () {\r\n    'use strict';\r\n\r\n    if (!Boolean.parse)\r\n        Boolean.parse = function (value) {\r\n            if (typeof(value) === 'string' && value.length === 0) {\r\n                throw Error('Boolean.parse: Cannot convert empty string to boolean.');\r\n            }\r\n\r\n            switch (value.toLowerCase()) {\r\n                case 'true':\r\n                    return true;\r\n                case 'false':\r\n                    return false;\r\n                default:\r\n                    throw Error('Boolean.parse: Cannot convert string \"' + value + '\" to boolean.');\r\n            }\r\n        };\r\n});","\ndefine('framework/extensions/extensions',['framework/extensions/string.extensions', 'framework/extensions/boolean.extensions'], function () {\r\n    'use strict';\r\n    \r\n    // Just loading extensions.\r\n});","\ndefine('framework/assert',['underscore', 'framework/extensions/extensions'], function(_) {\r\n    'use strict';\r\n\r\n    var assert = {\r\n        isNotNull: function (value, name, message) {\r\n            if (value === undefined || value === null) {\r\n                var errorMessage = message || (name\r\n                    ? '\"{0}\" cannot be undefined.'\r\n                    : 'Specified value cannot be undefined.');\r\n                throw new Error(errorMessage.format(name));\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        isFunction: function (value, name, message) {\r\n            if (!_.isFunction(value)) {\r\n                var errorMessage = message || (name\r\n                    ? '\"{0}\" is not a function.'\r\n                    : 'Specified value is not a function.');\r\n                throw new Error(errorMessage.format(name));\r\n            }\r\n\r\n            return this;\r\n        },     \r\n        \r\n        isString: function (value, name, message) {\r\n            if (!_.isString(value)) {\r\n                var errorMessage = message || (name\r\n                    ? '\"{0}\" is not a string.'\r\n                    : 'Specified value is not a string.');\r\n                throw new Error(errorMessage.format(name));\r\n            }\r\n\r\n            return this;\r\n        },\r\n        \r\n        isArray: function (value, name, message) {\r\n            if (!_.isArray(value)) {\r\n                var errorMessage = message || (name\r\n                    ? '\"{0}\" is not a array.'\r\n                    : 'Specified value is not a array.');\r\n                throw new Error(errorMessage.format(name));\r\n            }\r\n\r\n            return this;\r\n        },\r\n        \r\n        isObject: function(value, name, message) {\r\n            if (!_.isObject(value)) {\r\n                var errorMessage = message || (name\r\n                    ? '\"{0}\" is not a object.'\r\n                    : 'Specified value is not a object.');\r\n                throw new Error(errorMessage.format(name));\r\n            }\r\n\r\n            return this;\r\n        },\r\n        \r\n        isNumber: function(value, name, message) {\r\n            if (!_.isNumber(value)) {\r\n                var errorMessage = message || (name\r\n                    ? '\"{0}\" is not a number.'\r\n                    : 'Specified value is not a number.');\r\n                throw new Error(errorMessage.format(name));\r\n            }\r\n\r\n            return this;\r\n        },\r\n        \r\n        isTrue: function(value, name, message) {\r\n            if (!value) {\r\n                var errorMessage = message || (name\r\n                    ? '\"{0}\" is not a \"true\".'\r\n                    : 'Specified value is not a \"true\".');\r\n                throw new Error(errorMessage.format(name));\r\n            }\r\n\r\n            return this;\r\n        },\r\n        \r\n        isFalse: function(value, name, message) {\r\n            if (value) {\r\n                var errorMessage = message || (name\r\n                    ? '\"{0}\" is not a \"false\".'\r\n                    : 'Specified value is not a \"false\".');\r\n                throw new Error(errorMessage.format(name));\r\n            }\r\n\r\n            return this;\r\n        },\r\n        \r\n        isMatch: function(value, pattern, name, message) {\r\n            if (!pattern.test(value)) {\r\n                var errorMessage = message || (name\r\n                    ? '\"{0}\" is not match pattern.'\r\n                    : 'Specified value is not match pattern.');\r\n                throw new Error(errorMessage.format(name));\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    return assert;\r\n});","\ndefine('framework/utils',['jquery', 'underscore', 'framework/extensions/extensions'], function ($, _) {\r\n    'use strict';\r\n\r\n    var utils = {};\r\n    var staticArray = []; // Static array.\r\n\r\n    /** Convert specified source to the array. */\r\n    utils.toArray = function (source, from) {\r\n        from = from || 0;\r\n        return staticArray.slice.call(source, from);\r\n    };\r\n\r\n    /** Extend target with a specified members. */\r\n    utils.extend = function (target, members, recurcive) {\r\n        if (recurcive) {\r\n            return utils.extendRecurcive(target, members);\r\n        } else {\r\n            return _.extend(target, members);\r\n        }\r\n    };\r\n\r\n    utils.extendRecurcive = function (target, members) {\r\n        var isExtendable = function (obj) {\r\n            return _.isObject(obj) && !_.isArray(obj);\r\n        };\r\n\r\n        var isDefined = function (obj) {\r\n            return !_.isUndefined(obj) && !_.isNull(obj);\r\n        };\r\n\r\n        for (var member in members) {\r\n            if (!members.hasOwnProperty(member) || !isDefined(members[member]))\r\n                continue;\r\n\r\n            if (isDefined(target[member])) {\r\n                if (isExtendable(members[member])) {\r\n                    utils.extendRecurcive(target[member], members[member]);\r\n                }\r\n            } else {\r\n                target[member] = members[member];\r\n            }\r\n        }\r\n\r\n        return target;\r\n    };\r\n\r\n    /** Merge specified objects members in a single object */\r\n    utils.merge = function (/*[arguments]*/) {\r\n        var target = {};\r\n        for (var index = 0; index < arguments.length; index++) {\r\n            _.extend(target, arguments[index]);\r\n        }\r\n\r\n        return target;\r\n    };\r\n\r\n    /** Escape HTML text */\r\n    utils.escape = function(text) {\r\n        var escapedText = $('<div/>').text(text).html();\r\n        return escapedText;\r\n    };\r\n\r\n    /** Invoke a specified function in context with a parameters */\r\n    utils.invoke = function(fn, context, parameters) {\r\n        // Performance optimization: http://jsperf.com/apply-vs-call-vs-invoke\r\n        parameters = parameters || [];\r\n        switch (context ? -1 : parameters.length) {\r\n            case 0:\r\n                return fn();\r\n            case 1:\r\n                return fn(parameters[0]);\r\n            case 2:\r\n                return fn(parameters[0], parameters[1]);\r\n            case 3:\r\n                return fn(parameters[0], parameters[1], parameters[2]);\r\n            case 4:\r\n                return fn(parameters[0], parameters[1], parameters[2], parameters[3]);\r\n            case 5:\r\n                return fn(parameters[0], parameters[1], parameters[2], parameters[3], parameters[4]);\r\n            case 6:\r\n                return fn(parameters[0], parameters[1], parameters[2], parameters[3], parameters[4], parameters[5]);\r\n            case 7:\r\n                return fn(parameters[0], parameters[1], parameters[2], parameters[3], parameters[4], parameters[5], parameters[6]);\r\n            case 8:\r\n                return fn(parameters[0], parameters[1], parameters[2], parameters[3], parameters[4], parameters[5], parameters[6], parameters[7]);\r\n            case 9:\r\n                return fn(parameters[0], parameters[1], parameters[2], parameters[3], parameters[4], parameters[5], parameters[6], parameters[7], parameters[8]);\r\n            case 10:\r\n                return fn(parameters[0], parameters[1], parameters[2], parameters[3], parameters[4], parameters[5], parameters[6], parameters[7], parameters[8], parameters[9]);\r\n            default:\r\n                return fn.apply(context, parameters);\r\n        }\r\n    };\r\n\r\n    /** Invoke a set of actions\r\n        action: { opteration, context, args }\r\n    */\r\n    utils.invokeActions = function (actions) {\r\n        _.forEach((actions || []), function (action) {\r\n            utils.invoke(action.operation, action.context, action.args);\r\n        });\r\n    };\r\n\r\n    /** Creates instance of Type with specified parameters */\r\n    utils.instantiate = function(Type, parameters) {\r\n        var Constructor = function() {};\r\n        Constructor.prototype = Type.prototype;\r\n\r\n        var instance = new Constructor();\r\n        var returnedValue = utils.invoke(Type, instance, parameters);\r\n\r\n        var result = _.isObject(returnedValue) ? returnedValue : instance;\r\n\r\n        return result;\r\n    };\r\n\r\n    utils.isEmptyGuid = function(guid) {\r\n        var emptyGuid = '00000000-0000-0000-0000-000000000000';\r\n        var isEmptyGuid = !guid || guid === emptyGuid;\r\n\r\n        return isEmptyGuid;\r\n    };\r\n\r\n    utils.date = {\r\n        parseJson: function (jsonDate) {\r\n            return new Date(parseInt(jsonDate.substr(6), 10));\r\n        }\r\n    };\r\n\r\n    utils.string = {\r\n        random: function(length, characters) {\r\n            characters = characters || 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n            var randomString = '';\r\n\r\n            for (var i = 0; i < length; i++) {\r\n                var characterIndex = Math.floor(Math.random() * characters.length);\r\n                randomString += characters.substring(characterIndex, characterIndex + 1);\r\n            }\r\n\r\n            return randomString;\r\n        },\r\n\r\n        getHash: function(string) {\r\n            var hash = 0;\r\n\r\n            if (string.length == 0) {\r\n                return hash;\r\n            }\r\n\r\n            for (var i = 0; i < string.length; i++) {\r\n                var symbol = string.charCodeAt(i);\r\n                hash = ((hash << 5) - hash) + symbol;\r\n                hash = hash & hash; // Convert to 32bit integer\r\n            }\r\n\r\n            return hash;\r\n        },\r\n        \r\n        getHashIgnoringCase: function(string) {\r\n            var hash = 0;\r\n\r\n            if (string.length == 0) {\r\n                return hash;\r\n            }\r\n\r\n            string = string.toLowerCase();\r\n            for (var i = 0; i < string.length; i++) {\r\n                var symbol = string.charCodeAt(i);\r\n                hash = ((hash << 5) - hash) + symbol;\r\n                hash = hash & hash; // Convert to 32bit integer\r\n            }\r\n\r\n            return hash;\r\n        },\r\n\r\n        isEndsWith: function (string, endsWith) {\r\n            string = string || '';\r\n\r\n            if (endsWith.length > string.length)\r\n                return false;\r\n\r\n            if (string.length === 0 && endsWith.length === 0)\r\n                return true;\r\n\r\n            return string.substring(string.length - endsWith.length, string.length) === endsWith;\r\n        },\r\n        \r\n        isStartsWith: function (string, startsWith) {\r\n            string = string || '';\r\n            if (startsWith.length > string.length)\r\n                return false;\r\n            \r\n            return string.substring(0, startsWith.length) === startsWith;\r\n        },\r\n        \r\n        trimEnd: function(string, subString) {\r\n            string = string || '';\r\n\r\n            return utils.string.isEndsWith(string, subString)\r\n                ? string.substring(0, string.length - subString.length)\r\n                : string;\r\n        },\r\n        \r\n        trimStart: function(string, subString) {\r\n            string = string || '';\r\n\r\n            return utils.string.isStartsWith(string, subString)\r\n                ? string.substring(subString.length, string.length)\r\n                : string;\r\n        },\r\n        \r\n        trimWhitespace: function(string) {\r\n            string = string || '';\r\n            return string.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n        },\r\n        \r\n        equals: function(firstString, secondString) {\r\n            firstString = firstString || '';\r\n            secondString = secondString || '';\r\n\r\n            return firstString == secondString;\r\n        },\r\n        \r\n        equalsIgnoreCase: function(firstString, secondString) {\r\n            firstString = firstString || '';\r\n            secondString = secondString || '';\r\n\r\n            return firstString.toLowerCase() == secondString.toLowerCase();\r\n        }\r\n    };\r\n\r\n    utils.array = {\r\n        without: function(array, item) {\r\n            var index = array.indexOf(item);\r\n            if (index !== -1) {\r\n                array.splice(index, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    utils.formatParametesCollection = function (name, parameters) {\r\n        var result = [];\r\n\r\n        _.each(parameters, function (parameter, parameterIndex) {\r\n            \r\n            for (var parameterProperty in parameter)\r\n            {\r\n                if (!parameter.hasOwnProperty(parameterProperty)) continue;\r\n                \r\n                var value = parameter[parameterProperty];\r\n                var formattedParameterName = '{0}[{1}].{2}'.format(name, parameterIndex, parameterProperty);\r\n\r\n                result.push({ name: formattedParameterName, value: value });\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    return utils;\r\n});","\ndefine('framework/class',['framework/assert', 'framework/utils'], function (assert, utils) {\r\n    'use strict';\r\n\r\n    var Class = function(constructor, instanceMembers, classMembers) {\r\n        return Class.create(constructor, instanceMembers, classMembers);\r\n    };\r\n\r\n    /** Create a new Class with a specified constructor, instance and class members. */    \r\n    Class.create = function(constructor, instanceMembers, classMembers) {\r\n        constructor = constructor || function() {\r\n        };\r\n\r\n        if (instanceMembers) {\r\n            utils.extend(constructor.prototype, instanceMembers);\r\n        }\r\n\r\n        if (classMembers) {\r\n            utils.extend(constructor, classMembers);\r\n        }\r\n\r\n        return constructor;\r\n    };\r\n\r\n    /** Create a new Class by inheriting from another with a specified constructor, instance and class members. */\r\n    Class.inherit = function (parent, constructor, instanceMembers, classMembers) {\r\n        assert.isNotNull(parent, 'parent');\r\n\r\n        var prototype = { };\r\n\r\n        utils.extend(prototype, parent.prototype); // Extend prototype with parent members.\r\n        if (instanceMembers) {\r\n            utils.extend(prototype, instanceMembers); // Extend prototype with instance members.\r\n        }\r\n        \r\n        constructor = constructor || function() {};\r\n        constructor.prototype = prototype;\r\n        utils.extend(constructor, parent); // Extend inherited Class with parent class members.\r\n        if (classMembers) {\r\n            utils.extend(constructor, classMembers);\r\n        }\r\n\r\n        constructor.prototype.constructor = constructor;\r\n        return constructor;\r\n    };\r\n\r\n    /* Extend-inheritace for Class. */\r\n    Class.extend = function(instanceMembers, classMembers) {\r\n        var Parent = this === Class\r\n            ? function () {}\r\n            : this;\r\n\r\n        instanceMembers = instanceMembers || {};\r\n        classMembers = classMembers || {};\r\n        \r\n        var constructor = instanceMembers.hasOwnProperty('constructor')\r\n            ? instanceMembers.constructor\r\n            : function() {\r\n                var args = utils.toArray(arguments);\r\n                Parent.prototype.constructor.apply(this, args);\r\n            };\r\n        \r\n        var Type = Class.inherit(Parent, constructor, instanceMembers, classMembers);\r\n        Type.extend = Class.extend;\r\n\r\n        return Type;\r\n    };\r\n\r\n    /** Create Class by implementing contract (a plain object) with a specified constructor, instance and class members. */\r\n    Class.implement = function (contract, constructor, instanceMembers, classMembers) {\r\n        var Parent = function() {};\r\n        Parent.prototype = contract;\r\n\r\n        return Class.inherit(Parent, constructor, instanceMembers, classMembers);\r\n    };\r\n\r\n    return Class;\r\n});","\n/**\r\n * confirmController.\r\n * @file confirmController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('core/controllers/confirmController',['underscore', 'framework/class', 'framework/assert', 'framework/utils'], function (_, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var confirmController = [\r\n        '$scope', '$modalInstance', 'data',\r\n        Class.create(\r\n            /**\r\n            * ConfirmController\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} $modalInstance - Current modal dialog instance.\r\n            * @param {object} data - Current data.\r\n            * @constructor\r\n            */\r\n            function($scope, $modalInstance, data) {\r\n                this.$scope = utils.extend($scope, this.$scope, true);\r\n                this.$modalInstance = $modalInstance;\r\n\r\n                this.initialize(data);\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    data: null\r\n                },\r\n\r\n                /** Current modal dialog instance */\r\n                $modalInstance: null,\r\n\r\n                /** \r\n                * Initialize controller. \r\n                * @param {object} data - Current data.\r\n                */\r\n                initialize: function(data) {\r\n                    this.$scope.data = data;\r\n\r\n                    this.$scope.confirm = _.bind(this.confirm, this);\r\n                    this.$scope.closeDialog = _.bind(this.closeDialog, this);\r\n                },\r\n\r\n                /** Confirm changes and close dialog. */\r\n                confirm: function() {\r\n                    this.$modalInstance.close();\r\n                },\r\n\r\n                /** Discard changes and close dialog */\r\n                closeDialog: function() {\r\n                    this.$modalInstance.dismiss();\r\n                }\r\n            })\r\n    ];\r\n\r\n    return confirmController;\r\n});","\n/**\r\n * controllers.\r\n * @file controllers.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('core/controllers/controllers',['angular', 'core/controllers/confirmController'], function (angular, confirmController) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var controllers = angular.module('lunchtime.core.controllers', dependencies);\r\n    controllers.controller('confirmController', confirmController);\r\n\r\n    return controllers;\r\n});","\n/**\r\n * services.\r\n * @file services.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('core/services/services',['angular'], function (angular) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var services = angular.module('lunchtime.core.services', dependencies);\r\n    // controllers.service('service', service);\r\n\r\n    return services;\r\n});","\n/**\r\n * formatTimeSpanFilter.\r\n * @file formatTimeSpanFilter.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('core/filters/formatTimeSpanFilter',['framework/assert'], function (assert) {\r\n    'use strict';\r\n\r\n    var formatTimeSpanFilter = [function () {       \r\n        return function(time) {\r\n            assert.isNotNull(time, 'time');\r\n            assert.isNumber(time.hours, 'hours');\r\n            assert.isNumber(time.minutes, 'minutes');\r\n\r\n            var normalize = function(value) {\r\n                var numberFormat = value < 10 ? '0{0}' : '{0}';\r\n                return numberFormat.format(value);\r\n            };\r\n\r\n            return '{0}:{1}'.format(normalize(time.hours), normalize(time.minutes));\r\n        };\r\n    }];\r\n\r\n    return formatTimeSpanFilter;\r\n});","\n/**\r\n * filters.\r\n * @file filters.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('core/filters/filters',['angular',\r\n        'core/filters/formatTimeSpanFilter'],\r\n    function(angular, formatTimeSpanFilter) {\r\n        'use strict';\r\n\r\n        var dependencies = [];\r\n        var filters = angular.module('lunchtime.core.filters', dependencies);\r\n        filters.filter('formatTimeSpan', formatTimeSpanFilter);\r\n\r\n        return filters;\r\n    });","\n/**\r\n * isLoading.\r\n * @file isLoading.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('core/directives/isLoading',['jquery', 'ladda'], function($, Ladda) {\r\n    'use strict';\r\n\r\n    var isLoading = [function () {\r\n\r\n        return {\r\n            restrict: 'A',\r\n            link: function($scope, $element, attr) {\r\n                var ladda = Ladda.create($element[0]);\r\n\r\n                $scope.$watch(attr.isLoading, function(loading) {\r\n                    if (loading) {\r\n                        ladda.start();\r\n                    } else {\r\n                        ladda.stop();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }];\r\n\r\n    return isLoading;\r\n});","\n/**\r\n * toggle.\r\n * @file toggle.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('core/directives/toggle',[], function() {\r\n    'use strict';\r\n\r\n    var toggle = [\r\n        '$parse',\r\n        function ($parse) {\r\n\r\n            return {\r\n                restrict: 'A',\r\n                link: function($scope, $element, attr) {\r\n                    var getter = $parse(attr.toggle);\r\n                    var setter = getter.assign;\r\n\r\n                    $element.on('click', function() {\r\n                        var value = !!getter($scope);\r\n                        setter($scope, !value);\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    ];\r\n\r\n    return toggle;\r\n});","\n/**\r\n * fileUpload.\r\n * @file fileUpload.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('core/directives/fileUpload',['underscore', 'plupload', 'framework/utils'], function (_, plupload, utils) {\r\n    'use strict';\r\n\r\n    var fileUpload = ['config',\r\n        function(config) {\r\n\r\n            return {\r\n                restrict: 'A',\r\n                scope: {\r\n                    uploadUrl: '@',\r\n                    uploadParams: '=',\r\n                    onUploadError: '&?',\r\n                    onFilesAdded: '&?',\r\n                    onFileUploaded: '&?',\r\n                    onFileUploadProgress: '&?'\r\n                },\r\n                controller: [\r\n                    '$scope', function($scope) {\r\n                        this.upload = function() {\r\n                            $scope.uploader.start();\r\n                        };\r\n                    }\r\n                ],\r\n                require: '^form',\r\n                link: function ($scope, $element, attr, ngFormController) {\r\n                    var options = {\r\n                        runtimes: config.plugins.plupload.runtimes,\r\n                        flash_swf_url: config.plugins.plupload.flash_swf_url,\r\n                        silverlight_xap_url: config.plugins.plupload.silverlight_xap_url,\r\n                        filters: {},\r\n                        url: $scope.uploadUrl\r\n                    };\r\n\r\n                    if (attr.browseButton) {\r\n                        options.browse_button = attr.browseButton;\r\n                    } else {\r\n                        var id = attr.id;\r\n                        if (!id) {\r\n                            id = utils.string.random(32);\r\n                            $element.attr('id', id);\r\n                        }\r\n                        options.browse_button = id;\r\n                    }\r\n\r\n                    if (attr.maxFileSize) {\r\n                        options.filters.max_file_size = attr.maxFileSize;\r\n                    }\r\n\r\n                    if (attr.mimeType) {\r\n                        var mimeType = config.plugins.plupload.mimeTypes[attr.mimeType];\r\n                        options.filters.mime_types = [mimeType];\r\n                    }\r\n\r\n                    if ($scope.uploadParams) {\r\n                        options.multipart = true;\r\n                        options.multipart_params = $scope.uploadParams;\r\n                    }\r\n\r\n                    var uploader = new plupload.Uploader(options);\r\n                    $scope.uploader = uploader;\r\n\r\n                    uploader.init();\r\n\r\n                    uploader.bind('Error', function (sender, error) {\r\n                        if ($scope.onUploadError) {\r\n                            $scope.$apply(function () {\r\n                                $scope.onUploadError({ error: error });\r\n                            });                            \r\n                        }\r\n\r\n                        sender.refresh(); // Reposition Flash/Silverlight\r\n                    });\r\n\r\n                    uploader.bind('FilesAdded', function(sender, files) {\r\n                        if ($scope.onFilesAdded) {\r\n                            $scope.$apply(function () {\r\n                                $scope.onFilesAdded({ files: files });\r\n                            });                           \r\n                        }\r\n\r\n                        if (attr.autoUpload === 'true') {\r\n                            uploader.start();\r\n                        } else {\r\n                            $scope.$apply(function () {\r\n                                ngFormController.$setDirty();\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    uploader.bind('FileUploaded', function (sender, file, response) {\r\n                        if ($scope.onFileUploaded) {\r\n                            $scope.$apply(function() {\r\n                                $scope.onFileUploaded({ file: file, response: response });\r\n                                ngFormController.$setDirty();\r\n                            });                            \r\n                        }\r\n                    });\r\n\r\n                    uploader.bind('UploadProgress', function (sender, file) {    \r\n                        if ($scope.onFileUploadProgress) {\r\n                            $scope.$apply(function () {\r\n                                $scope.onFileUploadProgress({ file: file, percent: file.percent });\r\n                            });                           \r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    ];\r\n\r\n    return fileUpload;\r\n});","\n/**\r\n * fileUploadPreviewImage.\r\n * @file fileUploadPreviewImage.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('core/directives/fileUploadPreviewImage',[], function() {\r\n    'use strict';\r\n\r\n    var fileUploadPreviewImage = [\r\n        function() {\r\n\r\n            return {\r\n                restrict: 'A',                \r\n                scope: {\r\n                    file: '='\r\n                },\r\n                link: function ($scope, $element, attr) {\r\n\r\n                    $scope.$watch('file', function (file) {\r\n                        if (!file)\r\n                            return;\r\n\r\n                        var reader = new FileReader();\r\n                        reader.onload = function(e) {\r\n                            $element.attr('src', e.target.result);\r\n                        };\r\n                        reader.readAsDataURL(file.getNative());\r\n                    });\r\n\r\n                }\r\n            };\r\n        }\r\n    ];\r\n\r\n    return fileUploadPreviewImage;\r\n});","\n/**\r\n * popoverHtml.\r\n * @file popoverHtml.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('core/directives/popoverHtml',[], function () {\r\n    'use strict';\r\n\r\n    var popoperHtml = [\r\n        '$compile', '$timeout', '$parse', '$window', '$tooltip',\r\n        function($compile, $timeout, $parse, $window, $tooltip) {\r\n            return $tooltip('popoverHtml', 'popover', 'click');\r\n        }\r\n    ];\r\n\r\n    return popoperHtml;\r\n});","\n/**\r\n * popoverHtmlPopup.\r\n * @file popoverHtmlPopup.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('core/directives/popoverHtmlPopup',[], function() {\r\n    'use strict';\r\n\r\n    var popoverHtmlPopup = [\r\n        function() {\r\n            return {\r\n                restrict: 'EA',\r\n                replace: true,\r\n                scope: {\r\n                    title: '@',\r\n                    content: '@',\r\n                    placement: '@',\r\n                    animation: '&',\r\n                    isOpen: '&'\r\n                },\r\n                templateUrl: 'template/popover/popover-html.html'\r\n            };\r\n        }\r\n    ];\r\n\r\n    return popoverHtmlPopup;\r\n});","\n/**\r\n * srcBig.\r\n * @file srcBig.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('core/directives/srcBig',['jquery', 'glisse'], function ($) {\r\n    'use strict';\r\n\r\n    var srcBig = [\r\n        'config',\r\n        function (config) {\r\n\r\n            return {\r\n                restrict: 'A',\r\n                scope: null,\r\n                link: function ($scope, element, attr) {\r\n                    var $element = $(element[0]);\r\n\r\n                    var bigImageSrc = attr.srcBig;\r\n\r\n                    $element.attr('data-glisse-big', bigImageSrc);\r\n                    $element.glisse(config.plugins.glisse);\r\n                }\r\n            };\r\n        }\r\n    ];\r\n\r\n    return srcBig;\r\n});","\n/**\r\n * directives.\r\n * @file directives.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('core/directives/directives',[\r\n        'angular',\r\n        'core/directives/isLoading',\r\n        'core/directives/toggle',\r\n        'core/directives/fileUpload',\r\n        'core/directives/fileUploadPreviewImage',\r\n        'core/directives/popoverHtml',\r\n        'core/directives/popoverHtmlPopup',\r\n        'core/directives/srcBig'\r\n    ],\r\n    function (angular, isLoading, toggle, fileUpload, fileUploadPreviewImage, popoverHtml, popoverHtmlPopup, srcBig) {\r\n        'use strict';\r\n\r\n        var dependencies = ['ui.bootstrap'];\r\n        var directives = angular.module('lunchtime.core.directives', dependencies);\r\n        directives.directive('isLoading', isLoading);\r\n        directives.directive('toggle', toggle);\r\n        directives.directive('fileUpload', fileUpload);\r\n        directives.directive('fileUploadPreviewImage', fileUploadPreviewImage);\r\n        directives.directive('popoverHtml', popoverHtml);\r\n        directives.directive('popoverHtmlPopup', popoverHtmlPopup);\r\n        directives.directive('srcBig', srcBig);\r\n\r\n        return directives;\r\n    });","\n/**\r\n *  $q decorator.\r\n * @file qDecorator.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('core/providers/qDecorator',[], function() {\r\n    'use strict';\r\n\r\n    var qDecorator = ['$delegate', function ($delegate) {\r\n\r\n        $delegate.rejectAsync = function(reason) {\r\n            var promise = $delegate.reject(reason);\r\n            \r\n            return {\r\n                then: promise.then,\r\n                'catch': function(callback) {\r\n                    promise.then(null, callback);\r\n                    return promise;\r\n                },\r\n                'finally': function (callback) {\r\n                    promise.then(null, callback);\r\n                    return promise;\r\n                }\r\n            };\r\n        };\r\n        \r\n        return $delegate;\r\n    }];\r\n\r\n    return qDecorator;\r\n});","\n/**\r\n * providers.\r\n * @file providers.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('core/providers/providers',['angular', 'core/providers/qDecorator'], function (angular, $qDecorator) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var providers = angular.module('lunchtime.core.providers', dependencies);\r\n\r\n    providers.config(['$provide', function ($provide) {\r\n        $provide.decorator('$q', $qDecorator);\r\n    }]);\r\n    \r\n    return providers;\r\n});","\ndefine('text!core/templates/popoverHtml.tmpl.html',[],function () { return '<div class=\"popover {{placement}}\" ng-class=\"{ in: isOpen(), fade: animation() }\">\\r\\n    <div class=\"arrow\"></div>\\r\\n    <div class=\"popover-inner\">\\r\\n        <h3 class=\"popover-title\" ng-bind=\"title\" ng-show=\"title\"></h3>\\r\\n        <div class=\"popover-content\" bind-html-unsafe=\"content\"></div>\\r\\n    </div>\\r\\n</div>';});\n","\n/**\r\n * templates.\r\n * @file templates.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine(\r\n    'core/templates/templates',[\r\n        'angular',\r\n        'text!core/templates/popoverHtml.tmpl.html'\r\n    ],\r\n    function(angular, popoverHtmlTemplate) {\r\n        'use strict';\r\n\r\n        var dependencies = [];\r\n        var templates = angular.module('lunchtime.core.templates', dependencies);\r\n\r\n        templates.run([\r\n            '$templateCache', function($templateCache) {\r\n                $templateCache.put('template/popover/popover-html.html', popoverHtmlTemplate);\r\n            }\r\n        ]);\r\n\r\n        return templates;\r\n    });","\n/**\r\n * Lunch Time Core.\r\n * @file core.js.\r\n * @copyright Copyright\r\n */\r\ndefine('core/core',['angular',\r\n        'core/controllers/controllers',\r\n        'core/services/services',\r\n        'core/filters/filters',\r\n        'core/directives/directives',\r\n        'core/providers/providers',\r\n        'core/templates/templates'],\r\n    function(angular, controllers, services, filters, directives, providers, templates) {\r\n        'use strict';\r\n\r\n        var modules = [\r\n            controllers.name,\r\n            services.name,\r\n            filters.name,\r\n            directives.name,\r\n            providers.name,\r\n            templates.name\r\n        ];\r\n\r\n        var core = angular.module('lunchtime.core', modules);\r\n\r\n        return core;\r\n    });","\n/**\r\n * controllers.\r\n * @file controllers.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('common/controllers/controllers',['angular'], function (angular) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var controllers = angular.module('lunchtime.common.controllers', dependencies);\r\n    // controllers.controller('controller', controller);\r\n\r\n    return controllers;\r\n});","\n/**\r\n * Category.\r\n * @file category.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('common/models/category',['framework/assert'], function (assert) {\r\n    'use strict';\r\n\r\n    /** \r\n    * Menu category.\r\n    * @param {number} id - Category ID.\r\n    * @param {string} name - Category name.\r\n    */\r\n    var Category = function (id, name) {\r\n        assert.isNotNull(id, 'id');\r\n        assert.isNotNull(name, 'name');\r\n\r\n        this.id = id;\r\n        this.name = name;\r\n    };\r\n\r\n    return Category;\r\n});","\n/**\r\n * categories.\r\n * @file categories.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('common/models/categories',[], function() {\r\n    'use strict';\r\n\r\n    /** \r\n    * Categores\r\n    * @enum {number}\r\n    */\r\n    var categories = {\r\n        salad: 0,\r\n        soup: 1,\r\n        meat: 2,\r\n        garnish: 3,\r\n        other: 4\r\n    };\r\n\r\n    return categories;\r\n\r\n});","\n/**\r\n * Category Service.\r\n * @file categoryService.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('common/services/categoryService',['underscore', 'angular', 'framework/assert', 'common/models/category', 'common/models/categories'],\r\n    function (_, angular, assert, Category, categories) {\r\n    'use strict';\r\n\r\n    var categoryService = [ function () {\r\n        return {\r\n            \r\n            /** \r\n            * Get all avaiable categories.\r\n            * @returns {array} list of categories.\r\n            */\r\n            getCategories: function() {\r\n                return [\r\n                    new Category(categories.salad, 'Салаты'),\r\n                    new Category(categories.soup, 'Супы'),\r\n                    new Category(categories.meat, 'Основные блюда'),\r\n                    new Category(categories.garnish, 'Гарниры'),\r\n                    new Category(categories.other, 'Другое')\r\n                ];\r\n            },\r\n            \r\n            /** \r\n            * Get all avaiable categories.\r\n            * @returns {object} list of categories.\r\n            */\r\n            getCategoriesMap: function () {\r\n                return {\r\n                    salad: this.getCategoryById(categories.salad),\r\n                    soup: this.getCategoryById(categories.soup),\r\n                    meat: this.getCategoryById(categories.meat),\r\n                    garnish: this.getCategoryById(categories.garnish),\r\n                    other: this.getCategoryById(categories.other)\r\n                };\r\n            },\r\n            \r\n            /** \r\n             * Get category with specified ID.\r\n             * @param {number} id - category ID.\r\n             * @returns {object} category with specified ID or throws error.\r\n            */\r\n            getCategoryById: function(id) {\r\n                assert.isNotNull(id, 'id');\r\n\r\n                var categoriesList = this.getCategories();\r\n                var result = _.find(categoriesList, function(category) {\r\n                    return category.id === id;\r\n                });\r\n                \r\n                if (!result)\r\n                    throw new Error('Category with id \"{0}\" not found.'.format(id));\r\n\r\n                return result;\r\n            },\r\n            \r\n            /** \r\n            * Check restrictions for half portion ordering.\r\n            * @param {object} category - category to check.\r\n            * @returns {boolean} true if it's allowed to order half portion for specified category, otherwise - false.\r\n            */\r\n            isHalfPortionsAllowed: function (category) {\r\n                assert.isNotNull(category, 'category');\r\n                \r\n                switch (category.id) {\r\n                    case categories.salad: // Салаты\r\n                        return false;\r\n                    case categories.soup: // Супы\r\n                        return true;\r\n                    case categories.meat: // Основные блюда\r\n                        return false;\r\n                    case categories.garnish: // Гарниры\r\n                        return true;\r\n                    case categories.other: // Другое\r\n                        return false;\r\n                    default:\r\n                        throw new Error('Half portions restrictions for category with id \"{0}\" not found.'.format(category.id));\r\n                }\r\n            }\r\n        };\r\n    }];\r\n\r\n    return categoryService;\r\n});","\n/**\r\n * Category menu.\r\n * @file categoryMenu.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('common/models/categoryMenu',['framework/assert'], function (assert) {\r\n    'use strict';\r\n\r\n    /** \r\n    * Category menu.\r\n    * @param {object} category - Category.\r\n    * @param {array} courses - Category courses.\r\n    */\r\n    var CategoryMenu = function(category, courses) {\r\n        assert.isNotNull(category, 'category');\r\n        assert.isNotNull(courses, 'courses');\r\n        assert.isArray(courses, 'courses');\r\n\r\n        this.category = category;\r\n        this.courses = courses;\r\n    };\r\n\r\n    return CategoryMenu;\r\n});","\n/**\r\n * menuService.\r\n * @file menuService.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('common/services/menuService',['underscore', 'framework/assert', 'common/models/categoryMenu'], function (_, assert, CategoryMenu) {\r\n    'use strict';\r\n\r\n    var menuService = [\r\n        'categoryService',\r\n        function(categoryService) {\r\n            return {\r\n\r\n                /** \r\n                * Group courses by category.\r\n                * @param {array} courses - Courses.\r\n                * @returns {array} Categories menus.\r\n                */\r\n                groupCoursesByCategories: function(courses) {\r\n                    assert.isArray(courses, 'courses');\r\n\r\n                    var categoriesMenus = _.chain(courses)\r\n                        // Group courses by categories\r\n                        .groupBy(function(course) {\r\n                            return course.category.id;\r\n                        })\r\n                        // Map to [categoryId, course] pairs\r\n                        .pairs()\r\n                        // Map to CategoryMenu.\r\n                        .map(function(categoryCoursesPair) {\r\n                            var categoryId = parseInt(categoryCoursesPair[0], 10);\r\n\r\n                            var categoryCourses = _.sortBy(categoryCoursesPair[1], function(course) {\r\n                                return course.name;\r\n                            });\r\n\r\n                            var category = categoryService.getCategoryById(categoryId);\r\n\r\n                            return new CategoryMenu(category, categoryCourses);\r\n                        })\r\n                        // Order by CategoryID\r\n                        .sortBy(function(categoryMenu) {\r\n                            return categoryMenu.category.id;\r\n                        })\r\n                        .value();\r\n\r\n                    return categoriesMenus;\r\n                },\r\n\r\n                /** \r\n                 * Update categories menu.\r\n                 * @param {array} categoriesMenus - Categories menus.\r\n                 * @param {array} courses - Courses.\r\n                 */\r\n                updateCategoriesMenus: function (categoriesMenus, courses) {\r\n                    var categoriesMenuMap = {};\r\n\r\n                    _.each(categoriesMenus, function(categoryMenu) {\r\n                        categoryMenu.courses = [];\r\n                        categoriesMenuMap[categoryMenu.category.id] = categoryMenu;\r\n                    });\r\n\r\n                    _.each(courses, function(course) {\r\n                        var courseCategoryMenu = categoriesMenuMap[course.category.id];\r\n                        courseCategoryMenu.courses.push(course);\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    ];\r\n\r\n    return menuService;\r\n});","\n/**\r\n * Course.\r\n * @file Course.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('common/models/course',['framework/assert'], function (assert) {\r\n    'use strict';\r\n    \r\n    /** \r\n    * Course.\r\n    * @param {number} id - Course ID.\r\n    * @param {string} name - Course name.\r\n    * @param {number} price - Course price.\r\n    * @param {object} category - Course category.\r\n    * @param {number} maxOrders - Curse maximum orders count.\r\n    * @param {number} ordersCount - Course orders count.\r\n    * @param {string} description - Course description.\r\n    * @param {string} weight - Course weight.\r\n    */\r\n    var Course = function (id, name, price, category, menuItemId, maxOrders, ordersCount, description, weight) {\r\n        assert.isNotNull(id, 'id');\r\n        assert.isNotNull(name, 'name');\r\n        assert.isNotNull(price, 'price');\r\n        assert.isNumber(price, 'price');\r\n        assert.isNotNull(category, 'category');\r\n        assert.isNotNull(menuItemId, 'menuItemId');\r\n        assert.isNotNull(maxOrders, 'maxOrders');\r\n        assert.isNumber(maxOrders, 'maxOrders');\r\n        assert.isNotNull(ordersCount, 'ordersCount');\r\n        assert.isNumber(ordersCount, 'ordersCount');\r\n\r\n        this.id = id;\r\n        this.name = name;\r\n        this.price = price;\r\n        this.category = category;\r\n        this.menuItemId = menuItemId;\r\n        this.maxOrders = maxOrders;\r\n        this.ordersCount = ordersCount;\r\n        this.description = description || '';\r\n        this.weight = weight || '';\r\n    };\r\n\r\n    return Course;\r\n});","\n/**\r\n * commonApiMappingService.\r\n * @file commonApiMappingService.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('common/services/commonApiMappingService',['common/models/course'], function (Course) {\r\n    'use strict';\r\n\r\n    var commonApiMappingService = [\r\n        'categoryService',\r\n        function (categoryService) {\r\n            return {\r\n                /** \r\n                 * Map reponse to Course model.\r\n                 * @param {object} response - Course.\r\n                 * @returns {object} Course.\r\n                 */\r\n                mapResponseToCourse: function (response) {\r\n                    var category = categoryService.getCategoryById(response.CategoryType);\r\n\r\n                    var course = new Course(\r\n                        response.ID,\r\n                        response.Name,\r\n                        response.Price,\r\n                        category,\r\n                        response.MenuItemID || 0,\r\n                        response.MaxOrders || 0,\r\n                        response.OrderedQuantity || 0,\r\n                        response.Description,\r\n                        response.Weight);\r\n\r\n                    return course;\r\n                }\r\n            };\r\n        }\r\n    ];\r\n\r\n    return commonApiMappingService;\r\n});","\n/**\r\n * services.\r\n * @file services.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('common/services/services',[\r\n        'angular',\r\n        'common/services/categoryService',\r\n        'common/services/menuService',\r\n        'common/services/commonApiMappingService'\r\n    ],\r\n    function (angular, categoryService, menuService, commonApiMappingService) {\r\n        'use strict';\r\n\r\n        var dependencies = [];\r\n        var services = angular.module('lunchtime.common.services', dependencies);\r\n        services.service('categoryService', categoryService);\r\n        services.service('menuService', menuService);\r\n        services.service('commonApiMappingService', commonApiMappingService);\r\n\r\n        return services;\r\n    });","\n/**\r\n * weight.\r\n * @file weight.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('common/filters/weight',[], function() {\r\n    'use strict';\r\n    \r\n    var weight = [function () {\r\n        return function (value) {\r\n            if (value) {\r\n                return '{0} гр.'.format(value);\r\n            }\r\n\r\n            return value;\r\n        };\r\n    }];\r\n\r\n    return weight;\r\n});","\n/**\r\n * filters.\r\n * @file filters.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine(\r\n    'common/filters/filters',[\r\n        'angular',\r\n        'common/filters/weight'\r\n    ],\r\n    function(angular, weight) {\r\n        'use strict';\r\n\r\n        var dependencies = [];\r\n        var filters = angular.module('lunchtime.common.filters', dependencies);\r\n        filters.filter('weight', weight);\r\n\r\n        return filters;\r\n    });","\ndefine('text!common/templates/menuCategoryTitle.tmpl.html',[],function () { return '<h3 class=\"uppercase\">\\r\\n    <lt:category-icon category=\"category\"></lt:category-icon>\\r\\n    {{category.name}}\\r\\n</h3>';});\n","\ndefine('text!common/templates/categoryIcon.tmpl.html',[],function () { return '<img ng-src=\"{{categoryIconUrl}}\" alt=\"{{category.name}}\" class=\"img-circle course-category-icon\" />';});\n","\n/**\r\n * templates.\r\n * @file templates.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('common/templates/templates',['angular',\r\n        'text!common/templates/menuCategoryTitle.tmpl.html',\r\n        'text!common/templates/categoryIcon.tmpl.html'],\r\n    function (angular, menuCategoryTitleTemplate, categoryIconTemplate) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var templates = angular.module('lunchtime.common.templates', dependencies);\r\n    \r\n    templates.run(['$templateCache', function ($templateCache) {\r\n        $templateCache.put('/templates/common/menuCategoryTitle.tmpl', menuCategoryTitleTemplate);\r\n        $templateCache.put('/templates/common/categoryIcon.tmpl', categoryIconTemplate);\r\n    }]);\r\n\r\n    return templates;\r\n});","\n/**\r\n * menuCategoryTitle.\r\n * @file menuCategoryTitle.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('common/directives/menuCategoryTitle',[], function () {\r\n    'use strict';\r\n\r\n    var menuCategoryTitle = [function () {\r\n        \r\n        return {\r\n            restrict: 'AE',\r\n            templateUrl: '/templates/common/menuCategoryTitle.tmpl',\r\n            scope: {\r\n                category: '='\r\n            }\r\n        };\r\n    }];\r\n\r\n    return menuCategoryTitle;\r\n});","\n/**\r\n * categoryIcon.\r\n * @file categoryIcon.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('common/directives/categoryIcon',[], function() {\r\n    'use strict';\r\n\r\n    var categoryIcon = [function() {\r\n\r\n        return {\r\n            restrict: 'AE',\r\n            templateUrl: '/templates/common/categoryIcon.tmpl',\r\n            scope: {\r\n                category: '='\r\n            },\r\n            controller: ['$scope', 'config', function ($scope, config) {\r\n                \r\n                var iconUrl;\r\n                switch ($scope.category.id) {\r\n                    case 0:\r\n                        iconUrl = 'salad.png';\r\n                        break;\r\n                    case 1:\r\n                        iconUrl = 'soup.png';\r\n                        break;\r\n                    case 2:\r\n                        iconUrl = 'meat.png';\r\n                        break;\r\n                    case 3:\r\n                        iconUrl = 'garnish.png';\r\n                        break;\r\n                    case 4:\r\n                        iconUrl = 'misc.png';\r\n                        break;\r\n                    default:\r\n                        throw new Error('Unknown category id: {0}.'.format($scope.category.id));\r\n                }\r\n\r\n                $scope.categoryIconUrl = config.urls.images.categoriesIcons + iconUrl;\r\n            }]\r\n        };\r\n    }];\r\n\r\n    return categoryIcon;\r\n});","\n/**\r\n * directives.\r\n * @file directives.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('common/directives/directives',[\r\n        'angular',\r\n        'common/templates/templates',\r\n        'common/directives/menuCategoryTitle',\r\n        'common/directives/categoryIcon'\r\n    ],\r\n    function(angular, templates, menuCategoryTitle, categoryIcon) {\r\n        'use strict';\r\n\r\n        var dependencies = [templates.name];\r\n        var directives = angular.module('lunchtime.common.directives', dependencies);\r\n        directives.directive('ltMenuCategoryTitle', menuCategoryTitle);\r\n        directives.directive('ltCategoryIcon', categoryIcon);\r\n\r\n        return directives;\r\n    });","\n/**\r\n * providers.\r\n * @file providers.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('common/providers/providers',['angular'], function (angular) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var providers = angular.module('lunchtime.common.providers', dependencies);\r\n\r\n    return providers;\r\n});","\n/**\r\n * Lunch Time Common Module.\r\n * @file common.js.\r\n * @copyright Copyright\r\n */\r\ndefine('common/common',['angular',\r\n        'common/controllers/controllers',\r\n        'common/services/services',\r\n        'common/filters/filters',\r\n        'common/directives/directives',\r\n        'common/providers/providers',\r\n        'common/templates/templates'],\r\n    function(angular, controllers, services, filters, directives, providers, templates) {\r\n        'use strict';\r\n\r\n        var dependencies = [\r\n            controllers.name,\r\n            services.name,\r\n            filters.name,\r\n            directives.name,\r\n            providers.name,\r\n            templates.name\r\n        ];\r\n\r\n        var template = angular.module('lunchtime.common', dependencies);\r\n\r\n        return template;\r\n    });","\n/**\r\n * user.config.\r\n * @file user.config.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/user.config',['application.config', 'common/models/categories'], function (config, categories) {\r\n    'use strict';\r\n\r\n    var applicationUrl = '/Menu/Index';\r\n    var apiUrl = '/Api/Menu';\r\n\r\n    return {\r\n        urls: {\r\n            application: applicationUrl,\r\n            api: {\r\n                getCoursesAndOrders: apiUrl + '/GetCoursesAndOrders',\r\n                getCourses: apiUrl + '/GetCourses',\r\n                orderCourse: apiUrl + '/OrderCourse',\r\n                removeOrder: apiUrl + '/RemoveOrder',\r\n                moveOrderToBox: apiUrl + '/MoveOrderToBox',\r\n                wishCourse: apiUrl + '/WishCourse',\r\n                unwishCourse: apiUrl + '/UnwishCourse',\r\n                coursePicture: config.urls.api.coursePicture,\r\n                courseThumbnail: config.urls.api.courseThumbnail\r\n            },\r\n            views: {\r\n                menuView: '/template/user/menu.tmpl',\r\n                anonymousMenuView: '/template/user/menu/anonymous.tmpl'\r\n            }\r\n        },\r\n        restrictions: {\r\n            maxBoxCount: 5,\r\n            boxingAllowedCategories: [categories.soup, categories.meat, categories.garnish]\r\n        }\r\n    };\r\n});","\n/**\r\n * Lunch Time User Routes.\r\n * @file user.routes.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('user/user.routes',[], function () {\r\n    'use strict';\r\n    \r\n    var userRoutes = ['$routeProvider', '$locationProvider', 'user.config',\r\n        function ($routeProvider, $locationProvider, userConfig) {\r\n           \r\n            var applicationUrl = userConfig.urls.application;\r\n            var views = userConfig.urls.views;\r\n\r\n            $routeProvider.when(applicationUrl + '/:date?', {\r\n                templateUrl: views.menuView,\r\n                controller: 'userManageOrdersController',\r\n                resolve: {\r\n                    menuData: ['userMenuApiService', '$route', function (userMenuApiService, $route) {\r\n\r\n                        var date = $route.current.params.date;\r\n                        if (!date) {\r\n                            var today = new Date();\r\n                            var offset = today.getDay() >= 5 ? 8 - today.getDay() : 1;\r\n                            date = today.setDate(today.getDate() + offset);\r\n                        }\r\n                        \r\n                        var promise = userMenuApiService.getCoursesAndOrders(date);\r\n                        return promise;\r\n                    }]\r\n                }\r\n            });\r\n\r\n        }];\r\n\r\n    return userRoutes;\r\n});","\n/**\r\n * userManageOrdersController.\r\n * @file userManageOrdersController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/controllers/userManageOrdersController',['underscore', 'framework/class', 'framework/assert', 'framework/utils', 'toastr'], function (_, Class, assert, utils, toastr) {\r\n    'use strict';\r\n\r\n    var userManageOrdersController = ['$scope', 'userMenuApiService', 'orderService', 'menuData',\r\n        /**\r\n         * Manage orders controller.\r\n         * @param {object} $scope - Controller scope service.\r\n         * @param {object} userMenuApiService - User menu API service.\r\n         * @param {object} orderService - Order service.\r\n         * @param {object} menuData - Menu data.         \r\n         * @constructor\r\n         */\r\n        Class.create(function($scope, userMenuApiService, orderService, menuData) {\r\n            this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n\r\n            this.userMenuApiService = userMenuApiService;\r\n            this.orderService = orderService;\r\n\r\n            this.initialize(menuData);\r\n        }, {\r\n            $scope: {\r\n                date: null,\r\n                isFreezed: null,\r\n                freezeTime: null,\r\n                courses: [],\r\n                orders: [],\r\n                wishedCourses: []\r\n            },\r\n\r\n            /** User menu API service. */\r\n            userMenuApiService: null,\r\n\r\n            /** Order service. */\r\n            orderService: null,\r\n\r\n            /** \r\n             * Initialize controller. \r\n             * @param {object} menuData - Menu data.\r\n             */\r\n            initialize: function (menuData) {\r\n                assert.isNotNull(menuData, 'menuData');\r\n\r\n                this.$scope.date = menuData.date;\r\n                this.$scope.isFreezed = menuData.isFreezed;\r\n                this.$scope.freezeTime = menuData.freezeTime;\r\n                this.$scope.courses = menuData.courses;\r\n                this.$scope.orders = menuData.orders;\r\n                this.$scope.wishedCourses = menuData.wishedCourses;\r\n                \r\n                this.$scope.orderCourse = _.bind(this.orderCourse, this);\r\n                this.$scope.removeOrder = _.bind(this.removeOrder, this);\r\n                this.$scope.moveOrderToBox = _.bind(this.moveOrderToBox, this);\r\n            },\r\n\r\n            /** \r\n             * Order course.\r\n             * @param {object} course - Course.\r\n             * @param {number} quantity - Quantity.\r\n             */\r\n            orderCourse: function (course, quantity) {\r\n                assert.isNotNull(course, 'course');\r\n                assert.isNotNull(quantity, 'quantity');\r\n\r\n                var promise = this.userMenuApiService.orderCourse(course, quantity, this.$scope.date);\r\n\r\n                promise.then(\r\n                    _.bind(function(order) {\r\n                        this.$scope.orders = this.orderService.addNewOrderToCollection(this.$scope.orders, order);\r\n                        course.ordersCount += quantity;\r\n                    }, this),\r\n                    _.bind(this._onFail, this));\r\n\r\n                return promise;\r\n            },\r\n\r\n\r\n            /** \r\n             * Remove order.\r\n             * @param {object} order - Order.\r\n             */\r\n            removeOrder: function (order) {\r\n                assert.isNotNull(order, 'order');\r\n\r\n                var promise = this.userMenuApiService.removeOrder(order, this.$scope.date);\r\n\r\n                promise.then(\r\n                    _.bind(function() {\r\n                        this.$scope.orders = this.orderService.removeOrderFromCollection(this.$scope.orders, order);\r\n                        order.course.ordersCount -= order.quantity;\r\n                    }, this),\r\n                    _.bind(this._onFail, this));\r\n\r\n                return promise;\r\n            },\r\n\r\n\r\n            /** \r\n             * Move order to box.\r\n             * @param {object} order - Order.\r\n             * @param {object} box - Box.\r\n             */\r\n            moveOrderToBox: function (order, box) {\r\n                assert.isNotNull(order, 'order');\r\n                assert.isNotNull(box, 'box');\r\n\r\n                var promise = this.userMenuApiService.moveOrderToBox(order, box, this.$scope.date);\r\n\r\n                promise.then(\r\n                    _.bind(function(movedOrder) {\r\n                        var updatedOrders = this.orderService.removeOrderFromCollection(this.$scope.orders, order);\r\n                        updatedOrders = this.orderService.addNewOrderToCollection(updatedOrders, movedOrder);\r\n\r\n                        this.$scope.orders = updatedOrders;\r\n                    }, this),\r\n                    _.bind(this._onFail, this));\r\n\r\n                return promise;\r\n            },\r\n\r\n\r\n            /** \r\n             * On operation failed.\r\n             * @param {string} errorMessage - Error message.\r\n             */\r\n            _onFail: function(errorMessage) {\r\n                toastr.error(errorMessage);\r\n                //this.userMenuApiService.getCoursesAndOrders(this.$scope.date).then(_.bind(this.initialize, this));\r\n            }\r\n        })];\r\n\r\n    return userManageOrdersController;\r\n});","\n/**\r\n * anonymousUserMenuController.\r\n * @file anonymousUserMenuController.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('user/menu/controllers/anonymousUserMenuController',['underscore', 'framework/class', 'framework/assert', 'framework/utils'], function (_, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var anonymousUserMenuController = ['$scope', 'menuData',\r\n        /**\r\n         * Anonymous user menu controller.\r\n         * @param {object} $scope - Controller scope service.\r\n         * @param {object} menuData - Menu data.  \r\n         * @constructor\r\n         */\r\n        Class.create(function ($scope, menuData) {\r\n            this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n\r\n            this.initialize(menuData);\r\n        }, {\r\n            $scope: {\r\n                date: null,\r\n                courses: []\r\n            },\r\n\r\n            /** \r\n             * Initialize controller. \r\n             * @param {object} menuData - Menu data.\r\n             */\r\n            initialize: function (menuData) {\r\n                assert.isNotNull(menuData, 'menuData');\r\n\r\n                this.$scope.date = menuData.date;\r\n                this.$scope.courses = menuData.courses;\r\n            }\r\n        })];\r\n\r\n    return anonymousUserMenuController;\r\n});","\n/**\r\n * Menu Controller.\r\n * @file userMenuController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/controllers/menu/userMenuController',['angular', 'underscore', 'framework/class', 'framework/assert', 'framework/utils'], function (angular, _, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var userMenuController = [\r\n        '$scope', 'userMenuService', 'menuService', 'userMenuApiService',\r\n\r\n        /**\r\n         * Menu controller\r\n         * @param {object} $scope - Controller scope service.\r\n         * @param {object} userMenuService - User menu service.\r\n         * @param {object} menuService - Menu service.\r\n         * @param {object} userMenuApiService - User menu API service.\r\n         * @constructor\r\n         */\r\n        Class.create(\r\n            function($scope, userMenuService, menuService, userMenuApiService) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.userMenuService = userMenuService;\r\n                this.menuService = menuService;\r\n                this.userMenuApiService = userMenuApiService;\r\n\r\n                this.initialize();\r\n            }, {\r\n                $scope: {\r\n                    date: null,\r\n                    isFreezed: null,\r\n                    courses: [],\r\n                    categoriesMenu: [],\r\n                    wishedCourses: []\r\n                },\r\n\r\n                /** User menu service. */\r\n                userMenuService: null,\r\n\r\n                /** Menu service. */\r\n                menuService: null,\r\n\r\n                /** User menu API service. */\r\n                userMenuApiService: null,\r\n\r\n\r\n                /** \r\n                 * Initialize controller. \r\n                 */\r\n                initialize: function () {\r\n                    this.$scope.$watch('courses', _.bind(this._onCoursesUpdated, this));\r\n\r\n                    this.$scope.orderCourse = _.bind(this.orderCourse, this);\r\n                    this.$scope.hasWished = _.bind(this.hasWished, this);\r\n                    this.$scope.wishCourse = _.bind(this.wishCourse, this);\r\n                },\r\n\r\n\r\n                /** \r\n                 * Has wished course.\r\n                 * @param {object} course - Course.\r\n                 */\r\n                hasWished: function(course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    var hasWished = _.some(this.$scope.wishedCourses, function(wishedCourse) {\r\n                        return wishedCourse.id === course.id;\r\n                    });\r\n\r\n                    return hasWished;\r\n                },\r\n\r\n\r\n                /** \r\n                 * Wish course.\r\n                 * @param {object} course - Course.\r\n                 */\r\n                wishCourse: function(course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    var onUnwished = function() {\r\n                        utils.array.without(this.$scope.wishedCourses, course);\r\n                    };\r\n\r\n                    var onWished = function () {\r\n                        var wishedCourseFromSameCategory = _.find(this.$scope.wishedCourses, function (wishedCourse) {\r\n                            return wishedCourse.category.id === course.category.id;\r\n                        });\r\n                        if (!!wishedCourseFromSameCategory) {\r\n                            utils.array.without(this.$scope.wishedCourses, wishedCourseFromSameCategory);\r\n                        }\r\n                        this.$scope.wishedCourses.push(course);\r\n                    };\r\n\r\n                    var hasWished = this.hasWished(course);\r\n\r\n                    var promise;\r\n                    if (hasWished) {\r\n                        promise = this.userMenuApiService.unwishCourse(course, this.$scope.date)\r\n                            .then(_.bind(onUnwished, this));\r\n                    } else {\r\n                        promise = this.userMenuApiService.wishCourse(course, this.$scope.date)\r\n                            .then(_.bind(onWished, this));\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                /** \r\n                 * Order course.\r\n                 * @param {object} course - Course.\r\n                 * @param {number} quantity - Quantity.\r\n                 */\r\n                orderCourse: function(course, quantity) {\r\n                    assert.isNotNull(course, 'course');\r\n                    assert.isNotNull(quantity, 'quantity');\r\n\r\n                    return this.$scope.onOrderCourse({ course: course, quantity: quantity });\r\n                },\r\n\r\n                /** \r\n                 * Courses updated handler.\r\n                 * @param {array} courses - Courses.\r\n                  */\r\n                _onCoursesUpdated: function(courses) {\r\n                    assert.isNotNull(courses, 'courses');\r\n                    assert.isArray(courses, 'courses');\r\n\r\n                    this.$scope.categoriesMenu = this.menuService.groupCoursesByCategories(courses);\r\n                }\r\n            })\r\n    ];\r\n\r\n    return userMenuController;\r\n});","\n/**\r\n * userMenuCourseController.\r\n * @file userMenuCourseController.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('user/menu/controllers/menu/userMenuCourseController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils'], function(_, angular, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var userMenuCourseController = [\r\n        '$scope', 'user.config', 'userMenuService',\r\n        Class.create(\r\n            /**\r\n            * UserMenuCourseController\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} userConfig - User configuration.\r\n            * @param {object} userMenuService - User menu service.\r\n            * @constructor\r\n            */\r\n            function($scope, userConfig, userMenuService) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.userConfig = userConfig;\r\n                this.userMenuService = userMenuService;\r\n\r\n                this.initialize();\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    course: null,\r\n                    isFreezed: null,\r\n                    isWished: null,\r\n                    orderOptions: null,\r\n                    defaultOption: null,\r\n                    courseImage: {\r\n                        url: null,\r\n                        thumbnailUrl: null                        \r\n                    },\r\n                    state: {\r\n                        isOrdering: false,\r\n                        isWishing: false\r\n                    }\r\n                },\r\n\r\n                /** User configuration. */\r\n                userConfig: null,\r\n                \r\n\r\n                /** User menu service. */\r\n                userMenuService: null,\r\n\r\n\r\n                /** \r\n                * Initialize controller. \r\n                */\r\n                initialize: function() {\r\n                    this.$scope.courseImage.url = this.userConfig.urls.api.coursePicture.format(this.$scope.course.id);\r\n                    this.$scope.courseImage.thumbnailUrl = this.userConfig.urls.api.courseThumbnail.format(this.$scope.course.id);\r\n\r\n                    this.$scope.orderCourse = _.bind(this.orderCourse, this);\r\n                    this.$scope.wishCourse = _.bind(this.wishCourse, this);\r\n\r\n                    this.$scope.$watch('course.ordersCount', _.bind(this._updateOrdersOptions, this));\r\n                },\r\n\r\n                /** \r\n                 * Order course.\r\n                 * @param {object} course - Course.\r\n                 * @param {number} quantity - Quantity.\r\n                 */\r\n                orderCourse: function(course, quantity) {\r\n                    assert.isNotNull(course, 'course');\r\n                    assert.isNotNull(quantity, 'quantity');\r\n\r\n                    this.$scope.state.isOrdering = true;\r\n                    this.$scope.onOrderCourse({ course: course, quantity: quantity })\r\n                        .finally(_.bind(function() {\r\n                            this.$scope.state.isOrdering = false;\r\n                        }, this));\r\n                },\r\n\r\n\r\n                /** \r\n                 * Wish course.\r\n                 * @param {object} course - Course.\r\n                 */\r\n                wishCourse: function(course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    this.$scope.state.isWishing = true;\r\n                    this.$scope.onWishCourse({ course: course })\r\n                        .finally(_.bind(function() {\r\n                            this.$scope.state.isWishing = false;\r\n                        }, this));\r\n                },\r\n\r\n\r\n                /** Update course orders options. */\r\n                _updateOrdersOptions: function () {\r\n                    var course = this.$scope.course;\r\n\r\n                    this.$scope.orderOptions = this.userMenuService.getOrderOptionsForCourse(course);\r\n                    this.$scope.defaultOption = this.userMenuService.getDefaultOrderOptionForCourse(course);\r\n                }\r\n            })\r\n    ];\r\n\r\n    return userMenuCourseController;\r\n});","\n/**\r\n * Menu view controller.\r\n * @file userMenuViewController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/controllers/menu/userMenuViewController',['angular', 'underscore', 'framework/class', 'framework/assert', 'framework/utils'], function (angular, _, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var userMenuViewController = [\r\n        '$scope', 'userMenuService', 'menuService',\r\n\r\n        /**\r\n         * Menu view controller\r\n         * @param {object} $scope - Controller scope service.\r\n         * @param {object} userMenuService - User menu service.\r\n         * @param {object} menuService - Menu service.\r\n         * @constructor\r\n         */\r\n        Class.create(\r\n            function($scope, userMenuService, menuService) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.userMenuService = userMenuService;\r\n                this.menuService = menuService;\r\n\r\n                this.initialize();\r\n            }, {\r\n                $scope: {\r\n                    date: null,\r\n                    courses: [],\r\n                    categoriesMenu: []\r\n                },\r\n\r\n                /** User menu service. */\r\n                userMenuService: null,\r\n\r\n                /** Menu service. */\r\n                menuService: null,\r\n\r\n\r\n                /** \r\n                 * Initialize controller. \r\n                 */\r\n                initialize: function () {\r\n                    this.$scope.$watch('courses', _.bind(this._onCoursesUpdated, this));\r\n                },\r\n\r\n\r\n                /** \r\n                 * Courses updated handler.\r\n                 * @param {array} courses - Courses.\r\n                  */\r\n                _onCoursesUpdated: function(courses) {\r\n                    assert.isNotNull(courses, 'courses');\r\n                    assert.isArray(courses, 'courses');\r\n\r\n                    this.$scope.categoriesMenu = this.menuService.groupCoursesByCategories(courses);\r\n                }\r\n            })\r\n    ];\r\n\r\n    return userMenuViewController;\r\n});","\n/**\r\n * userOrdersController.\r\n * @file userOrdersController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/controllers/orders/userOrdersController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils', 'toastr'], function (_, angular, Class, assert, utils, toastr) {\r\n    'use strict';\r\n\r\n    var userOrdersController = ['$scope', '$q', 'orderService', 'boxCapacityService',\r\n        /**\r\n         * User orders controller\r\n         * @param {object} $scope - Controller scope service.\r\n         * @param {object} $q - Promise service.\r\n         * @param {object} orderService - Order service.\r\n         * @param {object} boxCapacityService - Box capacity service.\r\n         * @constructor\r\n         */\r\n        Class.create(function ($scope, $q, orderService, boxCapacityService) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.$q = $q;\r\n                this.orderService = orderService;\r\n                this.boxCapacityService = boxCapacityService;\r\n\r\n                this.initialize();\r\n            }, {\r\n                $scope: {\r\n                    date: null,\r\n                    isFreezed: null,\r\n                    orders: [],\r\n                    orderedBoxes: {}\r\n                },\r\n\r\n                /** Promise service. */\r\n                $q: null,\r\n\r\n                /** Order service. */\r\n                orderService: null,\r\n\r\n                /** Box capacity service. */\r\n                boxCapacityService: null,\r\n\r\n\r\n                /** \r\n                 * Initialize controller. \r\n                 */\r\n                initialize: function () {                                      \r\n                    this.$scope.removeOrder = _.bind(this.removeOrder, this);\r\n                    this.$scope.moveOrderToBox = _.bind(this.moveOrderToBox, this);\r\n\r\n                    this.$scope.$watch('orders', _.bind(this._updateOrders, this), true);\r\n                },\r\n\r\n\r\n                /** \r\n                 * Remove order.\r\n                 * @param {object} order - Order.\r\n                 */\r\n                removeOrder: function (order) {\r\n                    assert.isNotNull(order, 'order');\r\n\r\n                    return this.$scope.onRemoveOrder({ order: order });\r\n                },\r\n                \r\n\r\n                /** \r\n                 * Move order to box.\r\n                 * @param {object} order - Order.\r\n                 * @param {object} box - Box.\r\n                 */\r\n                moveOrderToBox: function (order, box) {\r\n                    assert.isNotNull(order, 'order');\r\n                    assert.isNotNull(box, 'box');\r\n\r\n                    var validationResult = this._validateBoxCapacity(order, box);\r\n                    if (validationResult.isValid) {\r\n                        return this.$scope.onMoveOrderToBox({ order: order, box: box });\r\n                    } else {\r\n                        toastr.error(validationResult.message);\r\n                                               \r\n                        return this.$q.rejectAsync(validationResult.message);\r\n                    }\r\n                },\r\n\r\n\r\n                /** Update ordered boxes. */\r\n                _updateOrders: function() {\r\n                    this.$scope.orderedBoxes = this.orderService.groupOrdersByBoxes(this.$scope.orders);\r\n                },\r\n\r\n\r\n                /** \r\n                 * Validate box capacity.\r\n                 * @param {object} order - Order.\r\n                 * @param {number} boxIndex - Box index.\r\n                 * @returns {boolean} Box capacity validation result.\r\n                  */\r\n                _validateBoxCapacity: function(order, boxIndex) {\r\n                    var targetBox = _.find(this.$scope.orderedBoxes.boxes, function(box) {\r\n                        return box.index === boxIndex;\r\n                    });\r\n                    \r\n                    var boxOrders = targetBox ? angular.copy(targetBox.orders) : [];\r\n                    boxOrders = this.orderService.addNewOrderToCollection(boxOrders, order);\r\n                    var validationResult = this.boxCapacityService.checkBoxCapacity(boxOrders);\r\n\r\n                    return validationResult;\r\n                }\r\n            })];\r\n\r\n    return userOrdersController;\r\n});","\n/**\r\n * userOrderController.\r\n * @file userOrderController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/controllers/orders/userOrderController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils'], function(_, angular, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var userOrderController = [\r\n        '$scope', 'orderService',\r\n        /**\r\n         * User order controller.\r\n         * @param {object} $scope - Controller scope service.\r\n         * @param {object} orderService - Order service.\r\n         * @constructor\r\n         */\r\n        Class.create(function($scope, orderService) {\r\n            this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n            this.orderService = orderService;\r\n\r\n            this.initialize();\r\n        }, {\r\n            $scope: {\r\n                order: null,\r\n                isFreezed: null,\r\n                isBoxingAllowed: null,\r\n                boxes: [],\r\n                state: {\r\n                    inMovingToBox: false,\r\n                    isRemoving: false\r\n                }\r\n            },\r\n\r\n            /** Order service. */\r\n            orderService: null,\r\n\r\n\r\n            /** \r\n             * Initialize controller. \r\n             */\r\n            initialize: function () {\r\n                this.$scope.isBoxingAllowed = this.orderService.checkCourseBoxingAllowed(this.$scope.order.course);\r\n\r\n                this.$scope.removeOrder = _.bind(this.removeOrder, this);\r\n                this.$scope.moveOrderToBox = _.bind(this.moveOrderToBox, this);\r\n                this.$scope.moveOrderToNewBox = _.bind(this.moveOrderToNewBox, this);\r\n            },\r\n\r\n\r\n            /** \r\n             * Remove order.\r\n             * @param {object} order - Order.\r\n             */\r\n            removeOrder: function(order) {\r\n                assert.isNotNull(order, 'order');\r\n\r\n                this.$scope.state.isRemoving = true;\r\n                this.$scope.onRemoveOrder({ order: order })\r\n                    .finally(_.bind(function () {\r\n                    this.$scope.state.isRemoving = false;\r\n                }, this));\r\n            },\r\n\r\n            /** \r\n             * Move order to box.\r\n             * @param {object} order - Order.\r\n             * @param {object} box - Box.\r\n             */\r\n            moveOrderToBox: function(order, box) {\r\n                assert.isNotNull(order, 'order');\r\n                assert.isNotNull(box, 'box');\r\n\r\n                this.$scope.state.inMovingToBox = true;\r\n                this.$scope.onMoveOrderToBox({ order: order, box: box })\r\n                    .finally(_.bind(function() {\r\n                        this.$scope.state.inMovingToBox = false;\r\n                    }, this));\r\n            },\r\n\r\n            /** \r\n             * Move order to new box.\r\n             * @param {object} order - Order.\r\n             */\r\n            moveOrderToNewBox: function(order) {\r\n                assert.isNotNull(order, 'order');\r\n\r\n                var box = this.orderService.getNewBoxIndex(this.$scope.boxes);\r\n\r\n                this.moveOrderToBox(order, box);\r\n            }\r\n        })\r\n    ];\r\n\r\n    return userOrderController;\r\n});","\n/**\r\n * controllers.\r\n * @file controllers.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('user/menu/controllers/controllers',[\r\n        'angular', 'core/core',\r\n        'user/menu/controllers/userManageOrdersController',\r\n        'user/menu/controllers/anonymousUserMenuController',\r\n        'user/menu/controllers/menu/userMenuController',\r\n        'user/menu/controllers/menu/userMenuCourseController',\r\n        'user/menu/controllers/menu/userMenuViewController',\r\n        'user/menu/controllers/orders/userOrdersController',\r\n        'user/menu/controllers/orders/userOrderController'\r\n    ],\r\n    function (angular, core,\r\n        userManageOrdersController, anonymousUserMenuController,\r\n        userMenuController, userMenuCourseController, userMenuViewController,\r\n        userOrdersController, userOrderController) {\r\n        'use strict';\r\n\r\n        var dependencies = [core.name];\r\n        var controllers = angular.module('lunchtime.user.menu.controllers', dependencies);\r\n\r\n        controllers.controller('userManageOrdersController', userManageOrdersController);\r\n        controllers.controller('anonymousUserMenuController', anonymousUserMenuController);\r\n\r\n        // Menu\r\n        controllers.controller('userMenuController', userMenuController);\r\n        controllers.controller('userMenuCourseController', userMenuCourseController);\r\n        controllers.controller('userMenuViewController', userMenuViewController);\r\n\r\n        // Orders\r\n        controllers.controller('userOrdersController', userOrdersController);\r\n        controllers.controller('userOrderController', userOrderController);\r\n\r\n        return controllers;\r\n    });","\n/**\r\n * orderOption.\r\n * @file orderOption.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/models/orderOption',['underscore', 'framework/assert'], function (_, assert) {\r\n    'use strict';\r\n\r\n    /** \r\n    * Oreder option for course.\r\n    * @param {number} quantity - order quantity.\r\n    * @param {string} name - display name for option.\r\n    */\r\n    var OrderOption = function(quantity, name) {\r\n        assert.isNotNull(quantity, 'quantity');\r\n\r\n        this.quantity = quantity;\r\n        this.name = _.isUndefined(name) ? quantity.toString() : name;\r\n    };\r\n\r\n    return OrderOption;\r\n});","\n/**\r\n * userMenuService.\r\n * @file userMenuService.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/services/userMenuService',['underscore', 'framework/assert', 'user/menu/models/orderOption'], function (_, assert, OrderOption) {\r\n    'use strict';\r\n\r\n    var userMenuService = ['categoryService',\r\n        function (categoryService) {\r\n            \r\n            return {\r\n                getDefaultOrderOptionForCourse: function(course) {\r\n                    var portionsLeft = course.maxOrders - course.ordersCount;\r\n                    var defaultOption = portionsLeft === 0.5\r\n                        ? new OrderOption(0.5, '1/2')\r\n                        : new OrderOption(1, '');\r\n\r\n                    return defaultOption;\r\n                },\r\n                \r\n                getOrderOptionsForCourse: function (course) {\r\n                    var options = [];\r\n\r\n                    var portionsLeft = course.maxOrders - course.ordersCount;\r\n\r\n                    if (portionsLeft === 0)\r\n                        return options;\r\n\r\n                    var isHalfPortionsAllowed = categoryService.isHalfPortionsAllowed(course.category);\r\n                    if (isHalfPortionsAllowed && portionsLeft >= 0.5) {\r\n                        options.push(new OrderOption(0.5, '1/2'));\r\n                    }\r\n\r\n                    if (portionsLeft >= 2)\r\n                        options.push(new OrderOption(2, '2'));\r\n\r\n                    return options;\r\n                }\r\n            };\r\n        }];\r\n\r\n    return userMenuService;\r\n});","\n/**\r\n * box.\r\n * @file box.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/models/box',['framework/assert'], function (assert) {\r\n    'use strict';\r\n\r\n    /** \r\n    * Ordered box.\r\n    * @param {number} index - Box index.\r\n    * @param {array} orders - Box orders.\r\n    */\r\n    var Box = function (index, orders) {\r\n        assert.isNotNull(index, 'index');\r\n        assert.isNotNull(orders, 'orders');\r\n        assert.isArray(orders, 'orders');\r\n\r\n        this.index = index;\r\n        this.orders = orders;\r\n        this.ordersSum = 0;\r\n    };\r\n\r\n    return Box;\r\n});","\n/**\r\n * orderedBoxes.\r\n * @file orderedBoxes.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/models/orderedBoxes',['framework/assert'], function (assert) {\r\n    'use strict';\r\n\r\n    /** \r\n    * Ordered Boxes.\r\n    * @param {array} boxes - Ordered boxes.\r\n    */\r\n    var OrderedBoxes = function (boxes) {\r\n        assert.isNotNull(boxes, 'boxes');\r\n        assert.isArray(boxes, 'boxes');\r\n        \r\n        this.boxes = boxes;\r\n        this.ordersSum = 0;\r\n    };\r\n\r\n    return OrderedBoxes;\r\n});","\n/**\r\n * orderService.\r\n * @file orderService.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/services/orderService',[\r\n    'underscore', 'framework/assert', 'framework/utils',\r\n    'user/menu/models/box', 'user/menu/models/orderedBoxes'\r\n],\r\nfunction (_, assert, utils, Box, OrderedBoxes) {\r\n    'use strict';\r\n\r\n    var orderService = ['user.config', function (userConfig) {\r\n\r\n        return {\r\n            /** \r\n             * Group orders by boxes.\r\n             * @param {array} orders - Orders.\r\n             * @returns {object} Ordered boxes.\r\n             */\r\n            groupOrdersByBoxes: function (orders) {\r\n                assert.isArray(orders, 'orders');\r\n\r\n                var boxes = _.chain(orders)\r\n                    .groupBy(function(order) {\r\n                        return order.box;\r\n                    })\r\n                    .pairs()\r\n                    .map(function(boxOrdersPair) {\r\n                        var boxIndex = parseInt(boxOrdersPair[0], 10);\r\n                        var boxOrders = _.chain(boxOrdersPair[1])\r\n                            .sortBy(function(order) {\r\n                                return order.course.name;\r\n                            })\r\n                            .sortBy(function(order) {\r\n                                return order.course.category.id;\r\n                            })\r\n                            .value();\r\n\r\n                        return new Box(boxIndex, boxOrders);\r\n                    })\r\n                    .value();\r\n\r\n                if (boxes.length === 0) {\r\n                    boxes.push(new Box(0, []));\r\n                }\r\n\r\n                var orderedBoxes = new OrderedBoxes(boxes);\r\n                this.calculateOrdersSum(orderedBoxes);\r\n\r\n                return orderedBoxes;\r\n            },\r\n\r\n            /** \r\n             * Add new order to orders collection and update quantities.\r\n             * @param {array} orders - Orders.\r\n             * @param {object} newOrder - New order.\r\n             * @returns {array} Updated orders collection.\r\n              */\r\n            addNewOrderToCollection: function(orders, newOrder) {\r\n                assert.isArray(orders, 'orders');\r\n                assert.isNotNull(newOrder, 'newOrder');\r\n\r\n                var existingOrder = _.find(orders, function(order) {\r\n                    return order.id === newOrder.id;\r\n                });\r\n\r\n                if (existingOrder) {\r\n                    existingOrder.quantity += newOrder.quantity;\r\n                } else {\r\n                    orders.push(newOrder);\r\n                }\r\n\r\n                return orders;\r\n            },\r\n\r\n\r\n            /** \r\n             * Remove order from collection.\r\n             * @param {array} orders - Orders.\r\n             * @param {object} removedOrder - Removed order.\r\n             * @returns {array} Updated orders collection.\r\n              */\r\n            removeOrderFromCollection: function (orders, removedOrder) {\r\n                assert.isArray(orders, 'orders');\r\n                assert.isNotNull(removedOrder, 'removedOrder');\r\n\r\n                return _.without(orders, removedOrder);\r\n            },\r\n\r\n\r\n            /** \r\n             * Generate new box index.\r\n             * @param {array} boxes - Boxes.\r\n             * @returns {number} New box index.\r\n             */\r\n            getNewBoxIndex: function (boxes) {\r\n                assert.isArray(boxes, 'boxes');\r\n\r\n                var newBoxIndex = 1;\r\n                var boxIndexes = _.map(boxes, function(box) {\r\n                    return box.index;\r\n                });\r\n\r\n                while (newBoxIndex < userConfig.restrictions.maxBoxCount) {\r\n                    var isBoxExists = _.contains(boxIndexes, newBoxIndex);\r\n                    if (!isBoxExists) {\r\n                        return newBoxIndex;\r\n                    } else {\r\n                        newBoxIndex++;\r\n                    }\r\n                }\r\n\r\n                throw new Error('Вы не можете заказать больше {0} боксов.'.format(userConfig.restrictions.maxBoxCount));\r\n            },\r\n\r\n\r\n            /** \r\n             * Calculate orders summary price.\r\n             * @param {array} orderedBoxes - Ordered boxes.\r\n             * @returns {number} Summary price.\r\n             */\r\n            calculateOrdersSum: function (orderedBoxes) {\r\n                assert.isNotNull(orderedBoxes, 'orderedBoxes');\r\n\r\n                var ordersSum = 0;\r\n                _.each(orderedBoxes.boxes, function(box) {\r\n                    var boxOrdersSum = 0;\r\n                    _.each(box.orders, function(order) {\r\n                        var orderSum = order.course.price * order.quantity;\r\n                        boxOrdersSum += orderSum;\r\n                    });\r\n\r\n                    box.ordersSum = boxOrdersSum;\r\n                    ordersSum += boxOrdersSum;\r\n                });\r\n\r\n                orderedBoxes.ordersSum = ordersSum;\r\n            },\r\n\r\n\r\n            /** \r\n             * Check if course could be moved to box.\r\n             * @param {object} course - Course.\r\n             * @returns {boolean} Is course can be moved to the box.\r\n             */\r\n            checkCourseBoxingAllowed: function(course) {\r\n                assert.isNotNull(course, 'course');\r\n\r\n                var isBoxingAllowed = _.contains(userConfig.restrictions.boxingAllowedCategories, course.category.id);\r\n\r\n                return isBoxingAllowed;\r\n            }\r\n        };\r\n    }];\r\n\r\n    return orderService;\r\n});","\n/**\r\n * Order.\r\n * @file order.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('common/models/order',['framework/assert'], function (assert) {\r\n    'use strict';\r\n\r\n    /** \r\n    * Order.\r\n    * @param {number} id - Order ID.\r\n    * @param {object} course - Ordered course.\r\n    * @param {number} quantity - Ordered course quantity.\r\n    * @param {number} box - Order box index.\r\n    */\r\n    var Order = function (id, course, quantity, box) {\r\n        assert.isNotNull(id, 'id');\r\n        assert.isNotNull(course, 'course');\r\n        assert.isNotNull(quantity, 'quantity');\r\n        assert.isNumber(quantity, 'quantity');\r\n        assert.isNotNull(box, 'box');\r\n        assert.isNumber(box, 'box');\r\n\r\n        this.id = id;\r\n        this.course = course;\r\n        this.quantity = quantity;\r\n        this.box = box;\r\n    };\r\n\r\n    return Order;\r\n});","\n/**\r\n * userMenuApiService.\r\n * @file userMenuApiService.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine(\r\n    'user/menu/services/userMenuApiService',[\r\n        'underscore', 'moment', 'framework/assert', 'framework/utils',\r\n        'common/models/order'\r\n    ],\r\n    function(_, moment, assert, utils, Order) {\r\n        'use strict';\r\n\r\n        var userMenuApiService = [\r\n            '$http', '$q', 'user.config', 'userMenuApiMappingService',\r\n            function($http, $q, userConfig, userMenuApiMappingService) {\r\n                var api = userConfig.urls.api;\r\n\r\n                return {\r\n                    /** \r\n                    * Get list of courses and orders for current user for specified date.\r\n                    * @param {date} date - courses and orders date.\r\n                    * @returns {object} promise for courses and orders.\r\n                    */\r\n                    getCoursesAndOrders: function(date) {\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var options = {\r\n                            params: {\r\n                                date: moment(date).format('YYYY-MM-DD')\r\n                            }\r\n                        };\r\n\r\n                        $http.get(api.getCoursesAndOrders, options)\r\n                            .success(function(response) {\r\n                                assert.isNotNull(response, 'response');\r\n\r\n                                var menuData = userMenuApiMappingService.mapResponseToMenuData(response);\r\n                                deferred.resolve(menuData);\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },\r\n\r\n\r\n                    /** \r\n                    * Get list of courses for specified date.\r\n                    * @param {date} date - courses and orders date.\r\n                    * @returns {object} promise for courses.\r\n                    */\r\n                    getCourses: function(date) {\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var options = {\r\n                            params: {\r\n                                date: moment(date).format('YYYY-MM-DD')\r\n                            }\r\n                        };\r\n\r\n                        $http.get(api.getCourses, options)\r\n                            .success(function(response) {\r\n                                assert.isNotNull(response, 'response');\r\n\r\n                                var menuData = userMenuApiMappingService.mapResponseToAnonymousMenuData(response);\r\n                                deferred.resolve(menuData);\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },\r\n\r\n\r\n                    /** \r\n                    * Order course.\r\n                    * @param {object} course - Ordered course.\r\n                    * @param {number} quantity - Course quantity in order.\r\n                    * @param {date} date - Order date.\r\n                    */\r\n                    orderCourse: function(course, quantity, date) {\r\n                        assert.isNotNull(course, 'course');\r\n                        assert.isNotNull(quantity, 'quantity');\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        var data = {\r\n                            courseId: course.id,\r\n                            quantity: quantity,\r\n                            date: moment(date).format('YYYY-MM-DD')\r\n                        };\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        $http.post(api.orderCourse, data)\r\n                            .success(function(orderId) {\r\n                                assert.isNotNull(orderId, 'orderId');\r\n\r\n                                orderId = parseInt(orderId, 10);\r\n                                var order = new Order(orderId, course, quantity, 0);\r\n\r\n                                deferred.resolve(order);\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },\r\n\r\n                    /** \r\n                    * Remove order.\r\n                    * @param {object} order - Order to remove.\r\n                    * @param {date} date - Order date.\r\n                    */\r\n                    removeOrder: function(order, date) {\r\n                        assert.isNotNull(order, 'order');\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var data = {\r\n                            orderId: order.id,\r\n                            date: moment(date).format('YYYY-MM-DD')\r\n                        };\r\n\r\n                        $http.post(api.removeOrder, data)\r\n                            .success(function() {\r\n                                deferred.resolve(order);\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },\r\n\r\n                    moveOrderToBox: function(order, box, date) {\r\n                        assert.isNotNull(order, 'order');\r\n                        assert.isNotNull(box, 'box');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var data = {\r\n                            orderId: order.id,\r\n                            quantity: order.quantity,\r\n                            box: box,\r\n                            date: moment(date).format('YYYY-MM-DD')\r\n                        };\r\n\r\n                        $http.post(api.moveOrderToBox, data)\r\n                            .success(function(orderId) {\r\n                                assert.isNotNull(orderId, 'orderId');\r\n\r\n                                orderId = parseInt(orderId, 10);\r\n                                var newOrder = new Order(orderId, order.course, order.quantity, box);\r\n\r\n                                deferred.resolve(newOrder);\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * Wish course.\r\n                     * @param {object} course - Course.\r\n                     * @param {date} date - Date.\r\n                     */\r\n                    wishCourse: function(course, date) {\r\n                        assert.isNotNull(course, 'course');\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        var data = {\r\n                            menuItemId: course.menuItemId,\r\n                            date: moment(date).format('YYYY-MM-DD')\r\n                        };\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        $http.post(api.wishCourse, data)\r\n                            .success(function() {\r\n                                deferred.resolve();\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },\r\n\r\n                    \r\n                    /** \r\n                     * Unwish course.\r\n                     * @param {object} course - Course.\r\n                     * @param {date} date - Date.\r\n                     */\r\n                    unwishCourse: function(course, date) {\r\n                        assert.isNotNull(course, 'course');\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        var data = {\r\n                            menuItemId: course.menuItemId,\r\n                            date: moment(date).format('YYYY-MM-DD')\r\n                        };\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        $http.post(api.unwishCourse, data)\r\n                            .success(function() {\r\n                                deferred.resolve();\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    }\r\n                };\r\n            }\r\n        ];\r\n\r\n        return userMenuApiService;\r\n    });","\n/**\r\n * Time Span.\r\n * @file timeSpan.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('core/models/timeSpan',['underscore', 'framework/assert'], function (_, assert) {\r\n    'use strict';\r\n\r\n    /** \r\n    * Time Span (Hours, Minutes, Seconds).\r\n    * @param {number} hours - Hours value.\r\n    * @param {number} minutes - Minutes value.\r\n    * @param {number} seconds - Seconds value (optional).\r\n    */\r\n    var TimeSpan = function(hours, minutes, seconds) {\r\n        assert.isNumber(hours);\r\n        assert.isTrue(hours >= 0 && hours < 24, 'hours', '\"{0}\" value must be between 0 and 23.');\r\n\r\n        assert.isNumber(minutes);\r\n        assert.isTrue(minutes >= 0 && minutes < 59, 'minutes', '\"{0}\" value must be between 0 and 59.');\r\n        if (!_.isUndefined(seconds)) {\r\n            assert.isNumber(seconds);\r\n            assert.isTrue(seconds >= 0 && seconds < 59, 'seconds', '\"{0}\" value must be between 0 and 59.');\r\n        }\r\n\r\n        this.hours = hours;\r\n        this.minutes = minutes;\r\n        this.seconds = seconds || 0;\r\n    };\r\n\r\n    return TimeSpan;\r\n});","\n/**\r\n * menuData.\r\n * @file menuData.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/models/menuData',['framework/assert'], function (assert) {\r\n    'use strict';\r\n\r\n    /** \r\n    * Menu Data.\r\n    * @param {date} date - Menu date.\r\n    * @param {boolean} isFreezed - Is menu freezed.\r\n    * @param {object} freezeTime - Menu freeze time.\r\n    * @param {array} courses - Menu courses.\r\n    * @param {array} orders - Ordered courses.\r\n    * @param {array} wishedCourses - Wished courses.\r\n    */\r\n    var MenuData = function (date, isFreezed, freezeTime, courses, orders, wishedCourses) {\r\n        this.date = date;\r\n        this.isFreezed = isFreezed;\r\n        this.freezeTime = freezeTime;\r\n        this.courses = courses;\r\n        this.orders = orders;\r\n        this.wishedCourses = wishedCourses || null;\r\n    };\r\n\r\n    return MenuData;\r\n});","\n/**\r\n * userMenuApiMappingService.\r\n * @file userMenuApiMappingService.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine(\r\n    'user/menu/services/userMenuApiMappingService',[\r\n        'underscore', 'moment', 'framework/assert', 'framework/utils', 'core/models/timeSpan',\r\n        'common/models/order',\r\n        'user/menu/models/menuData'\r\n    ],\r\n    function (_, moment, assert, utils, TimeSpan, Order, MenuData) {\r\n        'use strict';\r\n\r\n        var userMenuApiMappingService = [\r\n            'commonApiMappingService',\r\n            function (commonApiMappingService) {\r\n                return {\r\n\r\n                    /** \r\n                     * Map responce from getCoursesAndOrders request to MenuData model.\r\n                     * @param {object} response - response.\r\n                     * @returns {object} MenuData.\r\n                     * @private\r\n                     */\r\n                    mapResponseToMenuData: function (response) {\r\n                        assert.isNotNull(response.Date, 'response.Date');\r\n                        assert.isArray(response.AvailableCourses, 'response.AvailableCourses');\r\n                        assert.isArray(response.OrderedMenus, 'response.OrderedMenus');\r\n\r\n                        var coursesMap = {};\r\n\r\n                        var availableCourses = _.map(response.AvailableCourses, function (courseData) {\r\n                            var course = commonApiMappingService.mapResponseToCourse(courseData);\r\n                            coursesMap[course.id] = course;\r\n\r\n                            return course;\r\n                        }, this);\r\n\r\n                        var orders = _.map(response.OrderedMenus, function (orderData) {\r\n                            var course = coursesMap[orderData.Course.ID];\r\n                            assert.isNotNull(course, 'course');\r\n\r\n                            var order = new Order(\r\n                                orderData.Course.OrderItemID,\r\n                                course,\r\n                                orderData.Quantity,\r\n                                orderData.Course.Boxindex\r\n                            );\r\n\r\n                            return order;\r\n                        });\r\n\r\n                        var menuDate = moment(response.Date).toDate();\r\n                        var isFreezed = response.IsFreezed;\r\n                        var freezeMoment = moment(response.FreezeTime, 'hh:mm:ss');\r\n                        var freezeTime = new TimeSpan(freezeMoment.hour(), freezeMoment.minute());\r\n\r\n                        var wishedCourses = _.map(response.WishedCourses, function (courseId) {\r\n                            return coursesMap[courseId];\r\n                        });\r\n\r\n                        var menuData = new MenuData(menuDate, isFreezed, freezeTime, availableCourses, orders, wishedCourses);\r\n\r\n                        return menuData;\r\n                    }\r\n                };\r\n            }\r\n        ];\r\n\r\n        return userMenuApiMappingService;\r\n    });","\n/**\r\n * boxCapacityValidationResult.\r\n * @file boxCapacityValidationResult.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/models/boxCapacityValidationResult',[], function() {\r\n    'use strict';\r\n\r\n    /** \r\n    * Box Capacity Validation Result.\r\n    * @param {boolean} isValid - Is box capacity validation passed.\r\n    * @param {string} message - Validation message.\r\n    * @constructor\r\n    */\r\n    var boxCapacityValidationResult = function (isValid, message) {\r\n        this.isValid = isValid;\r\n        this.message = message;        \r\n    };\r\n\r\n    return boxCapacityValidationResult;\r\n});","\n/**\r\n * boxCapacityService.\r\n * @file boxCapacityService.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/services/boxCapacityService',[\r\n        'underscore', 'framework/assert',\r\n        'common/models/categories',\r\n        'user/menu/models/boxCapacityValidationResult'\r\n    ],\r\n    function(_, assert, categories, BoxCapacityValidationResult) {\r\n        'use strict';\r\n\r\n        var boxCapacityService = [\r\n            function() {\r\n                return {\r\n                    checkBoxCapacity: function(orders) {\r\n                        assert.isNotNull(orders, 'orders');\r\n\r\n                        // TODO: Enable box capacity service.\r\n                        return new BoxCapacityValidationResult(true);\r\n\r\n                        var validationRules = [this._checkSalads, this._checkOthers, this._checkSoups, this._checkMeatAndGarnish];\r\n                        for (var i = 0; i < validationRules.length; i++) {\r\n                            var validationResult = validationRules[i](orders);\r\n                            if (!validationResult.isValid)\r\n                                return validationResult;\r\n                        }\r\n\r\n                        return new BoxCapacityValidationResult(true);\r\n                    },\r\n\r\n                    _checkSalads: function(orders) {\r\n                        var isSaladInBox = _.any(orders, function(order) {\r\n                            return order.course.category.id === categories.salad;\r\n                        });\r\n                        if (isSaladInBox) {\r\n                            return new BoxCapacityValidationResult(false, 'Салаты уже упакованы в боксы.');\r\n                        }\r\n\r\n                        return new BoxCapacityValidationResult(true);\r\n                    },\r\n\r\n                    _checkOthers: function(orders) {\r\n                        var isOtherInBox = _.any(orders, function(order) {\r\n                            return order.course.category.id === categories.other;\r\n                        });\r\n                        if (isOtherInBox) {\r\n                            return new BoxCapacityValidationResult(false, 'Блюда из категории \"Другое\" нельзя помещать в боксы.');\r\n                        }\r\n\r\n                        return new BoxCapacityValidationResult(true);\r\n                    },\r\n\r\n                    _checkSoups: function(orders) {\r\n                        var soups = _.filter(orders, function(order) {\r\n                            return order.course.category.id === categories.soup;\r\n                        });\r\n\r\n                        // No soups - no problems.\r\n                        if (soups.length === 0)\r\n                            return new BoxCapacityValidationResult(true);\r\n\r\n                        // Soup cannot be mixed with other course.\r\n                        if (soups.length !== orders.length)\r\n                            return new BoxCapacityValidationResult(false, 'Суп должен находиться в отдельном боксе');\r\n\r\n                        // Soup cannot be mixed with other soup.\r\n                        if (soups.length > 1)\r\n                            return new BoxCapacityValidationResult(false, 'Нельзя смешивать два разных супа в одном боксе.');\r\n\r\n                        // Container could contain only 1 portion of soup.\r\n                        var soup = soups[0];\r\n                        if (soup.quantity > 1)\r\n                            return new BoxCapacityValidationResult(false, 'Нельзя поместить больше одной порции супа в бокс.');\r\n\r\n                        return new BoxCapacityValidationResult(true);\r\n                    },\r\n\r\n                    _checkMeatAndGarnish: function(orders) {\r\n                        var totalQuantity = 0;\r\n                        _.each(orders, function(order) {\r\n                            totalQuantity += order.quantity;\r\n                        });\r\n\r\n                        if (totalQuantity > 2)\r\n                            return new BoxCapacityValidationResult(false, 'Нельзя поместить больше двух порций в один конейнер.');\r\n\r\n                        return new BoxCapacityValidationResult(true);\r\n                    }\r\n                };\r\n            }\r\n        ];\r\n\r\n        return boxCapacityService;\r\n    });","\n/**\r\n * services.\r\n * @file services.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('user/menu/services/services',[\r\n        'angular', 'angular-resource', 'core/core', 'common/common',\r\n        'user/menu/services/userMenuService',\r\n        'user/menu/services/orderService',\r\n        'user/menu/services/userMenuApiService',\r\n        'user/menu/services/userMenuApiMappingService',\r\n        'user/menu/services/boxCapacityService'\r\n    ],\r\n    function(angular, ngResource, core, common, userMenuService, orderService, userMenuApiService, userMenuApiMappingService, boxCapacityService) {\r\n        'use strict';\r\n\r\n        var dependencies = [\r\n            'ngResource',\r\n            core.name,\r\n            common.name\r\n        ];\r\n\r\n        var services = angular.module('lunchtime.user.menu.services', dependencies);\r\n        services.service('userMenuService', userMenuService);\r\n        services.service('orderService', orderService);\r\n        services.service('userMenuApiService', userMenuApiService);\r\n        services.service('userMenuApiMappingService', userMenuApiMappingService);\r\n        services.service('boxCapacityService', boxCapacityService);\r\n\r\n        return services;\r\n    });","\n/**\r\n * boxTitleFilter.\r\n * @file boxTitleFilter.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/filters/boxTitleFilter',['framework/assert'], function(assert) {\r\n    'use strict';\r\n\r\n    var boxTitleFilter = [function () {\r\n        return function(box) {\r\n            if (!box) return '';\r\n\r\n            if (box.index === 0)\r\n                return 'Заказ';\r\n\r\n            return 'Бокс #{0}'.format(box.index);            \r\n        };\r\n    }];\r\n\r\n    return boxTitleFilter;\r\n});","\n/**\r\n * filters.\r\n * @file filters.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('user/menu/filters/filters',['angular',\r\n        'user/menu/filters/boxTitleFilter'],\r\n    function(angular, boxTitleFilter) {\r\n        'use strict';\r\n\r\n        var dependencies = [];\r\n        var filters = angular.module('lunchtime.user.menu.filters', dependencies);\r\n        filters.filter('boxTitleFilter', boxTitleFilter);\r\n\r\n        return filters;\r\n    });","\n/**\r\n * userMenu.\r\n * @file userMenu.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/directives/menu/userMenu',[], function() {\r\n    'use strict';\r\n\r\n    var userMenu = [function () {\r\n\r\n        return {\r\n            restrict: 'AE',\r\n            templateUrl: '/template/user/menu/menu.tmpl',\r\n            scope: {\r\n                courses: '=',\r\n                wishedCourses: '=',\r\n                date: '=',\r\n                isFreezed: '=',\r\n                onOrderCourse: '&'\r\n            },\r\n            controller: 'userMenuController'\r\n        };\r\n    }];\r\n\r\n    return userMenu;\r\n});","\n/**\r\n * userMenuCourse.\r\n * @file userMenuCourse.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('user/menu/directives/menu/userMenuCourse',[], function() {\r\n    'use strict';\r\n\r\n    var userMenuCourse = [\r\n        function() {\r\n\r\n            return {\r\n                restrict: 'AE',\r\n                templateUrl: '/template/user/menu/menu/course.tmpl',\r\n                scope: {\r\n                    course: '=',\r\n                    isFreezed: '=',\r\n                    isWished: '=',\r\n                    onOrderCourse: '&',\r\n                    onWishCourse: '&'\r\n                },\r\n                controller: 'userMenuCourseController'\r\n            };\r\n        }\r\n    ];\r\n\r\n    return userMenuCourse;\r\n});","\n/**\r\n * userMenuView.\r\n * @file userMenuView.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('user/menu/directives/menu/userMenuView',[], function() {\r\n    'use strict';\r\n\r\n    var userMenuView = [\r\n        function() {\r\n\r\n            return {\r\n                restrict: 'AE',\r\n                templateUrl: '/template/user/menu/view.tmpl',\r\n                scope: {\r\n                    courses: '=',\r\n                    date: '='\r\n                },\r\n                controller: 'userMenuViewController'\r\n            };\r\n        }\r\n    ];\r\n\r\n    return userMenuView;\r\n});","\n/**\r\n * userOrders.\r\n * @file userOrders.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/directives/orders/userOrders',[], function() {\r\n    'use strict';\r\n\r\n    var userOrders = [function() {\r\n\r\n        return {\r\n            restrict: 'AE',\r\n            templateUrl: '/template/user/menu/orders.tmpl',\r\n            scope: {\r\n                orders: '=',\r\n                date: '=',\r\n                isFreezed: '=',\r\n                onRemoveOrder: '&',\r\n                onMoveOrderToBox: '&'\r\n\r\n            },\r\n            controller: 'userOrdersController'\r\n        };\r\n    }];\r\n\r\n    return userOrders;\r\n});","\n/**\r\n * userOrder.\r\n * @file userOrder.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('user/menu/directives/orders/userOrder',[], function() {\r\n    'use strict';\r\n\r\n    var userOrder = [function () {\r\n\r\n        return {\r\n            restrict: 'AE',\r\n            templateUrl: '/template/user/menu/orders/order.tmpl',\r\n            scope: {\r\n                order: '=',\r\n                isFreezed: '=',\r\n                boxes: '=',\r\n                onRemoveOrder: '&',\r\n                onMoveOrderToBox: '&'\r\n            },\r\n            controller: 'userOrderController'\r\n        };\r\n    }];\r\n\r\n    return userOrder;\r\n});","\n/**\r\n * directives.\r\n * @file directives.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('user/menu/directives/directives',[\r\n        'angular',\r\n        'user/menu/directives/menu/userMenu',\r\n        'user/menu/directives/menu/userMenuCourse',\r\n        'user/menu/directives/menu/userMenuView',\r\n        'user/menu/directives/orders/userOrders',\r\n        'user/menu/directives/orders/userOrder'\r\n    ],\r\n    function(angular, userMenu, userMenuCourse, userMenuView, userOrders, userOrder) {\r\n        'use strict';\r\n\r\n        var dependencies = [];\r\n        var directives = angular.module('lunchtime.user.menu.directives', dependencies);\r\n\r\n        // Menu\r\n        directives.directive('ltUserMenu', userMenu);\r\n        directives.directive('ltUserMenuCourse', userMenuCourse);\r\n        directives.directive('ltUserMenuView', userMenuView);\r\n\r\n        // Orders\r\n        directives.directive('ltUserOrders', userOrders);\r\n        directives.directive('ltUserOrder', userOrder);\r\n\r\n        return directives;\r\n    });","\n/**\r\n * providers.\r\n * @file providers.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('user/menu/providers/providers',['angular'], function (angular) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var providers = angular.module('lunchtime.user.menu.providers', dependencies);\r\n\r\n    return providers;\r\n});","\n/**\r\n * templates.\r\n * @file templates.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('user/menu/templates/templates',['angular'], function (angular) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var templates = angular.module('lunchtime.user.menu.templates', dependencies);\r\n    \r\n    templates.run(['$templateCache', function ($templateCache) {\r\n        // $templateCache.put('templates/core/template.tmpl', template);\r\n    }]);\r\n\r\n    return templates;\r\n});","\n/**\r\n * Lunch Time Menu.\r\n * @file menu.js.\r\n * @copyright Copyright\r\n */\r\ndefine('user/menu/menu',['angular',\r\n        'core/core',\r\n        'common/common',\r\n        'user/menu/controllers/controllers',\r\n        'user/menu/services/services',\r\n        'user/menu/filters/filters',\r\n        'user/menu/directives/directives',\r\n        'user/menu/providers/providers',\r\n        'user/menu/templates/templates'],\r\n    function(angular, core, common, controllers, services, filters, directives, providers, templates) {\r\n        'use strict';\r\n\r\n        var dependencies = [\r\n            core.name,\r\n            common.name,\r\n            controllers.name,\r\n            services.name,\r\n            filters.name,\r\n            directives.name,\r\n            providers.name,\r\n            templates.name\r\n        ];\r\n\r\n        var menu = angular.module('lunchtime.user.menu', dependencies);\r\n\r\n        return menu;\r\n    });","\n/**\r\n * user module.\r\n * @file user.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine(\r\n    'user/user',[\r\n        'angular', 'common/common',\r\n        'user/user.config',\r\n        'user/user.routes',\r\n        'user/menu/menu'\r\n    ],\r\n    function(angular, common, userConfig, userRoutes, menuModule) {\r\n        'use strict';\r\n\r\n        var dependencies = [\r\n            common.name,\r\n            menuModule.name\r\n        ];\r\n\r\n        var userModule = angular.module('lunchtime.user', dependencies);\r\n        userModule.constant('user.config', userConfig);\r\n        userModule.config(userRoutes);\r\n\r\n        return userModule;\r\n    });","\n/**\r\n * admin.config.\r\n * @file admin.config.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/admin.config',['application.config'], function (config) {\r\n    'use strict';\r\n\r\n    var applicationUrl = '/Admin/Index';\r\n    var adminApiUrl = config.urls.api.baseUrl + '/Admin';\r\n    var ordersApiUrl = config.urls.api.baseUrl + '/Orders';\r\n\r\n    var viewsUrl = applicationUrl + '/View';\r\n\r\n    return {\r\n        urls: {\r\n            application: applicationUrl,\r\n            sales: '/Orders/Sales',\r\n            api: {\r\n                menu: {\r\n                    getMenuAndCourses: adminApiUrl + '/GetMenuAndCourses',\r\n                    removeCourseFromMenu: adminApiUrl + '/RemoveCourseFromMenu',\r\n                    createCourse: adminApiUrl + '/CreateCourse',\r\n                    updateCourse: adminApiUrl + '/UpdateCourse',\r\n                    removeCourse: adminApiUrl + '/RemoveCourse',\r\n                    changeCourseMaxOrders: adminApiUrl + '/ChangeMaxOrders',\r\n                    addCourseToMenu: adminApiUrl + '/AddCourseToMenu',\r\n                    tempCoursePicture: config.urls.api.baseUrl + '/coursepicture/image?tempname={0}',\r\n                    coursePicture: config.urls.api.coursePicture,\r\n                    courseThumbnail: config.urls.api.courseThumbnail,\r\n                    uploadCoursePicture: config.urls.api.baseUrl + '/coursepicture/image?companyid=' + config.defaultCompanyId + '&courseid={0}'\r\n                },\r\n                sales: {\r\n                    getUsersOrders: ordersApiUrl + '/GetUsersOrders',\r\n                    purchaseOrder: ordersApiUrl + '/PurchaseOrder',\r\n                    undoPurchaseOrder: ordersApiUrl + '/UndoPurchaseOrder',\r\n                    removeOrder: ordersApiUrl + '/RemoveOrder'\r\n                }\r\n            },\r\n            views: {\r\n                menuView: '/template/admin/menu.tmpl',\r\n                salesView: '/template/admin/sales.tmpl'\r\n            }\r\n        }\r\n    };\r\n});","\n/**\r\n * Lunch Time Admin Routes.\r\n * @file admin.routes.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('admin/admin.routes',[], function () {\r\n    'use strict';\r\n    \r\n    var userRoutes = ['$routeProvider', '$locationProvider', 'admin.config',\r\n        function ($routeProvider, $locationProvider, adminConfig) {\r\n           \r\n            var applicationUrl = adminConfig.urls.application;\r\n            var views = adminConfig.urls.views;\r\n\r\n            $routeProvider.when(applicationUrl + '/:date?', {\r\n                templateUrl: views.menuView,\r\n                controller: 'adminManageMenuController',\r\n                resolve: {\r\n                    menuData: ['adminMenuApiService', '$route', function (adminMenuApiService, $route) {\r\n\r\n                        var date = $route.current.params.date;\r\n\r\n                        if (!date) {\r\n                            var today = new Date();\r\n                            var offset = today.getDay() >= 5 ? 8 - today.getDay() : 1;\r\n                            date = today.setDate(today.getDate() + offset);\r\n                        }\r\n                        \r\n                        var promise = adminMenuApiService.getMenuAndCourses(date);\r\n\r\n                        return promise;\r\n                    }]\r\n                }\r\n            });\r\n\r\n            $routeProvider.when(adminConfig.urls.sales, {\r\n                templateUrl: views.salesView,\r\n                controller: 'adminSalesController',\r\n                resolve: {\r\n                    salesData: ['adminSalesApiService', function (adminSalesApiService) {\r\n                        var date = /*new Date(); //*/new Date(2015, 0, 1);\r\n                        var promise = adminSalesApiService.getUsersOrders(date);\r\n\r\n                        return promise;\r\n                    }]\r\n                }\r\n            });\r\n\r\n        }];\r\n\r\n    return userRoutes;\r\n});","\n/**\r\n * admin.events.\r\n * @file admin.events.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/admin.events',[], function() {\r\n    'use strict';\r\n\r\n    var events = {\r\n        sales: {\r\n            cardReader: {\r\n                input: 'lunch-time.admin.events.sales.card-reader.input'\r\n            }\r\n        }\r\n    };\r\n\r\n    return events;\r\n});","\n/**\r\n * adminManageMenuController.\r\n * @file adminManageMenuController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/controllers/adminManageMenuController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils', 'toastr'], function (_, angular, Class, assert, utils, toastr) {\r\n    'use strict';\r\n\r\n    var adminManageMenuController = [\r\n        '$scope', '$q', '$modal', 'config', 'adminMenuApiService', 'menuData',\r\n        Class.create(\r\n            /**\r\n            * Admin Menu Controller\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} $q - Promise service.\r\n            * @param {object} $modal - Modal service.\r\n            * @param {object} config - Application config.\r\n            * @param {object} adminMenuApiService - Admin Menu API service.\r\n            * @param {object} menuData - Menu Data.\r\n            * @constructor\r\n            */\r\n            function($scope, $q, $modal, config, adminMenuApiService, menuData) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.$q = $q;\r\n                this.$modal = $modal;\r\n                this.config = config;\r\n                this.adminMenuApiService = adminMenuApiService;\r\n\r\n                this.initialize(menuData);\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    date: null,\r\n                    menuCourses: [],\r\n                    availableCourses: []\r\n                },\r\n\r\n                /** Promise service. */\r\n                $q: null,     \r\n                \r\n                /** Modal service. */\r\n                $modal: null,\r\n\r\n                /** Application config. */\r\n                config: null,\r\n\r\n                /** Admin Menu API service. */\r\n                adminMenuApiService: null,\r\n                \r\n                /** \r\n                * Initialize controller. \r\n                * @param {object} menuData - Menu Data.\r\n                */\r\n                initialize: function(menuData) {\r\n                    assert.isNotNull(menuData, 'menuData');\r\n\r\n                    this.$scope.date = menuData.date;\r\n                    this.$scope.menuCourses = menuData.menuCourses;\r\n                    this.$scope.availableCourses = menuData.availableCourses;\r\n\r\n                    this.$scope.addCourseToMenu = _.bind(this.addCourseToMenu, this);\r\n                },\r\n\r\n                /** \r\n                * Add course to menu.\r\n                * @param {object} course - Course.\r\n                */\r\n                addCourseToMenu: function (course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    var onCourseAddedToMenu = function (addedCourse) {\r\n                        var menuCourse = _.find(this.$scope.menuCourses, function(existingCourse) {\r\n                            return existingCourse.id === addedCourse.id;\r\n                        });\r\n\r\n                        if (!!menuCourse) {\r\n                            var menuCourseIndex = _.indexOf(this.$scope.menuCourses, menuCourse);\r\n                            this.$scope.menuCourses[menuCourseIndex] = addedCourse;\r\n                        } else {\r\n                            this.$scope.menuCourses.push(addedCourse);\r\n                        }\r\n                    };\r\n\r\n                    var onSaveChanges = _.bind(function (maxOrders) {\r\n                        var promise = this.adminMenuApiService.addCourseToMenu(course, maxOrders, this.$scope.date);\r\n                        promise.then(_.bind(onCourseAddedToMenu, this));\r\n\r\n                        return promise;\r\n                    }, this);\r\n\r\n                    var dialogOptions = _.extend({}, this.config.dialogOptions, {\r\n                        templateUrl: '/template/admin/menu/add-course-to-menu.tmpl',\r\n                        controller: 'adminMenuCourseChangeMaxOrdersController',\r\n                        resolve: {\r\n                            course: function () {\r\n                                return course;\r\n                            },\r\n                            onSaveChanges: function () {\r\n                                return onSaveChanges;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    this.$modal.open(dialogOptions);\r\n                }\r\n            })\r\n    ];\r\n\r\n    return adminManageMenuController;\r\n});","\n/**\r\n * adminAddCourseToMenuController.\r\n * @file adminAddCourseToMenuController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/controllers/adminAddCourseToMenuController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils'], function(_, angular, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var adminAddCourseToMenuController = [\r\n        '$scope', '$modalInstance', 'adminMenuApiService', 'course', 'date',\r\n        Class.create(\r\n            /**\r\n            * Admin edit course max orders controller.\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} $modalInstance - Current modal dialog instance.\r\n            * @param {object} adminMenuApiService - Admin menu API service.\r\n            * @param {object} course - Course.\r\n            * @param {date} date - Date.\r\n            * @constructor\r\n            */\r\n            function($scope, $modalInstance, adminMenuApiService, course, date) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.$modalInstance = $modalInstance;\r\n                this.adminMenuApiService = adminMenuApiService;\r\n\r\n                this.initialize(course, date);\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    course: null,\r\n                    state: {\r\n                        isSavingChanges: null\r\n                    }\r\n                },\r\n\r\n                /** Current modal dialog instance */\r\n                $modalInstance: null,\r\n\r\n                /** Admin menu API service. */\r\n                adminMenuApiService: null,\r\n\r\n                /** Course */\r\n                course: null,\r\n\r\n                /** Date. */\r\n                date: null,\r\n\r\n                /** \r\n                * Initialize controller. \r\n                * @param {object} course - Course.\r\n                * @param {date} date - Date.\r\n                */\r\n                initialize: function(course, date) {\r\n                    assert.isNotNull(course, 'course');\r\n                    assert.isNotNull(date, 'date');\r\n\r\n                    this.course = course;\r\n                    this.date = date;\r\n\r\n                    this.$scope.course = angular.copy(course);\r\n                    this.$scope.state = {\r\n                        isSavingChanges: null\r\n                    };\r\n\r\n                    this.$scope.addCourseToMenu = _.bind(this.addCourseToMenu, this);\r\n                    this.$scope.closeDialog = _.bind(this.closeDialog, this);\r\n                },\r\n\r\n                /** Add course to menu. */\r\n                addCourseToMenu: function () {\r\n                    assert.isNumber(this.$scope.course.maxOrders, 'maxOrders');\r\n                    assert.isTrue(this.$scope.course.maxOrders > 0, 'maxOrders');\r\n\r\n                    var maxOrders = this.$scope.course.maxOrders;\r\n\r\n                    this.$scope.state.isSavingChanges = true;\r\n\r\n                    this.adminMenuApiService.addCourseToMenu(this.course, maxOrders, this.date)\r\n                        .then(_.bind(function(addedCourse) {\r\n                            this.$modalInstance.close(addedCourse);\r\n                        }, this))\r\n                        .finally(_.bind(function() {\r\n                            this.$scope.state.isSavingChanges = false;\r\n                        }, this));\r\n                },\r\n\r\n                /** Discard changes and close dialog */\r\n                closeDialog: function() {\r\n                    this.$modalInstance.dismiss();\r\n                }\r\n            })\r\n    ];\r\n\r\n    return adminAddCourseToMenuController;\r\n});","\n/**\r\n * adminMenuController.\r\n * @file adminMenuController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/controllers/menu/adminMenuController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils'], function (_, angular, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var adminMenuController = [\r\n        '$scope', '$modal', 'config', 'menuService', 'adminMenuApiService',\r\n        Class.create(\r\n            /**\r\n            * Admin menu controller.\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} $modal - Modal service.\r\n            * @param {object} config - Application config.\r\n            * @param {object} menuService - Menu service.\r\n            * @param {object} adminMenuApiService - Admin Menu API service.\r\n            * @constructor\r\n            */\r\n            function ($scope, $modal, config, menuService, adminMenuApiService) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.$modal = $modal;\r\n                this.config = config;\r\n                this.menuService = menuService;\r\n                this.adminMenuApiService = adminMenuApiService;\r\n\r\n                this.initialize();\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    course: null,\r\n                    date: null,\r\n                    categoriesMenu: null\r\n                },\r\n\r\n                /** Modal service. */\r\n                $modal: null,\r\n\r\n                /** Application config. */\r\n                config: null,\r\n\r\n                /** Menu service. */\r\n                menuService: null,\r\n\r\n                /** Admin Menu API service. */\r\n                adminMenuApiService: null,\r\n\r\n                /** \r\n                * Initialize controller. \r\n                */\r\n                initialize: function () {\r\n                    this.$scope.removeCourse = _.bind(this.removeCourse, this);\r\n                    this.$scope.changeCourseMaxOrders = _.bind(this.changeCourseMaxOrders, this);\r\n\r\n                    this.$scope.$watchCollection('courses', _.bind(this._onCoursesUpdated, this));\r\n                },\r\n                \r\n                /** \r\n                * Remove course from menu.\r\n                * @param {object} course - Course.\r\n                */\r\n                removeCourse: function(course) {\r\n                    assert.isNotNull(course, 'course');\r\n                    \r\n                    var onRemoveCourse = function () {\r\n                        return this.adminMenuApiService.removeCourseFromMenu(course, this.$scope.date);\r\n                    };\r\n\r\n                    var onCourseRemoved = function () {\r\n                        utils.array.without(this.$scope.courses, course);\r\n\r\n                        return course;\r\n                    };\r\n\r\n                    return this._confirmRemoveCourse(course)\r\n                        .then(_.bind(onRemoveCourse, this))\r\n                        .then(_.bind(onCourseRemoved, this));\r\n                },\r\n\r\n                /** \r\n                * Change course max orders count.\r\n                * @param {object} course - Course.\r\n                */\r\n                changeCourseMaxOrders: function (course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    var onSaveChanges = _.bind(function(maxOrders) {\r\n                        return this.adminMenuApiService.changeCourseMaxOrders(course, maxOrders, this.$scope.date);\r\n                    }, this);\r\n\r\n                    var dialogOptions = _.extend({}, this.config.dialogOptions, {\r\n                        templateUrl: '/template/admin/menu/menu/course/change-max-orders.tmpl',\r\n                        controller: 'adminMenuCourseChangeMaxOrdersController',\r\n                        resolve: {\r\n                            course: function () {\r\n                                return course;\r\n                            },\r\n                            onSaveChanges: function() {\r\n                                return onSaveChanges;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    this.$modal.open(dialogOptions);\r\n                },\r\n\r\n                /** \r\n                * Handler for courses update event.\r\n                * @param {array} courses - Courses.\r\n                */\r\n                _onCoursesUpdated: function (courses) {\r\n                    assert.isNotNull(courses, 'courses');\r\n\r\n                    this.$scope.categoriesMenu = this.menuService.groupCoursesByCategories(courses);\r\n                },\r\n\r\n                /** \r\n                * Confirm remove course from menu.\r\n                * @param {object} course - Course.\r\n                */\r\n                _confirmRemoveCourse: function(course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    var dialogOptions = _.extend({}, this.config.dialogOptions, {\r\n                        templateUrl: '/template/admin/menu/menu/course/confirm-remove.tmpl',\r\n                        resolve: {\r\n                            data: function () {\r\n                                return {\r\n                                    course: course\r\n                                };\r\n                            }\r\n                        },\r\n                        controller: 'confirmController'\r\n                    });\r\n\r\n                    var modalInstance = this.$modal.open(dialogOptions);\r\n\r\n                    return modalInstance.result;\r\n                }              \r\n            })\r\n    ];\r\n\r\n    return adminMenuController;\r\n});","\n/**\r\n * adminMenuCourseController.\r\n * @file adminMenuCourseController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/controllers/menu/adminMenuCourseController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils'], function(_, angular, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var adminMenuCourseController = [\r\n        '$scope', 'admin.config',\r\n        Class.create(\r\n            /**\r\n            * Admin menu course controller\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} adminConfig - Administrator configuration.\r\n            * @constructor\r\n            */\r\n            function ($scope, adminConfig) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.adminConfig = adminConfig;\r\n\r\n                this.initialize();\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    course: null,\r\n                    date: null,\r\n                    courseImage: {\r\n                        url: null,\r\n                        thumbnailUrl: null\r\n                    },\r\n                    state: {\r\n                        isRemoving: false\r\n                    }\r\n                },\r\n\r\n                /** Administrator configuration. */\r\n                adminConfig: null,\r\n                \r\n                                \r\n                /** \r\n                * Initialize controller. \r\n                */\r\n                initialize: function () {\r\n                    this.$scope.courseImage.url = this.adminConfig.urls.api.menu.coursePicture.format(this.$scope.course.id);\r\n                    this.$scope.courseImage.thumbnailUrl = this.adminConfig.urls.api.menu.courseThumbnail.format(this.$scope.course.id);\r\n\r\n                    this.$scope.removeCourse = _.bind(this.removeCourse, this);\r\n                    this.$scope.changeMaxOrders = _.bind(this.changeMaxOrders, this);\r\n                },\r\n\r\n                /** \r\n                * Remove course from menu.\r\n                * @param {object} course - Course.\r\n                */\r\n                removeCourse: function(course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    this.$scope.state.isRemoving = true;\r\n\r\n                    this.$scope.onRemoveCourse({ course: course })\r\n                        .finally(_.bind(function() {\r\n                            this.$scope.state.isRemoving = false;\r\n                        }, this));\r\n                },\r\n\r\n                /** \r\n                * Change course max orders count.\r\n                * @param {object} course - Course.\r\n                */\r\n                changeMaxOrders: function(course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    this.$scope.onChangeCourseMaxOrders({ course: course });\r\n                }\r\n            })\r\n    ];\r\n\r\n    return adminMenuCourseController;\r\n});","\n/**\r\n * adminMenuCourseChangeMaxOrdersController.\r\n * @file adminMenuCourseChangeMaxOrdersController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/controllers/menu/adminMenuCourseChangeMaxOrdersController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils'], function(_, angular, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var adminMenuCourseChangeMaxOrdersController = [\r\n        '$scope', '$modalInstance', 'course', 'onSaveChanges',\r\n        Class.create(\r\n            /**\r\n            * Admin change course max orders controller.\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} $modalInstance - Current modal dialog instance.\r\n            * @param {object} course - Course.\r\n            * @param {function} onSaveChanges - On save changes callback.\r\n            * @constructor\r\n            */\r\n            function ($scope, $modalInstance, course, onSaveChanges) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.$modalInstance = $modalInstance;\r\n\r\n                this.initialize(course, onSaveChanges);\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    course: null,\r\n                    state: {\r\n                        isSavingChanges: null\r\n                    }\r\n                },\r\n\r\n                /** Current modal dialog instance */\r\n                $modalInstance: null,\r\n\r\n                /** Course */\r\n                course: null,\r\n\r\n                /**  On save changes callback. */\r\n                onSaveChanges: null,\r\n                \r\n\r\n                /** \r\n                * Initialize controller. \r\n                * @param {object} course - Course.\r\n                * @param {function} onSaveChanges - On save changes callback.\r\n                */\r\n                initialize: function (course, onSaveChanges) {\r\n                    assert.isNotNull(course, 'course');\r\n                    assert.isNotNull(onSaveChanges, 'onSaveChanges');\r\n\r\n                    this.course = course;\r\n                    this.onSaveChanges = onSaveChanges;\r\n\r\n                    this.$scope.course = angular.copy(course);\r\n                    this.$scope.state = {\r\n                        isSavingChanges: null\r\n                    };\r\n\r\n                    this.$scope.saveChanges = _.bind(this.saveChanges, this);\r\n                    this.$scope.closeDialog = _.bind(this.closeDialog, this);\r\n                },\r\n\r\n                /** Save changes. */\r\n                saveChanges: function() {\r\n                    assert.isNumber(this.$scope.course.maxOrders, 'maxOrders');\r\n                    assert.isTrue(this.$scope.course.maxOrders > 0, 'maxOrders');\r\n\r\n                    var maxOrders = this.$scope.course.maxOrders;\r\n\r\n                    this.$scope.state.isSavingChanges = true;\r\n\r\n                    this.onSaveChanges(maxOrders)\r\n                        .then(_.bind(function() {\r\n                            this.$modalInstance.close();\r\n                        }, this))\r\n                        .finally(_.bind(function() {\r\n                            this.$scope.state.isSavingChanges = false;\r\n                        }, this));\r\n                },\r\n\r\n                /** Discard changes and close dialog */\r\n                closeDialog: function() {\r\n                    this.$modalInstance.dismiss();\r\n                }\r\n            })\r\n    ];\r\n\r\n    return adminMenuCourseChangeMaxOrdersController;\r\n});","\n/**\r\n * adminCoursesController.\r\n * @file adminCoursesController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/controllers/courses/adminCoursesController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils', 'common/models/course'], function (_, angular, Class, assert, utils, Course) {\r\n    'use strict';\r\n\r\n    var adminCoursesController = [\r\n        '$scope', '$modal', 'menuService', 'adminMenuApiService', 'config',\r\n        Class.create(\r\n            /**\r\n            * AdminCoursesController\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} $modal - Modal dialog service.\r\n            * @param {object} menuService - Menu service.\r\n            * @param {object} adminMenuApiService - Admin menu API service.\r\n            * @param {object} config - Application configuration.\r\n            * @constructor\r\n            */\r\n            function($scope, $modal, menuService, adminMenuApiService, config) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.$modal = $modal;\r\n                this.menuService = menuService;\r\n                this.adminMenuApiService = adminMenuApiService;\r\n                this.config = config;\r\n\r\n                this.initialize();\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    courses: null,\r\n                    categoriesCourses: null\r\n                },\r\n\r\n                /** Modal dialog service */\r\n                $modal: null,\r\n\r\n                /** Menu service. */\r\n                menuService: null,\r\n\r\n                /** Admin menu API service. */\r\n                adminMenuApiService: null,\r\n\r\n                /** Application configuration. */\r\n                config: null,\r\n\r\n                /** \r\n                * Initialize controller. \r\n                */\r\n                initialize: function() {\r\n                    this.$scope.$watchCollection('courses', _.bind(this._onCoursesUpdated, this));\r\n\r\n                    this.$scope.addCourseToMenu = _.bind(this.addCourseToMenu, this);\r\n                    this.$scope.createCourse = _.bind(this.createCourse, this);\r\n                    this.$scope.editCourse = _.bind(this.editCourse, this);\r\n                    this.$scope.removeCourse = _.bind(this.removeCourse, this);\r\n                },\r\n\r\n                /** \r\n                * Add course to menu.\r\n                * @param {object} course - Course.\r\n                */\r\n                addCourseToMenu: function(course) {\r\n                    assert.isNotNull(course, 'course');\r\n                    this.$scope.onAddCourseToMenu({ course: course });\r\n                },\r\n\r\n\r\n                /** \r\n                 * Create course.\r\n                 * @param {object} category - Course category.\r\n                 */\r\n                createCourse: function(category) {\r\n                    assert.isNotNull(category, 'category');\r\n\r\n                    var onCourseCreated = function(course) {\r\n                        assert.isNotNull(course, 'course');\r\n\r\n                        this.$scope.courses.push(course);\r\n                    };\r\n\r\n                    var onSaveChange = _.bind(function(course, imageId) {\r\n                        assert.isNotNull(course, 'course');\r\n\r\n                        var promise = this.adminMenuApiService.createCourse(course, imageId);\r\n\r\n                        promise.then(_.bind(onCourseCreated, this));\r\n\r\n                        return promise;\r\n                    }, this);\r\n\r\n                    var dialogOptions = _.extend({}, this.config.dialogOptions, {\r\n                        templateUrl: '/template/admin/menu/courses/course/create.tmpl',\r\n                        controller: 'adminCourseEditController',\r\n                        windowClass: 'modal-wide',\r\n                        resolve: {\r\n                            course: function() {\r\n                                return new Course(0, '', 0, category, 0, 0, 0);\r\n                            },\r\n                            onSaveChange: function() {\r\n                                return onSaveChange;\r\n                            },\r\n                            dialogOptions: function () {\r\n                                return {\r\n                                    title: 'Создание нового блюда'\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    this.$modal.open(dialogOptions);\r\n                },\r\n\r\n\r\n                /** \r\n                 * Edit course.\r\n                 * @param {object} course - Course.\r\n                  */\r\n                editCourse: function(course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    var onCourseUpdated = function (updatedCourse) {\r\n                        assert.isNotNull(updatedCourse, 'updatedCourse');\r\n\r\n                        var courseIndex = _.indexOf(this.$scope.courses, course);\r\n                        this.$scope.courses[courseIndex] = updatedCourse;\r\n                    };\r\n\r\n                    var onSaveChange = _.bind(function (changedCourse, imageId) {\r\n                        assert.isNotNull(changedCourse, 'changedCourse');\r\n\r\n                        var promise = this.adminMenuApiService.updateCourse(changedCourse, imageId);\r\n\r\n                        promise.then(_.bind(onCourseUpdated, this));\r\n\r\n                        return promise;\r\n                    }, this);\r\n\r\n                    var dialogOptions = _.extend({}, this.config.dialogOptions, {\r\n                        templateUrl: '/template/admin/menu/courses/course/edit.tmpl',\r\n                        controller: 'adminCourseEditController',\r\n                        windowClass: 'modal-wide',\r\n                        resolve: {\r\n                            course: function () {\r\n                                return angular.copy(course);\r\n                            },\r\n                            onSaveChange: function () {\r\n                                return onSaveChange;\r\n                            },\r\n                            dialogOptions: function() {\r\n                                return {\r\n                                    title: 'Редактирование блюда'\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    this.$modal.open(dialogOptions);\r\n                },\r\n\r\n\r\n                /** \r\n                 * Remove course.\r\n                 * @param {object} course - Course.\r\n                  */\r\n                removeCourse: function(course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    var onCourseRemoved = function() {\r\n                        utils.array.without(this.$scope.courses, course);\r\n                    };\r\n\r\n                    var promise = this.adminMenuApiService.removeCourse(course);\r\n\r\n                    promise.then(_.bind(onCourseRemoved, this));\r\n\r\n                    return promise;\r\n                },\r\n\r\n\r\n                /** \r\n                * Handler for courses update event.\r\n                * @param {array} courses - Courses.\r\n                */\r\n                _onCoursesUpdated: function(courses) {\r\n                    if (courses) {\r\n                        if (this.$scope.categoriesCourses) {\r\n                            this.menuService.updateCategoriesMenus(this.$scope.categoriesCourses, courses);\r\n                        } else {\r\n                            this.$scope.categoriesCourses = this.menuService.groupCoursesByCategories(courses);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n    ];\r\n\r\n    return adminCoursesController;\r\n});","\n/**\r\n * adminCoursesCategoryController.\r\n * @file adminCoursesCategoryController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/controllers/courses/adminCoursesCategoryController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils'], function (_, angular, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var adminCoursesCategoryController = [\r\n        '$scope', 'config',\r\n        Class.create(\r\n            /**\r\n            * Admin Category Courses Controller\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} config - Application configuration.\r\n            * @constructor\r\n            */\r\n            function ($scope, config) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.config = config;\r\n\r\n                this.initialize();\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    category: null,\r\n                    courses: null\r\n                },\r\n\r\n                /** Application configuration. */\r\n                config: null,\r\n\r\n                /** \r\n                * Initialize controller. \r\n                */\r\n                initialize: function() {\r\n                    this.$scope.addCourseToMenu = _.bind(this.addCourseToMenu, this);\r\n                    this.$scope.editCourse = _.bind(this.editCourse, this);\r\n                    this.$scope.removeCourse = _.bind(this.removeCourse, this);\r\n                    this.$scope.createCourse = _.bind(this.createCourse, this);\r\n                },\r\n\r\n                /** \r\n                * Add course to menu.\r\n                * @param {object} course - Course.\r\n                */\r\n                addCourseToMenu: function (course) {\r\n                    assert.isNotNull(course, 'course');\r\n                    this.$scope.onAddCourseToMenu({ course: course });\r\n                },\r\n\r\n                /** \r\n                 * Edit course.\r\n                 * @param {object} course - Course.\r\n                  */\r\n                editCourse: function (course) {\r\n                    this.$scope.onEditCourse({ course: course });\r\n                },\r\n\r\n                /** Add new course. */\r\n                createCourse: function() {\r\n                    var category = this.$scope.category;\r\n                    \r\n                    this.$scope.onCreateCourse({ category: category });\r\n                },\r\n\r\n                /** \r\n                * Remove course.\r\n                * @param {object} course - Course.\r\n                */\r\n                removeCourse: function(course) {\r\n                    return this.$scope.onRemoveCourse({ course: course });\r\n                }\r\n            })\r\n    ];\r\n\r\n    return adminCoursesCategoryController;\r\n});","\n/**\r\n * adminCourseController.\r\n * @file adminCourseController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/controllers/courses/adminCourseController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils'], function (_, angular, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var adminCourseController = [\r\n        '$scope', '$modal', '$templateCache', '$q', 'config',\r\n        Class.create(\r\n            /**\r\n            * AdminCourseController\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} $modal - Modal dialog service.\r\n            * @param {object} $templateCache - Template cache service.\r\n            * @param {object} $q - Promise service.\r\n            * @param {object} config - Application configuration.\r\n            * @constructor\r\n            */\r\n            function($scope, $modal, $templateCache, $q, config) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.$modal = $modal;\r\n                this.$templateCache = $templateCache;\r\n                this.$q = $q;\r\n                this.config = config;\r\n\r\n                this.initialize();\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    course: null,\r\n                    state: {\r\n                        isRemoving: false\r\n                    }\r\n                },\r\n\r\n                /** Modal dialog service */\r\n                $modal: null,\r\n\r\n                /** Template cache service */\r\n                $templateCache: null,\r\n\r\n                /** Promise service */\r\n                $q: null,\r\n\r\n                /** Application configuration */\r\n                config: null,\r\n\r\n                /** \r\n                * Initialize controller. \r\n                */\r\n                initialize: function () {\r\n                    this.$scope.addCourseToMenu = _.bind(this.addCourseToMenu, this);\r\n                    this.$scope.editCourse = _.bind(this.editCourse, this);\r\n                    this.$scope.removeCourse = _.bind(this.removeCourse, this);\r\n                },\r\n\r\n                /** \r\n                * Add course to menu.\r\n                * @param {object} course - Course.\r\n                */\r\n                addCourseToMenu: function (course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    this.$scope.onAddCourseToMenu({ course: course });\r\n                },\r\n                \r\n                /** \r\n                * Remove course.\r\n                * @param {object} course - Course.\r\n                */\r\n                removeCourse: function (course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    var onRemoveConfirmed = function () {\r\n                        this.$scope.state.isRemoving = true;\r\n                        var promise = this.$scope.onRemoveCourse({ course: course });\r\n\r\n                        promise.finally(_.bind(function() {\r\n                            this.$scope.state.isRemoving = false;\r\n                        }, this));\r\n                    };\r\n\r\n                    var dialogOptions = _.extend({}, this.config.dialogOptions, {\r\n                        templateUrl: '/template/admin/menu/courses/course/confirm-remove.tmpl',\r\n                        resolve: {\r\n                            data: function () {\r\n                                return {\r\n                                    course: course\r\n                                };\r\n                            }\r\n                        },\r\n                        controller: 'confirmController'\r\n                    });\r\n\r\n                    var modalInstance = this.$modal.open(dialogOptions);\r\n\r\n                    modalInstance.result.then(_.bind(onRemoveConfirmed, this));\r\n                },\r\n\r\n                /** \r\n                * Edit course.\r\n                * @param {object} course - Course.\r\n                */\r\n                editCourse: function (course) {\r\n                    assert.isNotNull(course, 'course');\r\n\r\n                    this.$scope.onEditCourse({ course: course });\r\n                }\r\n            })\r\n    ];\r\n\r\n    return adminCourseController;\r\n});","\n/**\r\n * adminEditCourseController.\r\n * @file adminEditCourseController.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/controllers/courses/adminCourseEditController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils'], function(_, angular, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var adminEditCourseController = [\r\n        '$scope', '$modalInstance', 'admin.config', 'adminMenuApiService', 'course', 'onSaveChange', 'dialogOptions',\r\n        Class.create(\r\n            /**\r\n            * AdminEditCourseController\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} $modalInstance - Current modal dialog instance.\r\n            * @param {object} adminConfig - Administrator configuration.\r\n            * @param {object} adminMenuApiService - Menu API service.\r\n            * @param {object} course - Course.\r\n            * @param {function} onSaveChange - Save changes callback.\r\n            * @param {object} dialogOptions - Dialog options.\r\n            * @constructor\r\n            */\r\n            function ($scope, $modalInstance, adminConfig, adminMenuApiService, course, onSaveChange, dialogOptions) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.$modalInstance = $modalInstance;\r\n                this.adminConfig = adminConfig;\r\n                this.adminMenuApiService = adminMenuApiService;\r\n\r\n                this.initialize(course, onSaveChange, dialogOptions);\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    course: null,\r\n                    courseImage: {\r\n                        url: null,\r\n                        tempId: null\r\n                    },\r\n                    uploadImageUrl: null,\r\n                    dialog: {\r\n                        title: ''\r\n                    },\r\n                    state: {\r\n                        isSavingChanges: false,\r\n                        isUpdatingImage: false\r\n                    }\r\n                },\r\n\r\n                /** Administrator configuration. */\r\n                adminConfig: null,\r\n                \r\n                /** Menu API Service. */\r\n                adminMenuApiService: null,\r\n\r\n                /** \r\n                * Initialize controller. \r\n                * @param {object} course - Course.\r\n                * @param {function} onSaveChanges - Save changes callback.\r\n                * @param {object} dialogOptions - Dialog options.\r\n                */\r\n                initialize: function (course, onSaveChanges, dialogOptions) {\r\n                    assert.isNotNull(course, 'course');\r\n                    assert.isFunction(onSaveChanges, 'onSaveChanges');\r\n                    \r\n                    _.extend(this.$scope.dialog, dialogOptions);\r\n\r\n                    this._onSaveChange = onSaveChanges;\r\n\r\n                    this.$scope.course = course;\r\n                    this.$scope.uploadImageUrl = this.adminConfig.urls.api.menu.uploadCoursePicture.format(course.id);\r\n\r\n                    this.$scope.saveChanges = _.bind(this.saveChanges, this);\r\n                    this.$scope.closeDialog = _.bind(this.closeDialog, this);\r\n\r\n                    this.$scope.imageUploading = _.bind(this.imageUploading, this);\r\n                    this.$scope.imageUploaded = _.bind(this.imageUploaded, this);\r\n                    this.$scope.imageUploadFailed = _.bind(this.imageUploadFailed, this);\r\n\r\n                    this.$scope.$watch('courseImage.tempId', _.bind(this._onCourseImageChanged, this));\r\n                },\r\n\r\n\r\n                /** Save changes and close dialog. */\r\n                saveChanges: function () {\r\n                    this.$scope.state.isSavingChanges = true;\r\n\r\n                    var course = this.$scope.course;\r\n                    var imageId = this.$scope.courseImage.tempId;\r\n\r\n                    var promise = this._onSaveChange(course, imageId);\r\n\r\n                    promise.then(_.bind(function () {\r\n                        this.$modalInstance.close();\r\n                    }, this));\r\n\r\n                    promise.finally(_.bind(function () {\r\n                        this.$scope.state.isSavingChanges = false;\r\n                    }, this));\r\n                },\r\n\r\n\r\n                /** \r\n                 * Save changes callback.\r\n                 * @param {object} course - Course.\r\n                 * @param {string} imageId - Course image ID.\r\n                 * @returns {object} promise.\r\n                 */\r\n                _onSaveChange: null,\r\n\r\n\r\n                /** \r\n                 * On course image changed.\r\n                 * @param {string} tempImageId - Temp image ID.\r\n                 */\r\n                _onCourseImageChanged: function (tempImageId) {\r\n                    var imageUrl;\r\n\r\n                    if (tempImageId) {\r\n                        imageUrl = this.adminConfig.urls.api.menu.tempCoursePicture.format(tempImageId);\r\n                    } else {\r\n                        imageUrl = this.adminConfig.urls.api.menu.coursePicture.format(this.$scope.course.id);\r\n                    } \r\n\r\n                    this.$scope.courseImage.url = imageUrl;\r\n                },\r\n                    \r\n\r\n                /** \r\n                 * Image uploading started.\r\n                 * @param {array} files - Files.\r\n                 */\r\n                imageUploading: function (files) {\r\n                    this.$scope.state.isUpdatingImage = true;\r\n                },          \r\n                \r\n\r\n                /** Image uploading failed. */\r\n                imageUploadFailed: function () {\r\n                    this.$scope.state.isUpdatingImage = false;\r\n                },    \r\n                \r\n\r\n                /** \r\n                 * Image uploaded.\r\n                 * @param {array} files - Files.\r\n                 * @param {object} response - Response.\r\n                 */\r\n                imageUploaded: function (files, response) {\r\n                    this.$scope.state.isUpdatingImage = false;\r\n\r\n                    var uploadedImages = JSON.parse(response.response);\r\n                    if (uploadedImages && uploadedImages.length > 0) {\r\n                        this.$scope.courseImage.tempId = uploadedImages[0];\r\n                    }\r\n                },\r\n\r\n\r\n                /** Discard changes and close dialog */\r\n                closeDialog: function () {\r\n                    this.$modalInstance.dismiss();\r\n                }\r\n            })\r\n    ];\r\n\r\n    return adminEditCourseController;\r\n});","\n/**\r\n * controllers.\r\n * @file controllers.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine(\r\n    'admin/menu/controllers/controllers',[\r\n        'angular',\r\n        'admin/menu/controllers/adminManageMenuController',\r\n        'admin/menu/controllers/adminAddCourseToMenuController',\r\n        'admin/menu/controllers/menu/adminMenuController',\r\n        'admin/menu/controllers/menu/adminMenuCourseController',\r\n        'admin/menu/controllers/menu/adminMenuCourseChangeMaxOrdersController',\r\n        'admin/menu/controllers/courses/adminCoursesController',\r\n        'admin/menu/controllers/courses/adminCoursesCategoryController',\r\n        'admin/menu/controllers/courses/adminCourseController',\r\n        'admin/menu/controllers/courses/adminCourseEditController'\r\n    ],\r\n    function(angular,\r\n        adminManageMenuController, adminAddCourseToMenuController,\r\n        adminMenuController, adminMenuCourseController, adminMenuCourseChangeMaxOrdersController,\r\n        adminCoursesController, adminCoursesCategoryController, adminCourseController, adminCourseEditController) {\r\n        'use strict';\r\n\r\n        var dependencies = [];\r\n        var controllers = angular.module('lunchtime.admin.menu.controllers', dependencies);\r\n\r\n        // Manage\r\n        controllers.controller('adminManageMenuController', adminManageMenuController);\r\n        controllers.controller('adminAddCourseToMenuController', adminAddCourseToMenuController);\r\n\r\n        // Menu\r\n        controllers.controller('adminMenuController', adminMenuController);\r\n        controllers.controller('adminMenuCourseController', adminMenuCourseController);\r\n        controllers.controller('adminMenuCourseChangeMaxOrdersController', adminMenuCourseChangeMaxOrdersController);\r\n\r\n        // Courses\r\n        controllers.controller('adminCoursesController', adminCoursesController);\r\n        controllers.controller('adminCoursesCategoryController', adminCoursesCategoryController);\r\n        controllers.controller('adminCourseController', adminCourseController);\r\n        controllers.controller('adminCourseEditController', adminCourseEditController);\r\n\r\n        return controllers;\r\n    });","\n/**\r\n * adminMenuApiService.\r\n * @file adminMenuApiService.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine(\r\n    'admin/menu/services/adminMenuApiService',[\r\n        'underscore', 'angular', 'moment', 'framework/assert', 'framework/utils'\r\n    ],\r\n    function(_, angular, moment, assert, utils) {\r\n        'use strict';\r\n\r\n        var adminMenuApiService = [\r\n            '$http', '$q', 'admin.config', 'adminMenuApiMappingService', 'commonApiMappingService',\r\n            function ($http, $q, adminConfig, adminMenuApiMappingService, commonApiMappingService) {\r\n                var api = adminConfig.urls.api.menu;\r\n\r\n                return {\r\n                    /** \r\n                    * Get list of menu courses and available courses for specified date.\r\n                    * @param {date} date - courses and orders date.\r\n                    * @returns {object} promise for menu courses and available courses.\r\n                    */\r\n                    getMenuAndCourses: function(date) {\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var options = {\r\n                            params: {\r\n                                date: moment(date).format('YYYY-MM-DD')\r\n                            }\r\n                        };\r\n\r\n                        $http.get(api.getMenuAndCourses, options)\r\n                            .success(function(reponse) {\r\n                                assert.isNotNull(reponse, 'reponse');\r\n\r\n                                var menuData = adminMenuApiMappingService.mapResponseToMenuData(reponse);\r\n                                deferred.resolve(menuData);\r\n\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },\r\n\r\n\r\n                    /** \r\n                    * Create new course.\r\n                    * @param {object} course - Course to create.\r\n                    * @param {string} imageId - Course image ID.\r\n                    */\r\n                    createCourse: function(course, imageId) {\r\n                        assert.isNotNull(course, 'course');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var data = {\r\n                            CompanyId: null,\r\n                            Name: course.name,\r\n                            Category: course.category.name,\r\n                            Price: course.price,\r\n                            Description: course.description,\r\n                            Weight: course.weight,\r\n                            ImageId: imageId || ''\r\n                        };\r\n\r\n                        $http.post(api.createCourse, data)\r\n                            .success(function(reponse) {\r\n                                assert.isNotNull(reponse, 'reponse');\r\n\r\n                                var createdCourse = commonApiMappingService.mapResponseToCourse(reponse);\r\n                                deferred.resolve(createdCourse);\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },      \r\n                    \r\n\r\n                    /** \r\n                    * Remove course.\r\n                    * @param {object} course - Course to remove.\r\n                    */\r\n                    removeCourse: function (course) {\r\n                        assert.isNotNull(course, 'course');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var data = {\r\n                            CourseId: course.id\r\n                        };\r\n\r\n                        $http.post(api.removeCourse, data)\r\n                            .success(function() {\r\n                                deferred.resolve(course);\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },\r\n                    \r\n\r\n                    /** \r\n                    * Update course.\r\n                    * @param {object} course - Course to update.\r\n                    * @param {string} imageId - Course image ID.\r\n                    */\r\n                    updateCourse: function(course, imageId) {\r\n                        assert.isNotNull(course, 'course');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var data = {\r\n                            Id: course.id,\r\n                            CompanyId: null,\r\n                            Name: course.name,\r\n                            Category: course.category.name,\r\n                            Price: course.price,\r\n                            Description: course.description,\r\n                            Weight: course.weight,\r\n                            ImageId: imageId || ''\r\n                        };\r\n\r\n                        $http.post(api.updateCourse, data)\r\n                            .success(function(reponse) {\r\n                                assert.isNotNull(reponse, 'reponse');\r\n\r\n                                var updatedCourse = commonApiMappingService.mapResponseToCourse(reponse);\r\n                                deferred.resolve(updatedCourse);\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },\r\n\r\n\r\n                    /** \r\n                    * Remove Course from menu.\r\n                    * @param {object} course - Course to remove.\r\n                    * @param {date} date - Menu date.\r\n                    */\r\n                    removeCourseFromMenu: function(course, date) {\r\n                        assert.isNotNull(course, 'course');\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var data = {\r\n                            CourseId: course.id,\r\n                            Date: moment(date).format('YYYY-MM-DD')\r\n                        };\r\n\r\n                        $http.post(api.removeCourseFromMenu, data)\r\n                            .success(function () {\r\n                                deferred.resolve(course);\r\n                            }).error(function (response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },\r\n\r\n\r\n                    /** \r\n                    * Change course max orders.\r\n                    * @param {object} course - Course to update.\r\n                    * @param {number} maxOrders - Max orders value.\r\n                    * @param {date} date - Menu date.\r\n                    */\r\n                    changeCourseMaxOrders: function(course, maxOrders, date) {\r\n                        assert.isNotNull(course, 'course');\r\n                        assert.isNotNull(maxOrders, 'maxOrders');\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var data = {\r\n                            CourseId: course.id,\r\n                            MaxOrders: maxOrders,\r\n                            Date: moment(date).format('YYYY-MM-DD')\r\n                        };\r\n\r\n                        $http.post(api.changeCourseMaxOrders, data)\r\n                            .success(function() {\r\n                                course.maxOrders = maxOrders;\r\n                                deferred.resolve(course);\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },             \r\n                    \r\n                    /** \r\n                    * Add course to menu.\r\n                    * @param {object} course - Course to update.\r\n                    * @param {number} maxOrders - Max orders value.\r\n                    * @param {date} date - Menu date.\r\n                    */\r\n                    addCourseToMenu: function (course, maxOrders, date) {\r\n                        assert.isNotNull(course, 'course');\r\n                        assert.isNotNull(maxOrders, 'maxOrders');\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var data = {\r\n                            CourseId: course.id,\r\n                            MaxOrders: maxOrders,\r\n                            Date: moment(date).format('YYYY-MM-DD')\r\n                        };\r\n\r\n                        $http.post(api.addCourseToMenu, data)\r\n                            .success(function(id) {\r\n                                var addedCourse = angular.copy(course);\r\n                                //addedCourse.id = id;\r\n                                addedCourse.maxOrders = maxOrders;\r\n\r\n                                deferred.resolve(addedCourse);\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    }\r\n                };\r\n            }\r\n        ];\r\n\r\n        return adminMenuApiService;\r\n    });","\n/**\r\n * Menu Data.\r\n * @file menuData.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/models/menuData',['framework/assert'], function (assert) {\r\n    'use strict';\r\n\r\n    /** \r\n    * Menu Data.\r\n    * @param {date} date - Menu date.\r\n    * @param {array} menuCourses - Menu courses.\r\n    * @param {array} availableCourses - Available courses.\r\n    */\r\n    var MenuData = function (date, menuCourses, availableCourses) {\r\n        assert.isNotNull(date, 'date');\r\n        assert.isArray(menuCourses, 'menuCourses');\r\n        assert.isArray(availableCourses, 'availableCourses');\r\n\r\n        this.date = date;\r\n        this.menuCourses = menuCourses;\r\n        this.availableCourses = availableCourses;\r\n    };\r\n\r\n    return MenuData;\r\n});","\n/**\r\n * adminMenuApiMappingService.\r\n * @file adminMenuApiMappingService.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine(\r\n    'admin/menu/services/adminMenuApiMappingService',[\r\n        'underscore', 'moment', 'framework/assert', 'framework/utils',\r\n        'admin/menu/models/menuData'\r\n    ],\r\n    function(_, moment, assert, utils, MenuData) {\r\n        'use strict';\r\n\r\n        var adminMenuApiMappingService = [\r\n            'commonApiMappingService',\r\n            function(commonApiMappingService) {\r\n                return {\r\n\r\n                    /** \r\n                     * Map responce from getMenuAndCourses request to MenuData model.\r\n                     * @param {object} response - response.\r\n                     * @returns {object} MenuData.\r\n                     * @private\r\n                     */\r\n                    mapResponseToMenuData: function(response) {\r\n                        assert.isNotNull(response.Date, 'response.Date');\r\n                        assert.isArray(response.AvailableCourses, 'response.AvailableCourses');\r\n                        assert.isArray(response.MenuCourses, 'response.MenuCourses');\r\n\r\n                        var menuDate = moment(response.Date).toDate();\r\n\r\n                        var availableCourses = _.map(response.AvailableCourses, commonApiMappingService.mapResponseToCourse, this);\r\n\r\n                        var menuCourses = _.map(response.MenuCourses, commonApiMappingService.mapResponseToCourse, this);\r\n\r\n                        var menuData = new MenuData(menuDate, menuCourses, availableCourses);\r\n\r\n                        return menuData;\r\n                    }\r\n                };\r\n            }\r\n        ];\r\n\r\n        return adminMenuApiMappingService;\r\n    });","\n/**\r\n * services.\r\n * @file services.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine(\r\n    'admin/menu/services/services',[\r\n        'angular',\r\n        'admin/menu/services/adminMenuApiService',\r\n        'admin/menu/services/adminMenuApiMappingService'\r\n    ],\r\n    function(angular, adminMenuApiService, adminMenuApiMappingService) {\r\n        'use strict';\r\n\r\n        var dependencies = [];\r\n        var services = angular.module('lunchtime.admin.menu.services', dependencies);\r\n\r\n        services.service('adminMenuApiService', adminMenuApiService);\r\n        services.service('adminMenuApiMappingService', adminMenuApiMappingService);\r\n\r\n        return services;\r\n    });","\n/**\r\n * filters.\r\n * @file filters.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('admin/menu/filters/filters',['angular'], function (angular) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var filters = angular.module('lunchtime.admin.menu.filters', dependencies);\r\n    // filters.filter('filter', filter);\r\n\r\n    return filters;\r\n});","\n/**\r\n * Admin Menu.\r\n * @file adminMenu.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/directives/menu/adminMenu',[], function() {\r\n    'use strict';\r\n\r\n    var adminMenu = [\r\n        function() {\r\n\r\n            return {\r\n                restrict: 'AE',\r\n                templateUrl: '/template/admin/menu/menu.tmpl',\r\n                scope: {\r\n                    courses: '=',\r\n                    date: '='\r\n                },\r\n                controller: 'adminMenuController'\r\n            };\r\n        }\r\n    ];\r\n\r\n    return adminMenu;\r\n});","\n/**\r\n * adminMenuCourse.\r\n * @file adminMenuCourse.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/directives/menu/adminMenuCourse',[], function() {\r\n    'use strict';\r\n\r\n    var adminMenuCourse = [\r\n        function() {\r\n\r\n            return {\r\n                restrict: 'AE',\r\n                templateUrl: '/template/admin/menu/menu/course.tmpl',\r\n                scope: {\r\n                    course: '=',\r\n                    onRemoveCourse: '&',\r\n                    onChangeCourseMaxOrders: '&'\r\n                },\r\n                controller: 'adminMenuCourseController'\r\n            };\r\n        }\r\n    ];\r\n\r\n    return adminMenuCourse;\r\n});","\n/**\r\n * adminCourses.\r\n * @file adminCourses.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/directives/courses/adminCourses',[], function() {\r\n    'use strict';\r\n\r\n    var adminCourses = [\r\n        function() {\r\n            return {\r\n                restrict: 'AE',\r\n                templateUrl: '/template/admin/menu/courses.tmpl',\r\n                scope: {\r\n                    courses: '=',\r\n                    onAddCourseToMenu: '&'\r\n                },\r\n                controller: 'adminCoursesController'\r\n            };\r\n        }\r\n    ];\r\n\r\n    return adminCourses;\r\n});","\n/**\r\n * adminCoursesCategory.\r\n * @file adminCoursesCategory.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/directives/courses/adminCoursesCategory',[], function() {\r\n    'use strict';\r\n\r\n    var adminCoursesCategory = [\r\n        function() {\r\n            return {\r\n                restrict: 'AE',\r\n                templateUrl: '/template/admin/menu/courses/category.tmpl',\r\n                scope: {\r\n                    category: '=',\r\n                    courses: '=',\r\n                    onAddCourseToMenu: '&',\r\n                    onCreateCourse: '&',\r\n                    onRemoveCourse: '&',\r\n                    onEditCourse: '&'\r\n                },\r\n                controller: 'adminCoursesCategoryController'\r\n            };\r\n        }\r\n    ];\r\n\r\n    return adminCoursesCategory;\r\n});","\n/**\r\n * adminCourse.\r\n * @file adminCourse.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine('admin/menu/directives/courses/adminCourse',[], function() {\r\n    'use strict';\r\n\r\n    var adminCourse = [\r\n        function() {\r\n            return {\r\n                restrict: 'AE',\r\n                templateUrl: '/template/admin/menu/courses/course.tmpl',\r\n                scope: {\r\n                    course: '=',\r\n                    onAddCourseToMenu: '&',\r\n                    onRemoveCourse: '&',\r\n                    onEditCourse: '&'\r\n                },\r\n                controller: 'adminCourseController'\r\n            };\r\n        }\r\n    ];\r\n\r\n    return adminCourse;\r\n});","\n/**\r\n * directives.\r\n * @file directives.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('admin/menu/directives/directives',[\r\n        'angular',\r\n        'admin/menu/directives/menu/adminMenu',\r\n        'admin/menu/directives/menu/adminMenuCourse',\r\n        'admin/menu/directives/courses/adminCourses',\r\n        'admin/menu/directives/courses/adminCoursesCategory',\r\n        'admin/menu/directives/courses/adminCourse'\r\n    ],\r\n    function (angular, adminMenu, adminMenuCourse, adminCourses, adminCoursesCategory, adminCourse) {\r\n        'use strict';\r\n\r\n        var dependencies = [];\r\n        var directives = angular.module('lunchtime.admin.menu.directives', dependencies);\r\n\r\n        // Menu\r\n        directives.directive('ltAdminMenu', adminMenu);\r\n        directives.directive('ltAdminMenuCourse', adminMenuCourse);\r\n\r\n        // Courses\r\n        directives.directive('ltAdminCourses', adminCourses);\r\n        directives.directive('ltAdminCoursesCategory', adminCoursesCategory);\r\n        directives.directive('ltAdminCourse', adminCourse);\r\n\r\n        return directives;\r\n    });","\n/**\r\n * providers.\r\n * @file providers.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('admin/menu/providers/providers',['angular'], function (angular) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var providers = angular.module('lunchtime.admin.menu.providers', dependencies);\r\n\r\n    return providers;\r\n});","\n/**\r\n * templates.\r\n * @file templates.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('admin/menu/templates/templates',['angular'], function (angular) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var templates = angular.module('lunchtime.admin.menu.templates', dependencies);\r\n    \r\n    templates.run(['$templateCache', function ($templateCache) {\r\n        // $templateCache.put('templates/core/template.tmpl', template);\r\n    }]);\r\n\r\n    return templates;\r\n});","\n/**\r\n * Lunch Time Admin Menu Module.\r\n * @file _template.js.\r\n * @copyright Copyright\r\n */\r\ndefine('admin/menu/menu',['angular',\r\n        'admin/menu/controllers/controllers',\r\n        'admin/menu/services/services',\r\n        'admin/menu/filters/filters',\r\n        'admin/menu/directives/directives',\r\n        'admin/menu/providers/providers',\r\n        'admin/menu/templates/templates'],\r\n    function(angular, controllers, services, filters, directives, providers, templates) {\r\n        'use strict';\r\n\r\n        var dependencies = [\r\n            controllers.name,\r\n            services.name,\r\n            filters.name,\r\n            directives.name,\r\n            providers.name,\r\n            templates.name\r\n        ];\r\n\r\n        var template = angular.module('lunchtime.admin.menu', dependencies);\r\n\r\n        return template;\r\n    });","\n/**\r\n * adminSalesController.\r\n * @file adminSalesController.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/controllers/adminSalesController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils'], function(_, angular, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var adminSalesController = [\r\n        '$scope', '$q', '$modal', 'adminSalesService', 'adminSalesApiService', 'adminSalesDateWatcherService', 'salesData',\r\n        Class.create(\r\n            /**\r\n            * Admin Sales Controller\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} $q - Promise service.\r\n            * @param {object} $modal - Modal service.\r\n            * @param {object} adminSalesService - Admin Sales service.\r\n            * @param {object} adminSalesApiService - Admin Sales API service.\r\n            * @param {object} adminSalesDateWatcherService - Admin Sales date watcher service.\r\n            * @param {object} salesData - Sales Data.\r\n            * @constructor\r\n            */\r\n            function($scope, $q, $modal, adminSalesService, adminSalesApiService, adminSalesDateWatcherService, salesData) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                this.$q = $q;\r\n                this.$modal = $modal;\r\n                this.adminSalesService = adminSalesService;\r\n                this.adminSalesApiService = adminSalesApiService;\r\n                this.adminSalesDateWatcherService = adminSalesDateWatcherService;\r\n\r\n                this.initialize(salesData);\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    date: null,\r\n                    usersOrders: [],\r\n                    orderedCoursesStats: []\r\n                },\r\n\r\n                /** Promise service. */\r\n                $q: null,\r\n\r\n                /** Modal service. */\r\n                $modal: null,\r\n\r\n                /** Admin Sales service. */\r\n                adminSalesService: null,\r\n                \r\n                /** Admin Sales API service. */\r\n                adminSalesApiService: null,       \r\n                \r\n                /** Admin Sales date watcher service. */\r\n                adminSalesDateWatcherService: null,\r\n\r\n                /** \r\n                * Initialize controller. \r\n                * @param {object} salesData - Sales Data.\r\n                */\r\n                initialize: function(salesData) {\r\n                    assert.isNotNull(salesData, 'salesData');\r\n                    assert.isNotNull(salesData.date, 'salesData.date');\r\n                    assert.isArray(salesData.usersOrders, 'salesData.usersOrders');\r\n\r\n                    this.$scope.date = salesData.date;\r\n                    this.$scope.usersOrders = salesData.usersOrders;\r\n                   \r\n                    this.$scope.purchaseOrder = _.bind(this.purchaseOrder, this);\r\n                    this.$scope.undoPurchaseOrder = _.bind(this.undoPurchaseOrder, this);\r\n                    this.$scope.removeOrder = _.bind(this.removeOrder, this);\r\n\r\n                    this.$scope.$watch('usersOrders', _.bind(this.onOrdersChanged, this), true);\r\n\r\n                    this.$scope.$on('$destroy', _.bind(this.onDestroy, this));\r\n\r\n                    this.adminSalesDateWatcherService.watch();\r\n                },\r\n\r\n\r\n                /** \r\n                 * Orders changed handler.\r\n                 * @param {array} usersOrders - Users orders.\r\n                  */\r\n                onOrdersChanged: function(usersOrders) {\r\n                    this.$scope.orderedCoursesStats = this.adminSalesService.getOrderedCoursesStats(usersOrders);\r\n                },\r\n\r\n                /** \r\n                 * Purchase order. \r\n                 * @param {object} userOrder - User order.\r\n                 */\r\n                purchaseOrder: function (userOrder) {\r\n                    assert.isNotNull(userOrder, 'userOrder');\r\n\r\n                    var promise = this.adminSalesApiService.purchaseOrder(userOrder, this.$scope.date);\r\n\r\n                    return promise;\r\n                },\r\n\r\n\r\n                /** \r\n                 * Undo purchase order. \r\n                 * @param {object} userOrder - User order.\r\n                 */\r\n                undoPurchaseOrder: function (userOrder) {\r\n                    assert.isNotNull(userOrder, 'userOrder');\r\n\r\n                    var promise = this.adminSalesApiService.undoPurchaseOrder(userOrder, this.$scope.date);\r\n\r\n                    return promise;\r\n                },\r\n\r\n\r\n                /** \r\n                 * Remove order. \r\n                 * @param {object} userOrder - User order.\r\n                 */\r\n                removeOrder: function (userOrder) {\r\n                    assert.isNotNull(userOrder, 'userOrder');\r\n\r\n                    var promise = this.adminSalesApiService.removeOrder(userOrder, this.$scope.date);\r\n\r\n                    return promise;\r\n                },\r\n\r\n                /** Scope destroy handler. */\r\n                onDestroy: function () {\r\n                    this.adminSalesDateWatcherService.dispose();\r\n                }\r\n            })\r\n    ];\r\n\r\n    return adminSalesController;\r\n});","\n/**\r\n * adminSalesCoursesStatsController.\r\n * @file adminSalesCoursesStatsController.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/controllers/adminSalesCoursesStatsController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils'], function(_, angular, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var adminSalesCoursesStatsController = [\r\n        '$scope',\r\n        Class.create(\r\n            /**\r\n            * Admin Sales Courses Controller.\r\n            * @param {object} $scope - Controller scope service.\r\n            * @constructor\r\n            */\r\n            function($scope) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n\r\n                this.initialize();\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    date: null,\r\n                    coursesStats: []\r\n                },\r\n\r\n                /** \r\n                * Initialize controller. \r\n                */\r\n                initialize: function() {\r\n\r\n                }\r\n            })\r\n    ];\r\n\r\n    return adminSalesCoursesStatsController;\r\n});","\n/**\r\n * activeUserOrder.\r\n * @file activeUserOrder.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/models/activeUserOrder',[], function() {\r\n    'use strict';\r\n\r\n    /**\r\n     * Active user order.\r\n     * @param {object} userOrder - User order.\r\n     * @param {boolean} isActivatedByIdentityCard - Is activated by identity card.\r\n     * @constructor\r\n     */\r\n    var ActiveUserOrder = function (userOrder, isActivatedByIdentityCard) {\r\n        this.userOrder = userOrder;\r\n        this.isActivatedByIdentityCard = isActivatedByIdentityCard;\r\n    };\r\n\r\n    return ActiveUserOrder;\r\n});","\n/**\r\n * adminSalesUsersOrdersController.\r\n * @file adminSalesUsersOrdersController.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\n\r\ndefine(\r\n    'admin/sales/controllers/adminSalesUsersOrdersController',[\r\n        'underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils',\r\n        'admin/sales/models/activeUserOrder'\r\n    ],\r\n    function(_, angular, Class, assert, utils, ActiveUserOrder) {\r\n        'use strict';\r\n\r\n        var viewStates = {\r\n            userOrder: 'user-order',\r\n            usersOrders: 'users-orders'\r\n        };\r\n\r\n        var adminSalesUsersOrdersController = [\r\n            '$scope', '$modal', 'config', 'adminSalesService', 'adminSalesCardReaderService',\r\n            Class.create(\r\n                /**\r\n                * AdminSalesUsersOrdersController\r\n                * @param {object} $scope - Controller scope service.\r\n                * @param {object} $modal - Modal service.\r\n                * @param {object} config - Application config.\r\n                * @param {object} adminSalesService - Admin sales service.\r\n                * @param {object} adminSalesCardReaderService - Admin sales card reader service.\r\n                * @constructor\r\n                */\r\n                function($scope, $modal, config, adminSalesService, adminSalesCardReaderService) {\r\n                    this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n                    this.$modal = $modal;\r\n                    this.config = config;\r\n                    this.adminSalesService = adminSalesService;\r\n                    this.adminSalesCardReaderService = adminSalesCardReaderService;\r\n\r\n                    this.initialize();\r\n                }, {\r\n                    /** Controller scope defaults. */\r\n                    $scope: {\r\n                        date: null,\r\n                        salesStats: null,\r\n                        usersOrders: [],\r\n                        purchasedUsersOrders: [],\r\n                        notPurchasedUsersOrders: [],\r\n                        activeUserOrder: null,\r\n                        viewState: viewStates.usersOrders\r\n                    },                  \r\n\r\n                    /** Modal service. */\r\n                    $modal: null,\r\n\r\n                    /** Application config. */\r\n                    config: null,\r\n\r\n                    /** Admin sales service. */\r\n                    adminSalesService: null,\r\n\r\n                    /** Admin sales card reader service */\r\n                    adminSalesCardReaderService: null,\r\n\r\n                    /** Active modal dialog. */\r\n                    activeModal: null,\r\n\r\n                    /** \r\n                    * Initialize controller. \r\n                    */\r\n                    initialize: function() {\r\n                        this.$scope.viewUserOrder = _.bind(this.viewUserOrder, this);\r\n\r\n                        this.$scope.purchaseOrder = _.bind(this.purchaseOrder, this);\r\n                        this.$scope.undoPurchaseOrder = _.bind(this.undoPurchaseOrder, this);\r\n                        this.$scope.closeActiveUserOrder = _.bind(this.closeActiveUserOrder, this);\r\n                        \r\n                        this.$scope.$watch('usersOrders', _.bind(this.onOrdersChanged, this), true);\r\n                        this.$scope.$watch('activeUserOrder', _.bind(this.onActiveUserOrderChanged, this));\r\n\r\n                        this.adminSalesCardReaderService.onInput(_.bind(this.onCardReaderInput, this));\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * Orders changed handler.\r\n                     * @param {array} usersOrders - Users orders.\r\n                     */\r\n                    onOrdersChanged: function (usersOrders) {\r\n                        this.$scope.salesStats = this.adminSalesService.getSalesStats(usersOrders);\r\n\r\n                        this.$scope.purchasedUsersOrders = this.adminSalesService.getPurchasedUsersOrders(usersOrders);\r\n                        this.$scope.notPurchasedUsersOrders = this.adminSalesService.getNotPurchasedUsersOrders(usersOrders);\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * Active user order changed handler.\r\n                     * @param {array} activeUserOrder - Active user order.\r\n                     */\r\n                    onActiveUserOrderChanged: function (activeUserOrder) {\r\n                        if (!!activeUserOrder) {\r\n                            this.$scope.viewState = viewStates.userOrder;\r\n                        } else {\r\n                            this.$scope.viewState = viewStates.usersOrders;\r\n                        }\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * Purchase order.\r\n                     * @param {object} userOrder - User order.\r\n                     */\r\n                    purchaseOrder: function (userOrder) {\r\n                        assert.isNotNull(userOrder, 'userOrder');\r\n\r\n                        return this.$scope.onPurchaseOrder({ userOrder: userOrder });\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * Undo purchase order.\r\n                     * @param {object} userOrder - User order.\r\n                     */\r\n                    undoPurchaseOrder: function (userOrder) {\r\n                        assert.isNotNull(userOrder, 'userOrder');\r\n\r\n                        return this.$scope.onUndoPurchaseOrder({ userOrder: userOrder });\r\n                    },\r\n\r\n\r\n                    /** Close active user order */\r\n                    closeActiveUserOrder: function() {\r\n                        this.$scope.activeUserOrder = null;\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * Card reader input handler.\r\n                     * @param {object} event - Event.\r\n                     * @param {string} input - Card reader input.\r\n                     */\r\n                    onCardReaderInput: function(event, input) {\r\n                        assert.isNotNull(input, 'input');\r\n\r\n                        var identityNumber = this.adminSalesService.convertToIdentityNumber(input);\r\n\r\n                        var userOrder = this.adminSalesService.getUserOrderByIdentityNumber(this.$scope.usersOrders, identityNumber);\r\n\r\n                        if (!!userOrder) {\r\n\r\n                            if (userOrder.orders.length > 0) {\r\n\r\n                                var onOrderPurchased = function() {\r\n                                    this.$scope.activeUserOrder = new ActiveUserOrder(userOrder, true);\r\n                                };\r\n                                if (!userOrder.isPurchased) {\r\n                                    this.$scope.onPurchaseOrder({ userOrder: userOrder }).then(_.bind(onOrderPurchased, this));\r\n                                } else {\r\n                                    this.$scope.activeUserOrder = new ActiveUserOrder(userOrder, true);\r\n                                }\r\n\r\n                            } else {\r\n                                this.viewUserOrderNotFound(userOrder.user);\r\n                            }\r\n\r\n                        } else {\r\n                            this.viewUnknownUserIdentityNumber(input);\r\n                        }\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * View user order.\r\n                     * @param {object} userOrder - User order.\r\n                     */\r\n                    viewUserOrder: function(userOrder) {\r\n                        assert.isNotNull(userOrder, 'userOrder');\r\n\r\n                        this.$scope.activeUserOrder = new ActiveUserOrder(userOrder, false);\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * View user order not found. \r\n                     * @param {object} user - User.\r\n                     */\r\n                    viewUserOrderNotFound: function(user) {\r\n                        assert.isNotNull(user, 'user');\r\n\r\n                        var dialogOptions = _.extend({}, this.config.dialogOptions, {\r\n                            templateUrl: '/template/admin/sales/user-order/not-found.tmpl',\r\n                            controller: 'confirmController',\r\n                            resolve: {\r\n                                data: function() {\r\n                                    return {\r\n                                        user: user\r\n                                    };\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        this.dismissActiveModal();\r\n                        this.activeModal = this.$modal.open(dialogOptions);\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * View unknown user identity number. \r\n                     * @param {string} identityNumber - Identity number.\r\n                     */\r\n                    viewUnknownUserIdentityNumber: function(identityNumber) {\r\n                        assert.isNotNull(identityNumber, 'identityNumber');\r\n\r\n                        var dialogOptions = _.extend({}, this.config.dialogOptions, {\r\n                            templateUrl: '/template/admin/sales/unknown-identity-number.tmpl',\r\n                            controller: 'confirmController',\r\n                            resolve: {\r\n                                data: function() {\r\n                                    return {\r\n                                        identityNumber: identityNumber\r\n                                    };\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        this.dismissActiveModal();\r\n                        this.activeModal = this.$modal.open(dialogOptions);\r\n                    },\r\n\r\n\r\n                    /** Dismiss active modal. */\r\n                    dismissActiveModal: function() {\r\n                        if (this.activeModal) {\r\n                            try {\r\n                                this.activeModal.dismiss();\r\n                            } catch (e) {\r\n                            } finally {\r\n                                this.activeModal = null;\r\n                            }\r\n\r\n\r\n                        }\r\n                    }\r\n                })\r\n        ];\r\n\r\n        return adminSalesUsersOrdersController;\r\n    });","\n/**\r\n * adminSalesUserOrderController.\r\n * @file adminSalesUserOrderController.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\n\r\ndefine('admin/sales/controllers/adminSalesUserOrderController',['underscore', 'angular', 'framework/class', 'framework/assert', 'framework/utils'], function(_, angular, Class, assert, utils) {\r\n    'use strict';\r\n\r\n    var adminSalesUserOrderController = [\r\n        '$scope', 'orderService',\r\n        Class.create(\r\n            /**\r\n            * Admin sales user order controller.\r\n            * @param {object} $scope - Controller scope service.\r\n            * @param {object} orderService - Order service.\r\n            * @constructor\r\n            */\r\n            function($scope, orderService) {\r\n                this.$scope = utils.extend($scope, angular.copy(this.$scope), true);\r\n\r\n                this.orderService = orderService;\r\n\r\n                this.initialize();\r\n            }, {\r\n                /** Controller scope defaults. */\r\n                $scope: {\r\n                    activeUserOrder: null,\r\n                    userOrder: null,\r\n                    isActivatedByIdentityCard: false,\r\n                    orderedBoxes: null,\r\n                    state: {\r\n                        isUpdating: false\r\n                    }\r\n                },\r\n\r\n                /** Order service. */\r\n                orderService: null,\r\n\r\n\r\n                /** \r\n                * Initialize controller. \r\n                */\r\n                initialize: function() {\r\n                    this.$scope.purchaseOrder = _.bind(this.purchaseOrder, this);\r\n                    this.$scope.undoPurchaseOrder = _.bind(this.undoPurchaseOrder, this);\r\n\r\n                    this.$scope.close = _.bind(this.close, this);\r\n\r\n                    this.$scope.$watch('activeUserOrder', _.bind(this.onActiveUserOrderChanged, this));\r\n                },\r\n\r\n\r\n                /** \r\n                 * Active user order changed handler.\r\n                 * @param {array} activeUserOrder - Active user order.\r\n                 */\r\n                onActiveUserOrderChanged: function (activeUserOrder) {\r\n                    if (!activeUserOrder) {\r\n                        this.close();\r\n                        return;\r\n                    }\r\n\r\n                    this.$scope.userOrder = activeUserOrder.userOrder;\r\n                    this.$scope.isActivatedByIdentityCard = activeUserOrder.isActivatedByIdentityCard;\r\n\r\n                    this.$scope.orderedBoxes = this.orderService.groupOrdersByBoxes(this.$scope.userOrder.orders);\r\n                },\r\n\r\n\r\n                /** Purchase order. */\r\n                purchaseOrder: function() {\r\n                    this.$scope.state.isUpdating = true;\r\n\r\n                    var userOrder = this.$scope.userOrder;\r\n\r\n                    var promise = this.$scope.onPurchaseOrder({ userOrder: userOrder });\r\n\r\n                    promise.then(_.bind(function() {\r\n                        this.$scope.onClose();\r\n                    }, this));\r\n\r\n                    promise.finally(_.bind(function() {\r\n                        this.$scope.state.isUpdating = false;\r\n                    }, this));\r\n                },\r\n\r\n\r\n                /** Undo purchase order. */\r\n                undoPurchaseOrder: function() {\r\n                    this.$scope.state.isUpdating = true;\r\n\r\n                    var userOrder = this.$scope.userOrder;\r\n\r\n                    var promise = this.$scope.onUndoPurchaseOrder({ userOrder: userOrder });\r\n\r\n                    promise.then(_.bind(function() {\r\n                        this.$scope.onClose();\r\n                    }, this));\r\n\r\n                    promise.finally(_.bind(function() {\r\n                        this.$scope.state.isUpdating = false;\r\n                    }, this));\r\n                },\r\n\r\n\r\n                /** Close user order. */\r\n                close: function() {\r\n                    this.$scope.onClose();\r\n                }\r\n            })\r\n    ];\r\n\r\n    return adminSalesUserOrderController;\r\n});","\n/**\r\n * controllers.\r\n * @file controllers.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine(\r\n    'admin/sales/controllers/controllers',[\r\n        'angular',\r\n        'admin/sales/controllers/adminSalesController',\r\n        'admin/sales/controllers/adminSalesCoursesStatsController',\r\n        'admin/sales/controllers/adminSalesUsersOrdersController',\r\n        'admin/sales/controllers/adminSalesUserOrderController'\r\n    ],\r\n    function (angular, adminSalesController, adminSalesCoursesStatsController, adminSalesUsersOrdersController, adminSalesUserOrderController) {\r\n        'use strict';\r\n\r\n        var dependencies = [];\r\n        var controllers = angular.module('lunchtime.admin.sales.controllers', dependencies);\r\n        controllers.controller('adminSalesController', adminSalesController);\r\n        controllers.controller('adminSalesCoursesStatsController', adminSalesCoursesStatsController);\r\n        controllers.controller('adminSalesUsersOrdersController', adminSalesUsersOrdersController);\r\n        controllers.controller('adminSalesUserOrderController', adminSalesUserOrderController);\r\n\r\n        return controllers;\r\n    });","\n/**\r\n * orderedCourseStats.\r\n * @file orderedCourseStats.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/models/orderedCourseStats',['framework/assert'], function (assert) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Ordered course stats.\r\n     * @param {object} course - Course.\r\n     * @param {number} ordersLeft - Orders left count.\r\n     * @param {number} totalOrders - Total orders count.\r\n     * @constructor\r\n     */\r\n    var OrderedCourseStats = function (course, ordersLeft, totalOrders) {\r\n        assert.isNotNull(course, 'course');\r\n        assert.isNumber(ordersLeft, 'ordersLeft');\r\n        assert.isNumber(totalOrders, 'totalOrders');\r\n\r\n        this.course = course;\r\n        this.ordersLeft = ordersLeft;\r\n        this.totalOrders = totalOrders;\r\n    };\r\n\r\n    return OrderedCourseStats;\r\n});","\n/**\r\n * salesStats.\r\n * @file salesStats.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/models/salesStats',['framework/assert'], function (assert) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Sales stats.\r\n     * @param {number} ordersPurchased - Orders purchased count.\r\n     * @param {number} totalOrders - Total orders count.\r\n     * @constructor\r\n     */\r\n    var SalesStats = function (ordersPurchased, totalOrders) {\r\n        assert.isNumber(ordersPurchased, 'ordersPurchased');\r\n        assert.isNumber(totalOrders, 'totalOrders');\r\n\r\n        this.ordersPurchased = ordersPurchased;\r\n        this.totalOrders = totalOrders;\r\n    };\r\n\r\n    return SalesStats;\r\n});","\n/**\r\n * adminSalesService.\r\n * @file adminSalesService.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine(\r\n    'admin/sales/services/adminSalesService',[\r\n        'underscore',\r\n        'framework/assert',\r\n        'framework/utils',\r\n        'admin/sales/models/orderedCourseStats',\r\n        'admin/sales/models/salesStats'\r\n    ],\r\n    function (_, assert, utils, OrderedCourseStats, SalesStats) {\r\n        'use strict';\r\n\r\n        var adminSalesService = [\r\n            function() {\r\n\r\n                return {\r\n\r\n                    /** \r\n                     * Get ordered courses stats.\r\n                     * @param {array} usersOrders - Users orders.\r\n                     * @returns {array} Ordered courses stats.\r\n                     */\r\n                    getOrderedCoursesStats: function(usersOrders) {\r\n                        assert.isArray(usersOrders, 'usersOrders');\r\n\r\n                        var orderedCoursesStatsMap = {};\r\n\r\n                        _.each(usersOrders, function(userOrder) {\r\n                            _.each(userOrder.orders, function(order) {\r\n                                var course = order.course;\r\n\r\n                                var orderedCourseStat = orderedCoursesStatsMap[course.id];\r\n                                if (!orderedCourseStat) {\r\n                                    orderedCourseStat = new OrderedCourseStats(course, 0, 0);\r\n                                    orderedCoursesStatsMap[course.id] = orderedCourseStat;\r\n                                }\r\n\r\n                                orderedCourseStat.totalOrders += order.quantity;\r\n                                if (!userOrder.isPurchased) {\r\n                                    orderedCourseStat.ordersLeft += order.quantity;\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                        var orderedCoursesStats = _.values(orderedCoursesStatsMap);\r\n\r\n                        return orderedCoursesStats;\r\n                    },\r\n\r\n                    /** \r\n                     * Get sales stats.\r\n                     * @param {array} usersOrders - Users orders.\r\n                     * @returns {object} Sales stats.\r\n                     */\r\n                    getSalesStats: function(usersOrders) {\r\n                        assert.isArray(usersOrders, 'usersOrders');\r\n\r\n                        var ordersPurchased = 0;\r\n                        var totalOrders = usersOrders.length;\r\n\r\n                        _.each(usersOrders, function(userOrder) {\r\n                            if (userOrder.isPurchased) {\r\n                                ordersPurchased++;\r\n                            }\r\n                        });\r\n\r\n                        var salesStats = new SalesStats(ordersPurchased, totalOrders);\r\n\r\n                        return salesStats;\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * Get purchased users orders.\r\n                     * @param {array} usersOrders - Users orders.\r\n                     * @returns {array} Purchased users orders.\r\n                     */\r\n                    getPurchasedUsersOrders: function(usersOrders) {\r\n                        assert.isArray(usersOrders, 'usersOrders');\r\n\r\n                        var purchasedUsersOrders = _.filter(usersOrders, function(userOrder) {\r\n                            return userOrder.isPurchased;\r\n                        });\r\n\r\n                        return purchasedUsersOrders;\r\n                    },\r\n\r\n                    /** \r\n                     * Get not purchased users orders.\r\n                     * @param {array} usersOrders - Users orders.\r\n                     * @returns {array} Not purchased users orders.\r\n                     */\r\n                    getNotPurchasedUsersOrders: function(usersOrders) {\r\n                        assert.isArray(usersOrders, 'usersOrders');\r\n\r\n                        var notPurchasedUsersOrders = _.filter(usersOrders, function(userOrder) {\r\n                            return !userOrder.isPurchased;\r\n                        });\r\n\r\n                        return notPurchasedUsersOrders;\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * Get user order by identity number.\r\n                     * @param {array} usersOrders - Users orders.\r\n                     * @param {string} identityNumber - User identity number.\r\n                     * @returns {string} User with specified identity number.\r\n                     */\r\n                    getUserOrderByIdentityNumber: function(usersOrders, identityNumber) {\r\n                        assert.isArray(usersOrders, 'usersOrders');\r\n                        assert.isNotNull(identityNumber, 'identityNumber');\r\n\r\n                        var matchedUserOrder = _.find(usersOrders, function(userOrder) {\r\n                            return utils.string.equalsIgnoreCase(userOrder.user.identityNumber, identityNumber);\r\n                        });\r\n\r\n                        return matchedUserOrder;\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * Convert value to identity number.\r\n                     * @param {string} value - Value.\r\n                     * @returns {string} Identity number hex value (10 symbols).\r\n                      */\r\n                    convertToIdentityNumber: function(value) {\r\n                        var hexValue = Number(value).toString(16);\r\n\r\n                        for (var index = hexValue.length; index < 10; index++) {\r\n                            hexValue = '0' + hexValue;\r\n                        }\r\n\r\n                        return hexValue;\r\n                    }\r\n                };\r\n            }\r\n        ];\r\n\r\n        return adminSalesService;\r\n    });","\n/**\r\n * adminSalesApiService.\r\n * @file adminSalesApiService.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/services/adminSalesApiService',['underscore', 'angular', 'moment', 'framework/assert', 'framework/utils'],\r\n    function (_, angular, moment, assert, utils) {\r\n        'use strict';\r\n\r\n        var adminSalesApiService = [\r\n            '$http', '$q', 'admin.config', 'adminSalesApiMappingService', 'adminSalesQueueApiService',\r\n            function ($http, $q, adminConfig, adminSalesApiMappingService, adminSalesQueueApiService) {\r\n\r\n                var api = adminConfig.urls.api.sales;\r\n\r\n                return {\r\n\r\n                    /** \r\n                     * Get users orders for specified date.\r\n                     * @param {date} date - Date.\r\n                     */\r\n                    getUsersOrders: function(date) {\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var options = {\r\n                            params: {\r\n                                date: moment(date).format('YYYY-MM-DD')\r\n                            }\r\n                        };\r\n\r\n                        $http.get(api.getUsersOrders, options)\r\n                            .success(function(reponse) {\r\n                                assert.isNotNull(reponse, 'reponse');\r\n\r\n                                var salesData = adminSalesApiMappingService.mapResponseToSalesData(reponse);\r\n                                deferred.resolve(salesData);\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    },\r\n\r\n                    /** \r\n                     * Purchase order. \r\n                     * @param {object} userOrder - User order.\r\n                     * @param {date} date - Date.\r\n                     */\r\n                    purchaseOrder: function(userOrder, date) {\r\n                        assert.isNotNull(userOrder, 'userOrder');\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        if (userOrder.isPurchased) {\r\n                            $q.when(userOrder);\r\n                        }\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var data = {\r\n                            OrderId: userOrder.id,\r\n                            Date: moment(date).format('YYYY-MM-DD')\r\n                        };\r\n\r\n                        adminSalesQueueApiService.enqueue(api.purchaseOrder, data);\r\n\r\n                        userOrder.isPurchased = true;\r\n                        return $q.when(userOrder);\r\n/*                        $http.post(api.purchaseOrder, data)\r\n                            .success(function() {\r\n                                userOrder.isPurchased = true;\r\n\r\n                                deferred.resolve(userOrder);\r\n                            }).error(function(response, status) {\r\n                                deferred.reject(response);\r\n                            });*/\r\n\r\n                        return deferred.promise;\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * Undo purchase order. \r\n                     * @param {object} userOrder - User order.\r\n                     * @param {date} date - Date.\r\n                     */\r\n                    undoPurchaseOrder: function(userOrder, date) {\r\n                        assert.isNotNull(userOrder, 'userOrder');\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        if (!userOrder.isPurchased) {\r\n                            $q.when(userOrder);\r\n                        }\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var data = {\r\n                            OrderId: userOrder.id,\r\n                            Date: moment(date).format('YYYY-MM-DD')\r\n                        };\r\n\r\n                        adminSalesQueueApiService.enqueue(api.undoPurchaseOrder, data);\r\n\r\n                        userOrder.isPurchased = false;\r\n                        return $q.when(userOrder);\r\n\r\n/*                        $http.post(api.undoPurchaseOrder, data)\r\n                            .success(function() {\r\n                                userOrder.isPurchased = false;\r\n\r\n                                deferred.resolve(userOrder);\r\n                            }).error(function (response, status) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;*/\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * Remove order. \r\n                     * @param {object} userOrder - User order.\r\n                     * @param {date} date - Date.\r\n                     */\r\n                    removeOrder: function(userOrder, date) {\r\n                        assert.isNotNull(userOrder, 'userOrder');\r\n                        assert.isNotNull(date, 'date');\r\n\r\n                        var deferred = $q.defer();\r\n\r\n                        var data = {\r\n                            OrderId: userOrder.id,\r\n                            Date: moment(date).format('YYYY-MM-DD')\r\n                        };\r\n\r\n                        $http.post(api.undoPurchaseOrder, data)\r\n                            .success(function() {\r\n                                deferred.resolve(userOrder);\r\n                            }).error(function(response) {\r\n                                deferred.reject(response);\r\n                            });\r\n\r\n                        return deferred.promise;\r\n                    }\r\n                };\r\n            }\r\n        ];\r\n\r\n        return adminSalesApiService;\r\n    });","\n/**\r\n * user.\r\n * @file user.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('common/models/user',['framework/assert'], function(assert) {\r\n    'use strict';\r\n\r\n    /**\r\n     * User.\r\n     * @param {number} id - User ID.\r\n     * @param {string} name - User name.\r\n     * @param {string} identityNumber - User identity number.\r\n     * @constructor\r\n     */\r\n    var User = function (id, name, identityNumber) {\r\n        assert.isNotNull(id, 'id');\r\n        assert.isNotNull(name, 'name');\r\n        assert.isNotNull(identityNumber, 'identityNumber');\r\n\r\n        this.id = id;\r\n        this.name = name;\r\n        this.identityNumber = identityNumber;\r\n    };\r\n\r\n    return User;\r\n});","\n/**\r\n * userOrder.\r\n * @file userOrder.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/models/userOrder',['framework/assert'], function(assert) {\r\n    'use strict';\r\n\r\n    /**\r\n     * User order.\r\n     * @param {number} id - User order ID.\r\n     * @param {object} user - User.\r\n     * @param {array} orders - User orders.\r\n     * @param {boolean} isPurchased - Is orders purchased.\r\n     * @constructor\r\n     */\r\n    var UserOrder = function(id, user, orders, isPurchased) {\r\n        assert.isNotNull(id, 'id');\r\n        assert.isNotNull(user, 'user');\r\n        assert.isArray(orders, 'orders');\r\n\r\n        this.id = id;\r\n        this.user = user;\r\n        this.orders = orders;\r\n        this.isPurchased = isPurchased || false;\r\n    };\r\n\r\n    return UserOrder;\r\n});","\n/**\r\n * salesData.\r\n * @file salesData.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/models/salesData',['framework/assert'], function(assert) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Sales data.\r\n     * @param {date} date - Date.\r\n     * @param {array} usersOrders - Users orders.\r\n     * @constructor\r\n     */\r\n    var SalesData = function(date, usersOrders) {\r\n        assert.isNotNull(date, 'date');\r\n        assert.isArray(usersOrders, 'usersOrders');\r\n\r\n        this.date = date;\r\n        this.usersOrders = usersOrders;\r\n    };\r\n\r\n    return SalesData;\r\n});","\n/**\r\n * adminSalesApiMappingService.\r\n * @file adminSalesApiMappingService.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine(\r\n    'admin/sales/services/adminSalesApiMappingService',[\r\n        'underscore',\r\n        'moment',\r\n        'framework/assert',\r\n        'common/models/user',\r\n        'common/models/order',\r\n        'admin/sales/models/userOrder',\r\n        'admin/sales/models/salesData'\r\n    ],\r\n    function (_, moment, assert, User, Order, UserOrder, SalesData) {\r\n        'use strict';\r\n\r\n        var adminSalesApiMappingService = [\r\n            'commonApiMappingService',\r\n            function(commonApiMappingService) {\r\n                return {\r\n\r\n                    /** \r\n                     * Map response to sales data. \r\n                     * @param {object} response - Response with users orders.\r\n                     * @returns {object} Sales data.\r\n                     */\r\n                    mapResponseToSalesData: function (response) {\r\n                        assert.isNotNull(response, 'response');\r\n                        assert.isNotNull(response.Date, 'response.Date');\r\n                        assert.isArray(response.UsersOrders, 'response.UsersOrders');\r\n                       \r\n                        var date = moment(response.Date).toDate();\r\n\r\n                        var coursesMap = {};\r\n                        var usersOrders = _.map(response.UsersOrders, function(usersOrdersData) {\r\n                            return this.mapResponseToUserOrder(usersOrdersData, coursesMap);\r\n                        }, this);\r\n\r\n                        var salesData = new SalesData(date, usersOrders);\r\n\r\n                        return salesData;\r\n                    },\r\n\r\n\r\n                    /** \r\n                     * Map response to user order.\r\n                     * @param {object} response - Response with user order data.\r\n                     * @param {object} coursesMap - Courses map.\r\n                     * @returns {object} User order.\r\n                     */\r\n                    mapResponseToUserOrder: function (response, coursesMap) {\r\n                        assert.isNotNull(response, 'response');\r\n                        assert.isNotNull(response.OrderID, 'response.OrderID');\r\n                        assert.isNotNull(response.UserID, 'response.UserID');\r\n                        assert.isNotNull(response.UserName, 'response.UserName');\r\n                        assert.isArray(response.Orders, 'response.Orders');\r\n\r\n                        var userOrderId = response.OrderID;\r\n                        var user = new User(response.UserID, response.UserName, response.UserIdentityNumber || '');\r\n                        var isPurchased = response.IsPurchased || false;\r\n\r\n                        var orders = _.map(response.Orders, function (orderData) {\r\n                            assert.isNotNull(orderData, 'orderData');\r\n                            assert.isNotNull(orderData.Course, 'orderData.Course');\r\n\r\n                            var course = coursesMap[orderData.Course.ID];\r\n                            if (!course) {\r\n                                course = commonApiMappingService.mapResponseToCourse(orderData.Course);\r\n                                coursesMap[course.id] = course;\r\n                            }\r\n                            assert.isNotNull(course, 'course');\r\n\r\n                            var order = new Order(\r\n                                orderData.Course.OrderItemID,\r\n                                course,\r\n                                orderData.Quantity,\r\n                                orderData.Course.Boxindex\r\n                            );\r\n\r\n                            return order;\r\n                        });\r\n\r\n                        var userOrder = new UserOrder(userOrderId, user, orders, isPurchased);\r\n\r\n                        return userOrder;\r\n                    }\r\n\r\n                };\r\n            }\r\n        ];\r\n\r\n        return adminSalesApiMappingService;\r\n    });","\n/**\r\n * adminSalesCardReaderService.\r\n * @file adminSalesCardReaderService.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/services/adminSalesCardReaderService',['framework/assert'], function (assert) {\r\n    'use strict';\r\n\r\n    var adminSalesCardReaderService = [\r\n        '$document', '$window', '$rootScope', '$timeout', 'admin.events',\r\n        function ($document, $window, $rootScope, $timeout, adminEvents) {\r\n\r\n            var input = '';\r\n\r\n            var timeoutInterval = 1000;\r\n            var timeoutPromise = null;\r\n            var delta = 600;\r\n            var lastKeypressTime = 0;\r\n\r\n            // event.type должен быть keypress\r\n            var getSymbol = function(event) {\r\n                if (event.which == null) { // IE\r\n                    if (event.keyCode < 32) return null; // спец. символ\r\n                    return String.fromCharCode(event.keyCode);\r\n                }\r\n\r\n                if (event.which != 0 && event.charCode != 0) { // все кроме IE\r\n                    if (event.which < 32) return null; // спец. символ\r\n                    return String.fromCharCode(event.which); // остальные\r\n                }\r\n\r\n                return null; // спец. символ\r\n            };\r\n\r\n            return {\r\n\r\n                /** Start listenning for input. */\r\n                listen: function() {\r\n                    $document.on('keypress', function(event) {\r\n                        event = event || $window.event;\r\n\r\n                        // спец. сочетание - не обрабатываем\r\n                        if (event.ctrlKey || event.altKey || event.metaKey) return;\r\n\r\n                        var symbol = getSymbol(event || window.event);\r\n                        if (!symbol) return;\r\n\r\n                        var thisKeypressTime = new Date();\r\n                        if (thisKeypressTime - lastKeypressTime > delta) {\r\n                            lastKeypressTime = 0;\r\n                            input = '';\r\n                        }\r\n\r\n                        input += symbol;\r\n                        if (input.length == 10) {\r\n\r\n                            if (!timeoutPromise) {\r\n                                $rootScope.$broadcast(adminEvents.sales.cardReader.input, input);\r\n\r\n                                timeoutPromise = $timeout(function() {                                    \r\n                                    timeoutPromise = null;\r\n                                }, timeoutInterval);\r\n                            }\r\n\r\n                            lastKeypressTime = 0;\r\n                            input = '';\r\n                        }\r\n\r\n                        lastKeypressTime = thisKeypressTime;\r\n                    });\r\n                },\r\n\r\n                /** \r\n                 * On input handler.\r\n                 * @param {function} handler - Handler.\r\n                 */\r\n                onInput: function (handler) {\r\n                    assert.isFunction(handler, 'handler');\r\n\r\n                    $rootScope.$on(adminEvents.sales.cardReader.input, handler);\r\n                }\r\n            };\r\n        }\r\n    ];\r\n\r\n    return adminSalesCardReaderService;\r\n});","\n/**\r\n * adminSalesQueueApiService.\r\n * @file adminSalesQueueApiService.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/services/adminSalesQueueApiService',['underscore', 'framework/assert'], function(_, assert) {\r\n    'use strict';\r\n\r\n    var adminSalesQueueApiService = [\r\n        '$http', '$timeout', \r\n        function ($http, $timeout) {\r\n            var maxAttempts = 5;\r\n            var intervalBetweenAttempts = 3 * 1000;\r\n            var intervalAfterMaxAttempts = 1 * 60 * 1000;\r\n\r\n            return {\r\n                /** Is submitting queue. */\r\n                isSubmitting: false,\r\n\r\n                /** Queue. */\r\n                queue: [],\r\n\r\n                /** Current attempts count. */\r\n                attempsCount: 0,\r\n\r\n                /** Promise for timeout. */\r\n                timeoutPromise: null,\r\n\r\n\r\n                /** \r\n                 * Enqueue action.\r\n                 * @param {string} url - Url.\r\n                 * @param {object} data - Data.\r\n                  */\r\n                enqueue: function (url, data) {\r\n                    assert.isNotNull(url, 'url');\r\n\r\n                    this.attempsCount = 0;\r\n                    this.queue.push({ url: url, data: data });\r\n\r\n                    if (!this.isSubmitting) {\r\n                        this._submitQueue();\r\n                    }\r\n                },\r\n\r\n\r\n                /** Submit queued actions. */\r\n                _submitQueue: function() {\r\n                    if (this.queue.length === 0)\r\n                        return;\r\n\r\n                    if (this.timeoutPromise) {\r\n                        $timeout.cancel(this.timeoutPromise);\r\n                        this.timeoutPromise = null;\r\n                    }\r\n\r\n                    this.isSubmitting = true;\r\n\r\n                    var item = this.queue[0];\r\n                    $http.post(item.url, item.data)\r\n                        .success(_.bind(this._onSubmitted, this))\r\n                        .error(_.bind(this._onSubmitFailed, this));\r\n                },\r\n\r\n\r\n                /** Handler for action submit. */\r\n                _onSubmitted: function () {\r\n                    this.isSubmitting = false;\r\n\r\n                    this.attempsCount = 0;\r\n                    this.queue = this.queue.slice(1);\r\n\r\n                    this._submitQueue();\r\n                },\r\n\r\n                /** Handler for action submit failure. */\r\n                _onSubmitFailed: function(response, status) {\r\n                    // if HTTP timeout\r\n                    if (status === 0) {\r\n                        this.isSubmitting = false;\r\n\r\n                        this.attempsCount++;\r\n                        if (this.attempsCount >= maxAttempts) {\r\n                            this.attempsCount = 0;\r\n                            this.timeoutPromise = $timeout(_.bind(this._submitQueue, this), intervalAfterMaxAttempts);\r\n                        } else {\r\n                            this.timeoutPromise = $timeout(_.bind(this._submitQueue, this), intervalBetweenAttempts);\r\n                        }\r\n                    } else {\r\n                        this._onSubmitted();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    ];\r\n\r\n    return adminSalesQueueApiService;\r\n});","\n/**\r\n * adminSalesDateWatcherService.\r\n * @file adminSalesDateWatcherService.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/services/adminSalesDateWatcherService',['underscore'], function(_) {\r\n    'use strict';\r\n\r\n    var adminSalesDateWatcherService = [\r\n        '$interval', '$route',\r\n        function ($interval, $route) {\r\n            var interval = 60 * 1000;\r\n\r\n            return {\r\n                /** Promise for interval. */\r\n                intervalPromise: null,\r\n\r\n                /** Current date. */\r\n                date: null,\r\n\r\n                /** Watch for date change. */\r\n                watch: function() {\r\n                    this.date = new Date();\r\n                    this.intervalPromise = $interval(_.bind(this._checkDate, this), interval);\r\n                },\r\n\r\n                /** Dispose watcher. */\r\n                dispose: function () {\r\n                    this.date = null;\r\n\r\n                    if (this.intervalPromise) {\r\n                        $interval.cancel(this.intervalPromise);\r\n                        this.intervalPromise = null;\r\n                    }\r\n                },\r\n\r\n                /** Check for date change and reload route if date was changed. */\r\n                _checkDate: function() {\r\n                    var currentDate = new Date();\r\n                    var isDateChanged = currentDate.getDate() !== this.date.getDate() ||\r\n                        currentDate.getMonth() !== this.date.getMonth() ||\r\n                        currentDate.getFullYear() !== this.date.getFullYear();\r\n\r\n                    if (isDateChanged) {\r\n                        this.date = currentDate;\r\n                        $route.reload();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    ];\r\n\r\n    return adminSalesDateWatcherService;\r\n});","\n/**\r\n * services.\r\n * @file services.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine(\r\n    'admin/sales/services/services',[\r\n        'angular',\r\n        'admin/sales/services/adminSalesService',\r\n        'admin/sales/services/adminSalesApiService',\r\n        'admin/sales/services/adminSalesApiMappingService',\r\n        'admin/sales/services/adminSalesCardReaderService',\r\n        'admin/sales/services/adminSalesQueueApiService',\r\n        'admin/sales/services/adminSalesDateWatcherService'\r\n    ],\r\n    function (angular, adminSalesService, adminSalesApiService, adminSalesApiMappingService, adminSalesCardReaderService, adminSalesQueueApiService, adminSalesDateWatcherService) {\r\n        'use strict';\r\n\r\n        var dependencies = [];\r\n        var services = angular.module('lunchtime.admin.sales.services', dependencies);\r\n        services.service('adminSalesService', adminSalesService);\r\n        services.service('adminSalesApiService', adminSalesApiService);\r\n        services.service('adminSalesApiMappingService', adminSalesApiMappingService);\r\n        services.service('adminSalesCardReaderService', adminSalesCardReaderService);\r\n        services.service('adminSalesQueueApiService', adminSalesQueueApiService);\r\n        services.service('adminSalesDateWatcherService', adminSalesDateWatcherService);\r\n\r\n        return services;\r\n    });","\n/**\r\n * filters.\r\n * @file filters.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('admin/sales/filters/filters',['angular'], function (angular) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var filters = angular.module('lunchtime.admin.sales.filters', dependencies);\r\n    // filters.filter('filter', filter);\r\n\r\n    return filters;\r\n});","\n/**\r\n * adminSalesCoursesStats.\r\n * @file adminSalesCoursesStats.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/directives/adminSalesCoursesStats',[], function() {\r\n    'use strict';\r\n\r\n    var adminSalesCoursesStats = [\r\n        function() {\r\n\r\n            return {\r\n                restrict: 'AE',\r\n                templateUrl: '/template/admin/sales/courses-stats.tmpl',\r\n                scope: {\r\n                    date: '=',\r\n                    coursesStats: '='\r\n                },\r\n                controller: 'adminSalesCoursesStatsController'\r\n            };\r\n        }\r\n    ];\r\n\r\n    return adminSalesCoursesStats;\r\n});","\n/**\r\n * adminSalesUsersOrders.\r\n * @file adminSalesUsersOrders.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/directives/adminSalesUsersOrders',[], function() {\r\n    'use strict';\r\n\r\n    var adminSalesUsersOrders = [\r\n        function() {\r\n\r\n            return {\r\n                restrict: 'AE',\r\n                templateUrl: '/template/admin/sales/users-orders.tmpl',\r\n                scope: {\r\n                    date: '=',\r\n                    usersOrders: '=',\r\n                    onPurchaseOrder: '&',\r\n                    onUndoPurchaseOrder: '&',\r\n                    onRemoveOrder: '&'\r\n                },\r\n                controller: 'adminSalesUsersOrdersController'\r\n            };\r\n        }\r\n    ];\r\n\r\n    return adminSalesUsersOrders;\r\n});","\n/**\r\n * adminSalesUserOrder.\r\n * @file adminSalesUserOrder.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/directives/adminSalesUserOrder',[], function() {\r\n    'use strict';\r\n\r\n    var adminSalesUserOrder = [\r\n        function() {\r\n\r\n            return {\r\n                restrict: 'AE',\r\n                templateUrl: '/template/admin/sales/user-order.tmpl',\r\n                scope: {\r\n                    activeUserOrder: '=',\r\n                    onPurchaseOrder: '&',\r\n                    onUndoPurchaseOrder: '&',\r\n                    onClose: '&'\r\n                },\r\n                controller: 'adminSalesUserOrderController'\r\n            };\r\n        }\r\n    ];\r\n\r\n    return adminSalesUserOrder;\r\n});","\n/**\r\n * directives.\r\n * @file directives.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine(\r\n    'admin/sales/directives/directives',[\r\n        'angular',\r\n        'admin/sales/directives/adminSalesCoursesStats',\r\n        'admin/sales/directives/adminSalesUsersOrders',\r\n        'admin/sales/directives/adminSalesUserOrder'\r\n    ],\r\n    function (angular, adminSalesCoursesStats, adminSalesUsersOrders, adminSalesUserOrder) {\r\n        'use strict';\r\n\r\n        var dependencies = [];\r\n        var directives = angular.module('lunchtime.admin.sales.directives', dependencies);\r\n        directives.directive('ltAdminSalesCoursesStats', adminSalesCoursesStats);\r\n        directives.directive('ltAdminSalesUsersOrders', adminSalesUsersOrders);\r\n        directives.directive('ltAdminSalesUserOrder', adminSalesUserOrder);\r\n\r\n        return directives;\r\n    });","\n/**\r\n * providers.\r\n * @file providers.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('admin/sales/providers/providers',['angular'], function (angular) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var providers = angular.module('lunchtime.admin.sales.providers', dependencies);\r\n\r\n    return providers;\r\n});","\n/**\r\n * templates.\r\n * @file templates.js.\r\n * @copyright Copyright ©\r\n */\r\ndefine('admin/sales/templates/templates',['angular'], function (angular) {\r\n    'use strict';\r\n\r\n    var dependencies = [];\r\n    var templates = angular.module('lunchtime.admin.sales.templates', dependencies);\r\n    \r\n    templates.run(['$templateCache', function ($templateCache) {\r\n        // $templateCache.put('templates/core/template.tmpl', template);\r\n    }]);\r\n\r\n    return templates;\r\n});","\n/**\r\n * sales.start.\r\n * @file sales.start.js.\r\n * @copyright Copyright © InterMedia RUS 2014\r\n */\r\ndefine('admin/sales/sales.start',[], function() {\r\n    'use strict';\r\n\r\n    var salesStart = {\r\n        /** Initialize card reader. */\r\n        initializeCardReader: [\r\n            'adminSalesCardReaderService', function(adminSalesCardReaderService) {\r\n                adminSalesCardReaderService.listen();\r\n            }\r\n        ]\r\n    };\r\n\r\n    return salesStart;\r\n});","\n/**\r\n * Lunch Time Admin sales Module.\r\n * @file sales.js.\r\n * @copyright Copyright\r\n */\r\ndefine('admin/sales/sales',[\r\n    'angular',\r\n        'admin/sales/controllers/controllers',\r\n        'admin/sales/services/services',\r\n        'admin/sales/filters/filters',\r\n        'admin/sales/directives/directives',\r\n        'admin/sales/providers/providers',\r\n        'admin/sales/templates/templates',\r\n        'admin/sales/sales.start'\r\n],\r\n    function (angular, controllers, services, filters, directives, providers, templates, startHandler) {\r\n        'use strict';\r\n\r\n        var dependencies = [\r\n            controllers.name,\r\n            services.name,\r\n            filters.name,\r\n            directives.name,\r\n            providers.name,\r\n            templates.name\r\n        ];\r\n\r\n        var sales = angular.module('lunchtime.admin.sales', dependencies);\r\n        sales.run(startHandler.initializeCardReader);\r\n\r\n        return sales;\r\n    });","\n/**\r\n * admin module.\r\n * @file admin.js.\r\n * @copyright Copyright © InterMedia RUS 2013\r\n */\r\ndefine(\r\n    'admin/admin',[\r\n        'angular',\r\n        'common/common',\r\n        'admin/admin.config',\r\n        'admin/admin.routes',\r\n        'admin/admin.events',\r\n        'admin/menu/menu',\r\n        'admin/sales/sales'\r\n    ],\r\n    function(angular, common, adminConfig, adminRoutes, adminEvents, menuModule, salesModule) {\r\n        'use strict';\r\n\r\n        var dependencies = [\r\n            common.name,\r\n            menuModule.name,\r\n            salesModule.name\r\n        ];\r\n\r\n        var adminModule = angular.module('lunchtime.admin', dependencies);\r\n        adminModule.constant('admin.config', adminConfig);\r\n        adminModule.constant('admin.events', adminEvents);\r\n        adminModule.config(adminRoutes);\r\n\r\n        return adminModule;\r\n    });","\n/**\r\n * Lunch Time Application.\r\n * @file application.js.\r\n * @copyright Copyright\r\n */\r\ndefine('application',[\r\n        'angular',\r\n        'application.config',\r\n        'application.routes',\r\n        'application.providers',\r\n        'application.start',\r\n        'angular-route',\r\n        'angular-sanitize',\r\n        'angular-bootstrap',\r\n        'core/core',\r\n        'common/common',\r\n        'user/user',\r\n        'admin/admin'\r\n    ],\r\n    function(angular, config, routes, providers, startHandler, ngRoute, ngSanitize, uiBootstrap, coreModule, commonModule, userModule, adminModule) {\r\n        'use strict';\r\n\r\n        var dependencies = [\r\n            'ngRoute',\r\n            'ngSanitize',\r\n            'ui.bootstrap',\r\n            coreModule.name,\r\n            commonModule.name,\r\n            userModule.name,\r\n            adminModule.name\r\n        ];\r\n\r\n        var lunchtimeApplication = angular.module('lunchtime.application', dependencies);\r\n        lunchtimeApplication.constant('config', config);\r\n\r\n        lunchtimeApplication.config(routes);\r\n        /*        lunchtimeApplication.config(providers);\r\n\r\n        lunchtimeApplication.run(startHandler.onRouteChange);\r\n        */\r\n\r\n        return lunchtimeApplication;\r\n    });"]}