@model Dinner.Models.LocalPasswordModel


@using (Html.BeginForm("Manage", "Account"))
{
    <div class="form-group">
        @Html.AntiForgeryToken()
        @Html.ValidationMessage("Exception")
        @if (!string.IsNullOrEmpty(ViewBag.StatusMessage))
        {
            <div class="alert alert-success alert-inline">
                @ViewBag.StatusMessage
            </div>
        }
    </div>
    <div class="form-group with-icon-over-input">
        @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", placeholder = "Пароль" })
        <i class="icon glyphicon glyphicon-lock text-muted"></i>
        <span class="text-danger">
            @Html.ValidationMessageFor(m => m.OldPassword)
        </span>
    </div>
    <div class="form-group with-icon-over-input">
        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", placeholder = "Новый пароль" })
        <i class="icon glyphicon glyphicon-lock text-muted"></i>
        <span class="text-danger">
            @Html.ValidationMessageFor(m => m.NewPassword)
        </span>
    </div>
    <div class="form-group with-icon-over-input">
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Подтверждение пароля" })
        <i class="icon glyphicon glyphicon-lock text-muted"></i>
        <span class="text-danger">
            @Html.ValidationMessageFor(m => m.ConfirmPassword)
        </span>
    </div>    
    <div class="form-group text-center">
        <input type="submit" value="Изменить пароль" class="btn btn-success btn-block" />
    </div>       
}
